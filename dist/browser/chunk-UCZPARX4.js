import{a as ct,d as Nr,e as mt,f as ft,g as Ar}from"./chunk-Z4BZODWU.js";import{a as Br}from"./chunk-ICBSQ6ZV.js";import{a as wr,b as Ir,c as br,d as Sr,g as Oe,i as Rr,j as Tr,k as at,m as Pr,n as ot,o as Cr,p as lt,q as Or,s as Dr,t as Er}from"./chunk-S6Y4J3SQ.js";import{a as Xe,b as vr,c as _r,d as Fr,f as st,g as nt,h as Ye,i as Mr,j as kr}from"./chunk-3BRLBEA5.js";import"./chunk-MYYAF3XU.js";import{a as ir,b as ke,c as ur,d as be,e as pr,f as hr}from"./chunk-IK4F62RZ.js";import{b as Pe,d as sr,e as rt,f as Ie,g as nr,h as Ce,i as Ue,j as ar,k as or,l as lr,m as it}from"./chunk-OAUXHUNP.js";import{F as tr,G as rr,H as we,R as dr,a as tt,b as Me,c as Wt,d as Vt,e as qt,f as Gt,g as jt,h as Ut,i as $t,j as Xt,k as Yt,l as Kt,m as re,n as ie}from"./chunk-S2AUTMW4.js";import{A as mr,B as fr,H as yr,b as Lt,c as te,s as Ge,t as Qt,u as Zt,v as er,w as je,z as cr}from"./chunk-QUKG3PAE.js";import"./chunk-DWAHQUVA.js";import"./chunk-VGW7YJZ7.js";import"./chunk-YW3L7OMP.js";import"./chunk-JKNGMCUA.js";import"./chunk-WHNNLNN4.js";import{a as At}from"./chunk-4YLYZGNM.js";import{c as zt}from"./chunk-MXNDRZNB.js";import{a as Bt}from"./chunk-XWKYTQFT.js";import{a as Ht}from"./chunk-RAIGRXV3.js";import"./chunk-UULYHJV4.js";import{a as Fe}from"./chunk-WDTJILD4.js";import{a as Jt}from"./chunk-6J7DCVWC.js";import{a as Ct}from"./chunk-CIQJCIGH.js";import{a as Pt}from"./chunk-RI77TKRA.js";import"./chunk-UW2TVJUN.js";import"./chunk-LGUXUFJ7.js";import{a as Ot}from"./chunk-Z7MKEISX.js";import{a as xr}from"./chunk-5L5TH44W.js";import{a as kt}from"./chunk-URPONBMS.js";import{e as $e,f as gr}from"./chunk-QB3NROF7.js";import{a as Jr}from"./chunk-5WCYRI4X.js";import"./chunk-DR5NPQZL.js";import"./chunk-BGARZEEH.js";import"./chunk-B3I4XIHJ.js";import"./chunk-6EFGHIXX.js";import"./chunk-DZ3DW7ED.js";import"./chunk-3XRT3SNQ.js";import{a as xe}from"./chunk-YEFTRNE3.js";import"./chunk-JBJTQF7V.js";import"./chunk-CN5O6E6T.js";import{n as Nt}from"./chunk-4KJ462UD.js";import"./chunk-HSB35X5B.js";import"./chunk-FBHJEXCM.js";import"./chunk-IFUI4HFB.js";import"./chunk-JOOJSGLF.js";import"./chunk-MYELF7MV.js";import"./chunk-MS3ZOARX.js";import"./chunk-KCKP7FIY.js";import"./chunk-7K4WIBFN.js";import"./chunk-45GFWXQC.js";import"./chunk-AUVYUYNK.js";import"./chunk-C7M5MSEL.js";import"./chunk-HPJ6EQFO.js";import{a as qe,b as Q}from"./chunk-HUZLTBDZ.js";import"./chunk-V2JYXY4D.js";import"./chunk-5MJXKSZ4.js";import"./chunk-LGGJOMLJ.js";import"./chunk-VVAIF23J.js";import{g as Ve}from"./chunk-HI2T2YSZ.js";import"./chunk-O5K35OSE.js";import{a as Et}from"./chunk-D6LLE2YP.js";import"./chunk-I3S324BU.js";import{c as ue}from"./chunk-O5IGEGOS.js";import"./chunk-MXH75ZNY.js";import"./chunk-PQKTT6AH.js";import"./chunk-OM24DGCK.js";import"./chunk-YQRTHGFD.js";import"./chunk-QAVDKCSH.js";import"./chunk-H2AOS66Z.js";import"./chunk-YH4Z47PR.js";import"./chunk-CJJRHJ2S.js";import"./chunk-574KRDZU.js";import"./chunk-2APWMENK.js";import"./chunk-JOYABHZZ.js";import"./chunk-IEXZWAIE.js";import"./chunk-VDN3XKL2.js";import"./chunk-SVEGZVCP.js";import"./chunk-AQ74ANSJ.js";import"./chunk-SAOUSUZE.js";import"./chunk-6MGDEI2H.js";import"./chunk-QSGARGRB.js";import"./chunk-SREKDU6P.js";import"./chunk-IXIJFOEL.js";import"./chunk-QZ4L25WE.js";import"./chunk-4ATIL3QV.js";import{a as Dt}from"./chunk-WUM4JBII.js";import"./chunk-URUYU25U.js";import"./chunk-3S2DT2SI.js";import"./chunk-7PPV2CP7.js";import"./chunk-U62SHMHB.js";import"./chunk-55ESOXMJ.js";import"./chunk-BCREO4Q5.js";import"./chunk-EJ3VIBAJ.js";import"./chunk-4LHUJTP5.js";import"./chunk-NBRBW7H5.js";import{a as Tt}from"./chunk-CBOFHDSC.js";import"./chunk-HB7BVTLV.js";import"./chunk-WZKL6OPG.js";import"./chunk-WF37UVOV.js";import"./chunk-UZQ577CU.js";import"./chunk-FC3MPJI4.js";import"./chunk-5ETRXDS4.js";import"./chunk-QDNKD3H5.js";import"./chunk-F72O5PVM.js";import"./chunk-B4PK7RBX.js";import"./chunk-6J4Y65BV.js";import{a as vt}from"./chunk-RXHILZH7.js";import"./chunk-PEPXQ7N3.js";import"./chunk-VU5W7W6Y.js";import{j as H}from"./chunk-6QIKBCPR.js";import{i as L}from"./chunk-AHKJJNRE.js";import{a as Mt}from"./chunk-HBTOKQC5.js";import{b as z}from"./chunk-A52LT7YB.js";import{R as et,o as _t,s as Ft}from"./chunk-CZPMRK53.js";import"./chunk-IDSF2RZ6.js";import"./chunk-2BBIRZVO.js";import"./chunk-WQAXQD4X.js";import"./chunk-IUPUERVS.js";import{$ as We,g as Rt}from"./chunk-XF4NUYV7.js";import{h as St}from"./chunk-FNDPIYNC.js";import{H as S}from"./chunk-WMYPRHRR.js";import{H as bt,R as V,y as ge}from"./chunk-IAMDMFZ7.js";import{a as I}from"./chunk-53MWZ23O.js";import{h as gt,k as xt,m as wt,r as Le,y as It}from"./chunk-PT7S6WNL.js";import{a as yt}from"./chunk-XDTDVCGP.js";import"./chunk-JPDAKIWT.js";import{p as oe,r as D}from"./chunk-465DRXTW.js";import{a as dt,p as _e}from"./chunk-AC62Z3FX.js";import{a as E,b as N,g as v}from"./chunk-ESDYQQXO.js";var zr=8,Zr=256,$=class extends vt(St){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){return v(this,null,function*(){let t=Pe();this.addResolvingPromise(t),yield this.when()})}normalizeCtorArgs(t){return t?.ioConfig&&(t=N(E({},t),{ioConfig:E({resolution:null,bandIds:null,sampling:"closest",tileInfo:Q.create()},t.ioConfig)})),t}get _isGlobalWrappableSource(){let{rasterInfo:t}=this,e=Ce(t.spatialReference);return e!=null&&t.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){let{transform:t}=this.rasterInfo;return t==null||t.type==="gcs-shift"}set rasterJobHandler(t){this._set("rasterJobHandler",t),this.datasetFormat==="Function"&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=t)}set url(t){this._set("url",Ve(t,oe.getLogger(this)))}open(t){return v(this,null,function*(){throw new D("BaseRaster:open-not-implemented","open() is not implemented")})}fetchTile(s,n,a){return v(this,arguments,function*(t,e,i,r={}){let l=r.tileInfo||this.rasterInfo.storageInfo.tileInfo,o=this.getTileExtentFromTileInfo(t,e,i,l);return this.fetchPixels(o,l.size[0],l.size[1],r)})}identify(i){return v(this,arguments,function*(t,e={}){t=ge(L,t).clone().normalize();let{multidimensionalDefinition:r,timeExtent:s}=e,{rasterInfo:n}=this,{hasMultidimensionalTranspose:a,multidimensionalInfo:l}=n,{transposedVariableName:o}=e,c=l!=null&&a&&(s!=null||Ye(r));c&&!o&&(o=r!=null&&r.length>0?r[0].variableName??void 0:l.variables[0].name,e=N(E({},e),{transposedVariableName:o})),e=this._getRequestOptionsWithSliceId(e);let{spatialReference:f,extent:u}=n,{datumTransformation:p}=e,m=rt(t,f,p);if(!u.intersects(m))return{location:m,value:null};if(n.transform!=null){let C=n.transform.inverseTransform(m);if(!n.nativeExtent.intersects(C))return{location:C,value:null};m=C}let h=0,d=o!=null&&l!=null&&n.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){let C=this.primaryRasters.rasters[0];if(d)return C.identify(m,e);let{pixelSize:O}=n,A=3,W=O.x*A/2,q=O.y*A/2,J=new H({xmin:m.x-W,xmax:m.x+W,ymin:m.y-q,ymax:m.y+q,spatialReference:f}),B={interpolation:"nearest"},{pixelBlock:j}=yield C.fetchPixels(J,A,A,B),{pixelBlock:U}=yield this.fetchPixels(J,A,A,B);if(j==null)return{location:m,value:null};let Z=Math.floor(A*A*.5),me=!j.mask||j.mask[Z]?j.pixels.map(ae=>ae[Z]):null,ne;return U!=null&&(ne=!U.mask||U.mask[Z]?U.pixels.map(ae=>ae[Z]):void 0),{location:m,value:me,processedValue:ne,pyramidLevel:0}}if(!d){if(e.srcResolution)h=it(e.srcResolution,n,this.ioConfig.sampling).pyramidLevel;else if(h=yield this.computeBestPyramidLevelForLocation(t,e),h==null)return{location:m,value:null}}let y=this.identifyPixelLocation(m,h,null,d);if(y===null)return{location:m,value:null};let{row:g,col:w,rowOffset:x,colOffset:b,blockWidth:T}=y,F=o??e.sliceId,R=ct(this.url,F),k=`${h}/${g}/${w}`,P=mt(R,null,k);P==null&&(P=this.fetchRawTile(h,g,w,e),ft(R,null,k,P));let _=yield P;if(!_?.pixels?.length)return{location:m,value:null};let M=x*T+b;return this._processIdentifyResult(_,{srcLocation:m,position:M,pyramidLevel:h,useTransposedTile:!!d,requestSomeSlices:c,identifyOptions:e})})}fetchPixels(s,n,a){return v(this,arguments,function*(t,e,i,r={}){t=lr(t),r=this._getRequestOptionsWithSliceId(r);let{_hasNoneOrGCSShiftTransform:l}=this;if(r.requestRawData&&l)return this._fetchPixels(t,e,i,r);let o=Ce(t.spatialReference),c=Ue(t);if(o==null||c===0||c===1&&this._isGlobalWrappableSource&&l)return this._fetchPixels(t,e,i,r);if(c>=3)return{extent:t,pixelBlock:null};let f=[],{xmin:u,xmax:p}=t,m=Math.round(o/(p-u)*e),h=m-Math.round((o/2-u)/(p-u)*e),d=0,y=[];for(let b=0;b<=c;b++){let T=new H({xmin:b===0?u:-o/2,xmax:b===c?p-o*b:o/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),F=b===0?m-h:b===c?e-d:m;d+=F,y.push(F);let R=r.disableWrapAround&&b>0?null:this._fetchPixels(T,F,i,r);f.push(R)}let g=(yield Promise.all(f)).map(b=>b?.pixelBlock),w=null,x={width:e,height:i};return this.rasterJobHandler?w=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:y},r)).pixelBlock:w=Ge(g,x,{blockWidths:y}),{extent:t,srcExtent:Ie(t,this.rasterInfo.spatialReference,r.datumTransformation),pixelBlock:w}})}fetchRawPixels(s,n,a){return v(this,arguments,function*(t,e,i,r={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};let l=yield this._fetchRawTiles(t,e,i,r),{nativeExtent:o,nativePixelSize:c,storageInfo:f}=this.rasterInfo,u=2**t,p=c.x*u,m=c.y*u,h=new H({xmin:o.xmin+p*e.x,xmax:o.xmin+p*(e.x+i.width-1),ymin:o.ymax-m*(e.y+i.height-1),ymax:o.ymax-m*e.y,spatialReference:o.spatialReference});if(!l)return{extent:h,srcExtent:h,pixelBlock:null};let{pixelBlocks:d,mosaicSize:y}=l;if(d.length===1&&d[0]!=null&&d[0].width===i.width&&d[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:l.pixelBlocks[0]};let g=t>0?f.pyramidBlockWidth:f.blockWidth,w=t>0?f.pyramidBlockHeight:f.blockHeight,x={x:e.x%g,y:e.y%w},b;return this.rasterJobHandler?b=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:y,destDimension:i,clipOffset:x,clipSize:i,coefs:null,sampleSpacing:null,interpolation:r.interpolation,alignmentInfo:null,blockWidths:null},r)).pixelBlock:b=Ge(d,y,{clipOffset:x,clipSize:i}),{extent:h,srcExtent:h,pixelBlock:b}})}fetchRawTile(t,e,i,r){throw new D("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Ie(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?Kt(t,e):this.rasterJobHandler.decode({data:t,options:e})}request(t,e,i=0){return v(this,null,function*(){let{customFetchParameters:r}=this.ioConfig,{range:s,query:n,headers:a}=e;i=i??e.retryCount??this.ioConfig.retryCount;let l=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return yield We(t,N(E({},e),{query:E(E({},n),r),headers:E(E({},a),l)}))}catch(o){if(i>0)return i--,this.request(t,e,i);throw o}})}getSliceIndex(t){let{multidimensionalInfo:e}=this.rasterInfo;return e==null||t==null||t.length===0?null:kr(t,e)}getTileExtentFromTileInfo(t,e,i,r){let s=r.lodAt(t);return this.getTileExtent({x:s.resolution,y:s.resolution},e,i,r.origin,r.spatialReference,r.size)}updateTileInfo(){let{storageInfo:t,spatialReference:e,extent:i,pixelSize:r}=this.rasterInfo;if(!t.tileInfo){let s=[],n=t.maximumPyramidLevel||0,a=Math.max(r.x,r.y),l=1/.0254*96*a;for(let c=0;c<=n;c++)s.unshift(new qe({level:n-c,resolution:a,scale:l})),a*=2,l*=2;let o=new L({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new Q({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:s}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,r){let{width:s,height:n,nativeExtent:a,pixelSize:l,spatialReference:o}=t,c=new L({x:a.xmin,y:a.ymax,spatialReference:o});r==null&&(r=Math.max(0,Math.round(Math.log(Math.max(s,n))/Math.LN2-8)));let f=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[l],r);t.storageInfo=new re({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:f})}computeBestPyramidLevelForLocation(i){return v(this,arguments,function*(t,e={}){return 0})}computeBlockBoundary(t,e,i,r,s,n=0,a=2){if(s.length===1&&n>0){s=[...s];let{x:f,y:u}=s[0];for(let p=0;p<n;p++)f*=a,u*=a,s.push({x:f,y:u})}let l=[],{x:o,y:c}=r;for(let f=0;f<s.length;f++){let{x:u,y:p}=s[f];l.push({minCol:Math.floor((t.xmin-o+.1*u)/e/u),maxCol:Math.floor((t.xmax-o-.1*u)/e/u),minRow:Math.floor((c-t.ymax+.1*p)/i/p),maxRow:Math.floor((c-t.ymin-.1*p)/i/p)})}return l}getPyramidPixelSize(t){let{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(t===0)return e;if(i!=null&&i.length)return i[t-1];let s=r**t;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(t,e,i,r){let{spatialReference:s,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=a,f=r&&c!=null?c.tileSize[0]:a.blockWidth,u=r&&c!=null?c.tileSize[1]:a.blockHeight,p=rt(t,s,i);if(!n.intersects(p)||e<0||e>l)return null;let m=this.getPyramidPixelSize(e),{x:h,y:d}=m,y=(o.y-p.y)/d/u,g=(p.x-o.x)/h/f,w=Math.min(u-1,Math.floor((y-Math.floor(y))*u)),x=Math.min(f-1,Math.floor((g-Math.floor(g))*f));return{pyramidLevel:e,row:Math.floor(y),col:Math.floor(g),rowOffset:w,colOffset:x,blockWidth:f,srcLocation:p}}getTileExtent(t,e,i,r,s,n){let[a,l]=n,o=r.x+i*a*t.x,c=o+a*t.x,f=r.y-e*l*t.y,u=f-l*t.y;return new H({xmin:o,xmax:c,ymin:u,ymax:f,spatialReference:s})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){let r=this.rasterInfo.storageInfo.blockBoundary[t];return!r||r.maxRow<e||r.maxCol<i||r.minRow>e||r.minCol>i}_fetchPixels(s,n,a){return v(this,arguments,function*(t,e,i,r={}){let l=Ue(t);if(l>=2)return{extent:t,pixelBlock:null};let o=this._getSourceDataInfo(t,e,i,r),{pyramidLevel:c,srcResolution:f,srcExtent:u,srcWidth:p,srcHeight:m,ul:h}=o;if(p===0||m===0)return{extent:t,srcExtent:u,pixelBlock:null};let{rasterInfo:d}=this,y=d.transform,g=y?.type==="gcs-shift",w=Ce(t.spatialReference)!=null;!g&&w||(l=Ue(o.srcExtent,g));let x=yield this._fetchRawTiles(c,h,{width:p,height:m,wrapCount:l},r);if(!x)return{extent:t,srcExtent:u,pixelBlock:null};let b=d.storageInfo,T=c>0?b.pyramidBlockWidth:b.blockWidth,F=c>0?b.pyramidBlockHeight:b.blockHeight,{x:R,y:k}=d.pixelSize;if(c>0){let{pyramidResolutions:fe,pyramidScalingFactor:Qr}=b;if(fe!=null&&fe[c-1])({x:R,y:k}=fe[c-1]);else{let ht=Qr**c;R*=ht,k*=ht}}let P=d.spatialReference,_=new L({x:R,y:k,spatialReference:P}),M=T===p&&F===m&&h.x%T==0&&h.y%F==0,C=new L({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),O=!t.spatialReference.equals(P),A=P.isGeographic?1e-9:1e-4,{datumTransformation:W}=r;if(!O&&M&&x.pixelBlocks.length===1&&T===e&&F===i&&this._isSameResolution(f,C,A))return{extent:t,srcExtent:u,srcTilePixelSize:_,pixelBlock:x.pixelBlocks[0]};let q=w&&Ce(u.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,J=r.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");J&&!this.rasterJobHandler&&(yield Pe());let B=this.rasterJobHandler?yield this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:x.extent,pixelSize:C.toJSON(),datumTransformation:W,rasterTransform:y,hasWrapAround:l>0||q,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:J},r):or({projectedExtent:t,srcBufferExtent:x.extent,pixelSize:C,datumTransformation:W,rasterTransform:y,hasWrapAround:l>0||q,isAdaptive:!1,includeGCSGrid:J}),j,U=!r.requestRawData,Z={rows:B.spacing[0],cols:B.spacing[1]},me=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(c,x.extent.xmin):void 0,{pixelBlocks:ne,mosaicSize:ae,isPartiallyFilled:Kr}=x,He=null;if(this.rasterJobHandler)({pixelBlock:j,localNorthDirections:He}=yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:ne,srcMosaicSize:ae,destDimension:U?{width:e,height:i}:null,coefs:U?B.coefficients:null,sampleSpacing:U?Z:null,projectDirections:J,gcsGrid:J?B.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:r.interpolation,alignmentInfo:me,blockWidths:null},r));else{let fe=Ge(ne,ae,{alignmentInfo:me});j=U?je(fe,{width:e,height:i},B.coefficients,Z,r.interpolation):fe,J&&B.gcsGrid&&(He=er({width:e,height:i},B.gcsGrid),j=mr(j,this.rasterInfo.dataType,He))}return r.requestRawData||J?{extent:t,srcExtent:u,srcTilePixelSize:_,pixelBlock:j,transformGrid:B,localNorthDirections:He,isPartiallyFilled:Kr}:{extent:t,srcExtent:u,srcTilePixelSize:_,pixelBlock:j}})}_fetchRawTiles(t,e,i,r){return v(this,null,function*(){let{origin:s,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(t),{x:o,y:c}=e,{width:f,height:u,wrapCount:p}=i,m=this._getRasterTileAlignmentInfo(t,0);r.buffer&&(o-=r.buffer.cols,c-=r.buffer.rows,f+=2*r.buffer.cols,u+=2*r.buffer.rows);let h=0,d=0,y=0;p&&m!=null&&({worldColumnCountFromOrigin:d,originColumnOffset:y,rightPadding:h}=m,d*m.blockWidth-h>=o+f&&(h=0));let g=Math.floor(o/a),w=Math.floor(c/l),x=Math.floor((o+f+h-1)/a),b=Math.floor((c+u+h-1)/l),T=n[t];if(!T)return null;let{minRow:F,minCol:R,maxCol:k,maxRow:P}=T;if(p===0&&(b<F||x<R||w>P||g>k))return null;let _=new Array,M=!1,C=this.ioConfig.allowPartialFill==null?r.allowPartialFill:this.ioConfig.allowPartialFill;for(let j=w;j<=b;j++)for(let U=g;U<=x;U++){let Z=U;if(!r.disableWrapAround&&p&&m!=null&&d<=U&&(Z=U-d-y),j>=F&&Z>=R&&P>=j&&k>=Z){let me=this._fetchRawTile(t,j,Z,r);C?_.push(new Promise(ne=>{me.then(ae=>ne(ae)).catch(()=>{M=!0,ne(null)})})):_.push(me)}else _.push(Promise.resolve(null))}if(_.length===0)return null;let O=yield Promise.all(_),A={height:(b-w+1)*l,width:(x-g+1)*a},{spatialReference:W}=this.rasterInfo,q=this.getPyramidPixelSize(t),{x:J,y:B}=q;return{extent:new H({xmin:s.x+g*a*J,xmax:s.x+(x+1)*a*J,ymin:s.y-(b+1)*l*B,ymax:s.y-w*l*B,spatialReference:W}),pixelBlocks:O,mosaicSize:A,isPartiallyFilled:M}})}_isSameResolution(t,e,i){return Math.abs(t.x-e.x)<i&&Math.abs(t.y-e.y)<i}_fetchRawTile(t,e,i,r){let s=this.rasterInfo.storageInfo.blockBoundary[t];if(!s)return Promise.resolve(null);let{minRow:n,minCol:a,maxCol:l,maxRow:o}=s;if(e<n||i<a||e>o||i>l)return Promise.resolve(null);let c=ct(this.url,r.sliceId),f=`${t}/${e}/${i}`,u=mt(c,r.registryId,f);if(u==null){let p=new AbortController;u=this.fetchRawTile(t,e,i,N(E({},r),{signal:p.signal})),ft(c,r.registryId,f,u,p),u.catch(()=>Ar(c,r.registryId,f))}return r.signal&&wt(r,()=>{Nr(c,r.registryId,f)}),u}_computeMagDirValues(t){let{bandCount:e,dataType:i}=this.rasterInfo;if(!(e===2&&i==="vector-magdir"||i==="vector-uv")||t?.length!==2||!t[0]?.length)return null;let r=t[0].length;if(i==="vector-magdir"){let o=t[1].map(c=>(c+360)%360);return[t[0],o]}let[s,n]=t,a=[],l=[];for(let o=0;o<r;o++){let[c,f]=cr([s[o],n[o]]);a.push(c),l.push(f)}return[a,l]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=ar(this.rasterInfo)),this._rasterTileAlighmentInfo.pyramidsInfo==null?null:E({startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[t])}_getSourceDataInfo(t,e,i,r={}){let s={datumTransformation:r.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};r.srcResolution&&(s.srcResolution=r.srcResolution,this._updateSourceDataInfo(t,s));let n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:l,pyramidLevel:o}=s,c=a/e,f=l/i,u=o<n&&c*f>=16,p=o===n&&this._requireTooManySrcTiles(a,l,e,i);if(u||p||a===0||l===0){let m=new L({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),h=sr(m,this.rasterInfo.spatialReference,t,s.datumTransformation),d=!h||r.srcResolution&&h.x+h.y<r.srcResolution.x+r.srcResolution.y;if(u&&r.srcResolution&&d){let y=Math.round(Math.log(Math.max(c,f))/Math.LN2)-1;if(n-o+3>=y){let g=2**y;h={x:r.srcResolution.x*g,y:r.srcResolution.y*g}}}h&&(s.srcResolution=h,this._updateSourceDataInfo(t,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,i)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(t,e,i,r){let{tileInfo:s}=this.rasterInfo.storageInfo;return Math.ceil(t/s.size[0])*Math.ceil(e/s.size[1])>=Zr||t/i>zr||e/r>zr}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;let{rasterInfo:i}=this,r=i.spatialReference,{srcResolution:s,datumTransformation:n}=e,{pyramidLevel:a,pyramidResolution:l,excessiveReading:o}=it(s,i,this.ioConfig.sampling);if(o)return;let c=e.srcExtent||Ie(t,r,n);if(c==null)return;let f=i.transform;f&&(c=f.inverseTransform(c)),e.srcExtent=c;let{x:u,y:p}=i.storageInfo.origin,m=Math.floor((c.xmin-u)/l.x+.1),h=Math.floor((p-c.ymax)/l.y+.1),d=Math.floor((c.xmax-u)/l.x-.1),y=Math.floor((p-c.ymin)/l.y-.1),g=c.width<.1*l.x?0:d-m+1,w=c.height<.1*l.y?0:y-h+1;e.pyramidLevel=a,e.pyramidResolution=l,e.srcWidth=g,e.srcHeight=w,e.ul={x:m,y:h}}_getRequestOptionsWithSliceId(t){return this.rasterInfo.multidimensionalInfo!=null&&t.sliceId==null&&(t=N(E({},t),{sliceId:this.getSliceIndex(t.multidimensionalDefinition)})),t}_processIdentifyResult(t,e){let{srcLocation:i,position:r,pyramidLevel:s,useTransposedTile:n}=e,a=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[r]))return{location:i,value:null};let{multidimensionalInfo:l}=this.rasterInfo;if(l==null||!n){let y=t.pixels.map(x=>x[r]),g={location:i,value:y,pyramidLevel:s},w=this._computeMagDirValues(y.map(x=>[x]));return w?.length&&(g.magdirValue=w.map(x=>x[0])),g}let o=t.pixels.map(y=>y.slice(r*a,r*a+a)),c=this._computeMagDirValues(o),{requestSomeSlices:f,identifyOptions:u}=e,p=vr(l,u.transposedVariableName);if(f){let y=_r(p,u.multidimensionalDefinition,u.timeExtent);o=o.map(g=>y.map(w=>g[w])),c=c?.map(g=>y.map(w=>g[w])),p=y.map(g=>p[g])}let m=t.noDataValues||this.rasterInfo.noDataValue,h={pixels:o,pixelType:t.pixelType},d;return m!=null&&(Lt(h,m),d=h.mask),{location:i,value:null,dataSeries:p.map((y,g)=>{let w={value:d?.[g]===0?null:o.map(x=>x[g]),multidimensionalDefinition:y.multidimensionalDefinition.map(x=>new Xe(N(E({},x),{isSlice:!0})))};return c?.length&&(w.magdirValue=[c[0][g],c[1][g]]),w}),pyramidLevel:s}}};I([S()],$.prototype,"_rasterTileAlighmentInfo",void 0),I([S({readOnly:!0})],$.prototype,"_isGlobalWrappableSource",null),I([S({readOnly:!0})],$.prototype,"_hasNoneOrGCSShiftTransform",null),I([S()],$.prototype,"rasterJobHandler",null),I([S($e)],$.prototype,"url",null),I([S({type:String,json:{write:!0}})],$.prototype,"datasetName",void 0),I([S({type:String,json:{write:!0}})],$.prototype,"datasetFormat",void 0),I([S()],$.prototype,"hasUniqueSourceStorageInfo",void 0),I([S()],$.prototype,"rasterInfo",void 0),I([S()],$.prototype,"ioConfig",void 0),I([S()],$.prototype,"sourceJSON",void 0),$=I([V("esri.layers.support.rasterDatasets.BaseRaster")],$);var X=$;var pe=class extends X{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}open(t){return v(this,null,function*(){yield this.init();let{rasterFunction:e}=this;this.primaryRasters?.rasters?.length?e.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=e.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(c=>c.rasterJobHandler=this.rasterJobHandler));let{rasters:i,rasterIds:r}=this.primaryRasters,s=i.map(c=>c.rasterInfo?void 0:c.open(t));yield Promise.all(s);let n=i.map(({rasterInfo:c})=>c),a=e.bind({rasterInfos:n,rasterIds:r});if(!a.success||n.length===0)throw new D("raster-function:open",`cannot bind the function: ${a.error??""}`);let l=e.functionName==="Table"?e:e.functionArguments?.raster;l?.functionName==="Table"&&(e.rasterInfo.attributeTable=xe.fromJSON(l.functionArguments.attributeTableAsRecordSet)),yield this.syncJobHandler();let o=n[0];this.hasUniqueSourceStorageInfo=n.length===1||n.slice(1).every(c=>this._hasSameStorageInfo(c,o)),this.set("sourceJSON",i[0].sourceJSON),this.set("rasterInfo",e.rasterInfo)})}syncJobHandler(){return v(this,null,function*(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)})}fetchPixels(s,n,a){return v(this,arguments,function*(t,e,i,r={}){let{rasters:l,rasterIds:o}=this.primaryRasters,c=!1,{interpolation:f}=r,u=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!r.requestRawData&&f!=="bilinear"&&u&&(c=l.length===1&&!r.skipRasterFunction,r=N(E({},r),{interpolation:"bilinear",requestRawData:c}));let p=l.map(T=>T.fetchPixels(t,e,i,r)),m=yield Promise.all(p),h=m.map(T=>T.pixelBlock),d=c||r.requestRawData?m.map(T=>T.srcTilePixelSize):null;if(r.skipRasterFunction||h.every(T=>T==null))return m[0];let y=m.find(T=>T.pixelBlock!=null)?.extent??t,g=this.rasterJobHandler?yield this.rasterJobHandler.process({extent:y,primaryPixelBlocks:h,primaryPixelSizes:d,primaryRasterIds:o}):this.rasterFunction.process({extent:y,primaryPixelBlocks:h,primaryPixelSizes:d,primaryRasterIds:o}),{transformGrid:w}=m[0];if(!c||g==null||w==null)return N(E({},m[0]),{pixelBlock:g});let x={rows:w.spacing[0],cols:w.spacing[1]},b;return this.rasterJobHandler?b=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:e,height:i},coefs:w.coefficients,sampleSpacing:x,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:f,alignmentInfo:void 0,blockWidths:null},r)).pixelBlock:b=je(g,{width:e,height:i},w.coefficients,x,f),{extent:t,srcExtent:m[0].srcExtent,pixelBlock:b}})}_hasSameStorageInfo(t,e){let{storageInfo:i,pixelSize:r,spatialReference:s,extent:n}=t,{storageInfo:a,pixelSize:l,spatialReference:o,extent:c}=e;return r.x===l.x&&r.y===l.y&&s.equals(o)&&n.equals(c)&&i.blockHeight===a.blockHeight&&i.blockWidth===a.blockWidth&&i.maximumPyramidLevel===a.maximumPyramidLevel}};I([S({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),I([S()],pe.prototype,"tileType",void 0),I([S()],pe.prototype,"rasterFunction",void 0),I([S()],pe.prototype,"primaryRasters",void 0),pe=I([V("esri.layers.support.rasterDatasets.FunctionRaster")],pe);var De=pe;function ei(t,e){if(t.spatialReference.equals(e))return t;let i=et(t.spatialReference),r=et(e);if(i===r)return t;let s=i/r;return{x:t.x*s,y:t.y*s}}function Hr(t,e,i){return v(this,null,function*(){if(i.type==="extent")return ri(t,e,i);let{width:r,height:s}=t,n=new Uint8Array(r*s),{contains:a,intersects:l}=yield import("./chunk-PLDXRY5W.js");return l(e,i)?i.type==="polyline"?ii(t,e,i):a(i,e)?t:ti(t,e,i):new te({pixelType:t.pixelType,width:r,height:s,mask:n,maskIsAlpha:!1,pixels:[...t.pixels]})})}function ti(t,e,i){if(!t)return t;let{width:r,height:s}=t,n=e.width/r,a=e.height/s,{xmin:l,ymax:o}=e,c;if(i.type==="extent"){let y=(i.xmin-l)/n,g=(i.xmax-l)/n,w=(o-i.ymax)/a,x=(o-i.ymin)/a;c=[[[y,w],[y,x],[g,x],[g,w],[y,w]]]}else c=i.rings.map(y=>y.map(([g,w])=>[(g-l)/n,(o-w)/a]));let f=document.createElement("canvas");f.width=r,f.height=s;let u=f.getContext("2d");u.fillStyle="#f00",c.forEach(y=>{u.beginPath(),u.moveTo(y[0][0],y[0][1]);for(let g=0;g<y.length;g++)u.lineTo(y[g][0],y[g][1]);u.closePath(),u.fill()});let p=u.getImageData(0,0,r,s).data,m=t.mask,h=r*s,d=new Uint8Array(h);for(let y=0;y<h;y++)m&&!m[y]||(d[y]=p[4*y+3]>127?255:0);return new te({pixelType:t.pixelType,width:r,height:s,mask:d,maskIsAlpha:!1,pixels:[...t.pixels]})}function ri(t,e,i){let{width:r,height:s}=t,n=new Uint8Array(r*s),a=e.width/r,l=e.height/s;if(i.width/a<.5||i.height/l<.5)return new te({pixelType:t.pixelType,width:r,height:s,mask:n,pixels:[...t.pixels]});let{xmin:o,xmax:c,ymin:f,ymax:u}=e,{xmin:p,xmax:m,ymin:h,ymax:d}=i,y=Math.max(o,p),g=Math.min(c,m),w=Math.max(f,h),x=Math.min(u,d),b=.5*a,T=.5*l;if(g-y<b||x-w<T||g<o+b||y>c-b||w>u-T||x<f+T)return new te({pixelType:t.pixelType,width:r,height:s,mask:n,pixels:[...t.pixels]});let F=Math.max(0,(y-o)/a),R=Math.min(r,Math.max(0,(g-o)/a)),k=Math.max(0,(u-x)/l),P=Math.min(s,Math.max(0,(u-w)/l)),_=Math.round(F),M=Math.round(R)-1,C=Math.round(k),O=Math.round(P)-1;if(_===M&&F%1>.5&&R%1<.5||C===O&&k%1>.5&&P%1<.5)return new te({pixelType:t.pixelType,width:r,height:s,mask:n,pixels:[...t.pixels]});if(_===0&&C===0&&M===r&&O===s)return t;let A=t.mask;for(let W=C;W<=O;W++)for(let q=_;q<=M;q++){let J=W*r+q;n[J]=A?A[J]:255}return new te({pixelType:t.pixelType,width:r,height:s,mask:n,pixels:[...t.pixels]})}function ii(t,e,i){let{width:r,height:s}=t,n=new Uint8Array(r*s),a=e.width/r,l=e.height/s,{xmin:o,ymax:c}=e,{paths:f}=i,u=t.mask;for(let p=0;p<f.length;p++){let m=f[p];for(let h=0;h<m.length-1;h++){let[d,y]=m[h],[g,w]=m[h+1],x=Math.floor((c-y)/l),b=Math.floor((c-w)/l);if(b<x){let F=x;x=b,b=F}x=Math.max(0,x),b=Math.min(s-1,b);let T=(g-d)/(w-y);for(let F=x;F<=b;F++){let R=F===x?Math.max(y,w):(s+1-F)*l,k=F===b?Math.min(y,w):R-l,P=Math.floor(w===y?(d-o)/a:(T*(R-y)+d-o)/a),_=Math.floor(w===y?(g-o)/a:(T*(k-y)+d-o)/a);if(_<P){let C=P;P=_,_=C}let M=F*r;P=Math.max(0,P),_=Math.min(r-1,_);for(let C=M+P;C<=M+_;C++)n[C]=u?u[C]:255}}}return new te({pixelType:t.pixelType,width:r,height:s,mask:n,pixels:[...t.pixels]})}function Lr(t,e,i,r=!0){let{spatialReference:s}=t,{x:n,y:a}=ei(i,s),l,o,c,f=e.type==="extent"?e:e.extent,{xmin:u,xmax:p,ymax:m,ymin:h}=f,{xmin:d,ymax:y}=t.extent;return r?(u=d+(u>d?n*Math.round((u-d)/n):0),m=y-(m<y?a*Math.round((y-m)/a):0),p=d+(p>d?n*Math.round((p-d)/n):0),h=y-(h<y?a*Math.round((y-h)/a):0),l=new H({xmin:u,ymax:m,xmax:p,ymin:h,spatialReference:s}),o=Math.round(l.width/n),c=Math.round(l.height/a)):(o=Math.floor((p-u)/n+.8),c=Math.floor((m-h)/a+.8),u=d+(u>d?n*Math.floor((u-d)/n+.1):0),m=y-(m<y?a*Math.floor((y-m)/a+.1):0),p=u+o*n,h=m-c*a,l=new H({xmin:u,ymax:m,xmax:p,ymin:h,spatialReference:s})),{extent:l,width:o,height:c}}var Wr=oe.getLogger("esri.layers.mixins.ImageryTileMixin"),Vr=t=>{let e=class extends t{constructor(...r){super(...r),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=r[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(r){this._set("multidimensionalDefinition",r),this.updateRenderer()}set rasterFunction(r){r?.functionName?.toLowerCase()==="none"&&(r=void 0),this._set("rasterFunction",r),this.updateRasterFunction()}set url(r){this._set("url",Ve(r,Wr))}set renderer(r){r==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",r),this.updateRenderer())}readRenderer(r,s,n){let a=s?.layerDefinition?.drawingInfo?.renderer;return br(a,n)||void 0}convertVectorFieldData(r,s){return v(this,null,function*(){if(r==null||!this.rasterInfo)return null;let n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:r,dataType:a},s):fr(r,a)})}computeStatisticsHistograms(r,s){return v(this,null,function*(){r=ge(Er,r).clone();let{rasterInfo:n}=this,{geometry:a}=r;if(a==null)throw new D("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=a,{spatialReference:o}=n;a.spatialReference.equals(o)||(yield Pe(),l=a.type==="extent"?Ie(a,o):nr(a,o));let c=r.pixelSize??new L({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:o}),{extent:f,width:u,height:p}=Lr(n,l,c),m=yield this.fetchPixels(f,u,p,N(E({},s),{interpolation:"nearest"}));if(m.pixelBlock==null)throw new D("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");let h=yield Hr(m.pixelBlock,f,l),d=this._rasterJobHandler.instance;return d?d.computeStatisticsHistograms({pixelBlock:h},s):tr(h)})}createFlowMesh(r,s){return v(this,null,function*(){let n=this._rasterJobHandler.instance;return n?n.createFlowMesh(r,s):yr(r.meshType,r.simulationSettings,r.flowData,s.signal!=null?s.signal:new AbortController().signal)})}normalizeRasterFetchOptions(r){let{multidimensionalInfo:s}=this.rasterInfo??{};if(s==null)return r;let n=r.multidimensionalDefinition||this.multidimensionalDefinition;n?.length||(n=nt(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));let a=r.timeExtent||this.timeExtent;if(n!=null&&a!=null&&(a.start!=null||a.end!=null)){n=n.map(d=>d.clone());let l=s.variables.find(({name:d})=>d===n[0].variableName)?.dimensions?.find(({name:d})=>d==="StdTime"),o=n.find(({dimensionName:d})=>d==="StdTime");if(!l||!o)return N(E({},r),{multidimensionalDefinition:null});let{start:c,end:f}=a,u=c==null?null:c.getTime(),p=f==null?null:f.getTime(),m=u??p,h=p??u;if(l.values!=null){let d=l.values.filter(y=>{if(Array.isArray(y)){if(m===h)return y[0]<=m&&y[1]>=m;let g=y[0]<=m&&y[1]>m||y[0]<h&&y[1]>=h,w=y[0]>=m&&y[1]<=h||y[0]<m&&y[1]>h;return g||w}return m===h?y===m:y>=m&&y<=h});if(d.length){let y=d.sort((g,w)=>{let x=Array.isArray(g)?g[0]:g,b=Array.isArray(g)?g[1]:g,T=Array.isArray(w)?w[0]:w,F=Array.isArray(w)?w[1]:w;return m===h?x-T:Math.abs(b-h)-Math.abs(F-h)})[0];o.values=[y]}else n=null}else if(l.hasRegularIntervals&&l.extent){let[d,y]=l.extent;m>y||h<d?n=null:o.values=m===h?[m]:[Math.max(d,m),Math.min(y,h)]}}return n!=null&&Fr(n,this.multidimensionalSubset)?N(E({},r),{multidimensionalDefinition:null}):N(E({},r),{multidimensionalDefinition:n})}updateRasterFunction(){return v(this,null,function*(){if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){let f=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&f&&this._set("rasterFunction",Oe.fromJSON(f)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let r,s=this.raster,n=!1;s.datasetFormat==="Function"?(r=s.primaryRasters.rasters,s=r[0],n=!0):r=[s];let{rasterFunction:a}=this;if(a){let f={raster:s};r.length>1&&r.forEach(m=>f[m.url]=m);let u=ke(a.functionDefinition?.toJSON()??a.toJSON(),f),p=new De({rasterFunction:u});p.rasterJobHandler=this._rasterJobHandler.instance,yield p.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=p}else this.raster=s,this._cachedRasterFunctionJson=null,yield s.when();if(this._cachedRendererJson=null,!n&&!a)return;let{bandIds:l}=this,{bandCount:o}=this.raster.rasterInfo,c=l?.length?l.some(f=>f>=o):o>=3;l&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")})}updateRenderer(){return v(this,null,function*(){let{loaded:r,symbolizer:s}=this;if(!r||!s||!this.renderer)return;let{rasterInfo:n}=this.raster,a=st(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),l=a?.name,o=lt(N(E({},this.renderer.toJSON()),{variableName:l}));if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;let c=this._rasterJobHandler.instance;c&&(s.rasterInfo=ot(n,l),s.rendererJSON=o,s.bind(),yield c.updateSymbolizer(s),this._cachedRendererJson=o)})}applyRenderer(r,s){return v(this,null,function*(){let n=r?.pixelBlock;if(!(n!=null&&n.pixels&&n.pixels.length>0))return null;let a;yield this.updateRenderer();let l=this._rasterJobHandler.instance,o=this.bandIds??[];return a=l?yield l.symbolize(N(E({},r),{simpleStretchParams:s,bandIds:o})):this.symbolizer.symbolize(N(E({},r),{simpleStretchParams:s,bandIds:o})),a})}getTileUrl(r,s,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${r}/${s}/${n}`:""}getCompatibleTileInfo(r,s,n=!1){if(!this.loaded||s==null)return null;if(n&&r.equals(this.spatialReference))return this.tileInfo;let a=_t(r);return Q.create({size:256,spatialReference:r,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(r){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(r)||(this._compatibleFullExtent=this.raster.computeExtent(r)),this._compatibleFullExtent):null}fetchTile(l,o,c){return v(this,arguments,function*(r,s,n,a={}){if(i(this),a.requestAsImageElement){let u=this.getTileUrl(r,s,n);return We(u,{responseType:"image",query:E(E({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:a.signal}).then(p=>p.data)}let{rasterInfo:f}=this;if(f.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null){let u=a.tileInfo||f.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(r,s,n,u),pixelBlock:null}}return yield this._initJobHandler(),yield this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(a=N(E({},a),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(r,s,n,a)})}fetchPixels(l,o,c){return v(this,arguments,function*(r,s,n,a={}){return this.rasterInfo.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null?{extent:r,pixelBlock:null}:(yield this._initJobHandler(),yield this.updateRasterFunction(),s=Math.round(s),n=Math.round(n),this.raster.fetchPixels(r,s,n,a))})}identify(n){return v(this,arguments,function*(r,s={}){let{raster:a,rasterInfo:l}=this;if(l.multidimensionalInfo!=null&&!(l.hasMultidimensionalTranspose&&(Ye(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:r,value:null};let o=this.multidimensionalSubset?.areaOfInterest;if(o&&!o.contains(r))throw new D("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return a.identify(r,s)})}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){let r=this.rasterInfo?.multidimensionalInfo;if(r==null||this.rasterInfo?.dataType!=="standard-time")return!1;let s=this.multidimensionalDefinition,n=s?.[0]?.variableName;return r.variables.some(a=>a.name===n&&(!s?.[0].dimensionName||a.dimensions.some(l=>l.name==="StdTime")))}getStandardTimeValue(r){return new Date(24*(r-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(r){let s=r??this.rasterInfo?.multidimensionalInfo;return Mr(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=nt(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;let r=new Tr;return this._rasterJobHandler.connectionPromise=r.initialize().then(()=>v(this,null,function*(){i(this),this._rasterJobHandler.instance=r,this.raster.rasterJobHandler=r,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&(yield this.updateRasterFunction().catch(()=>{})),this.renderer&&this.updateRenderer()})).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){i(this);let{raster:r}=this,s=Pr(r.rasterInfo,r.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(r="no"){i(this);let{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=Cr(s));let n=st(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=n?.name;if(!this.renderer||r==="override"){let f=at(s,{bandIds:this.bandIds,variableName:a}),u=s.statistics,p=u&&u.length>0?u[0]:null,m=p?.max??0,h=p?.min??0;this.raster.datasetFormat==="WCSServer"&&f.type==="raster-stretch"&&(m>1e24||h<-1e24)&&(f.dynamicRangeAdjustment=!0,f.statistics=null,f.stretchType==="none"&&(f.stretchType="min-max")),this.renderer=f}let l=lt(N(E({},this.renderer.toJSON()),{variableName:a})),o=ot(s,a);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=o):this.symbolizer=new dr({rendererJSON:l,rasterInfo:o});let c=this.symbolizer.bind();if(c.success){if(r==="auto"){let{colormap:f}=this.raster.rasterInfo,u=this.renderer;if(f!=null&&u.type==="raster-colormap"){let p=at(this.raster.rasterInfo);JSON.stringify(p)!==JSON.stringify(u)&&this._configDefaultRenderer("override")}else if(u.type==="raster-stretch"){let p=this.bandIds?.length,m=u.statistics?.length;!u.dynamicRangeAdjustment&&m&&p&&m!==p&&this._configDefaultRenderer("override")}}}else Wr.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),r==="auto"&&this._configDefaultRenderer("override")}};function i(r){if(!r.raster||!r.rasterInfo)throw new D("imagery-tile","no raster")}return I([S({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),I([S({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),I([S({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),I([S({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([S({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),I([S()],e.prototype,"bandIds",void 0),I([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([S({json:{read:!1}})],e.prototype,"fullExtent",null),I([S()],e.prototype,"interpolation",void 0),I([S()],e.prototype,"ioConfig",void 0),I([S({type:[Xe],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([S({type:Rr,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([S()],e.prototype,"raster",void 0),I([S({type:Oe,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),I([S()],e.prototype,"rasterInfo",void 0),I([S()],e.prototype,"sourceJSON",void 0),I([S({readOnly:!0,type:z,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([S({type:Q})],e.prototype,"tileInfo",void 0),I([S($e)],e.prototype,"url",null),I([S({types:wr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){let r=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!r}}},origins:{"web-scene":{types:Ir,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:r=>({enabled:r&&r.type!=="vector-field"&&r.type!=="flow"})}}}}})],e.prototype,"renderer",null),I([Mt("renderer")],e.prototype,"readRenderer",null),I([S({clonable:!1})],e.prototype,"symbolizer",void 0),e=I([V("esri.layers.ImageryTileMixin")],e),e};function si(t){let e=t.fields,i=t.records,r=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=s.map(c=>c.name),a=[],l=0,o=0;return i.forEach(c=>{let f={};for(f[r]=l++,o=1;o<n.length;o++)f[n[o]]=c[o-1];a.push({attributes:f})}),{displayFieldName:"",fields:s,features:a}}var Se=class{static get supportedVersions(){return[5]}static parse(e){let i=new DataView(e),r=3&i.getUint8(0);if(r!==3)return{header:{version:r},recordSet:null};let s=i.getUint32(4,!0),n=i.getUint16(8,!0),a=i.getUint16(10,!0),l={version:r,recordCount:s,headerByteCount:n,recordByteCount:a},o=32,c=[],f=[],u;if(r===3){for(;i.getUint8(o)!==13;)u=String.fromCharCode(i.getUint8(o+11)).trim(),c.push({name:tt(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:i.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;f.length<s&&e.byteLength-o>a;){let p=[];i.getUint8(o)===32?(o+=1,c.forEach(m=>{if(m.type==="C")p.push(tt(new Uint8Array(e,o,m.length)).trim());else if(m.type==="N")p.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim(),10));else if(m.type==="F")p.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim()));else if(m.type==="D"){let h=String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim();p.push(new Date(parseInt(h.substring(0,4),10),parseInt(h.substring(4,6),10)-1,parseInt(h.substring(6,8),10)))}o+=m.length}),f.push(p)):o+=a}}return{header:l,fields:c,records:f,recordSet:si({fields:c,records:f})}}};var he=new Map;he.set("int16","esriFieldTypeSmallInteger"),he.set("int32","esriFieldTypeInteger"),he.set("int64","esriFieldTypeInteger"),he.set("float32","esriFieldTypeSingle"),he.set("float64","esriFieldTypeDouble"),he.set("text","esriFieldTypeString");var qr=8,Ee=class extends X{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(t){return v(this,null,function*(){yield this.init();let{data:e}=yield this.request(this.url+"/conf.json",{signal:t?.signal});if(!this._validateHeader(e))throw new D("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);let{storageInfo:i,rasterInfo:r}=this._parseHeader(e);if(r.dataType==="thematic"){let s=yield this._fetchAuxiliaryInformation();r.attributeTable=s}this._set("storageInfo",i),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0})}fetchRawTile(s,n,a){return v(this,arguments,function*(t,e,i,r={}){let{transposeInfo:l}=this.rasterInfo.storageInfo,{transposedVariableName:o}=r,c=!(!l||!o),f=c?0:this.rasterInfo.storageInfo.maximumPyramidLevel-t;if(f<0)return null;let u=this._buildCacheFilePath(f,e,i,r.multidimensionalDefinition,o),p=this._getIndexRecordFromBundle(e,i,c),m=yield this.request(u,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!m)return null;let h=new Uint8Array(m.data),d=this._getTileEndAndContentType(h,p);if(d.recordSize===0)return null;let y=yield this.request(u,{range:{from:d.position,to:d.position+d.recordSize},responseType:"array-buffer",signal:r.signal});if(!y)return null;let[g,w]=this._getTileSize(c);return this.decodePixelBlock(y.data,{width:g,height:w,planes:null,pixelType:null,returnInterleaved:c})})}_validateHeader(t){let e=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return t&&t.type==="RasterInfo"&&!e.some(i=>!t[i])}_parseHeader(t){let e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:i,colormap:r,blockWidth:s,blockHeight:n,firstPyramidLevel:a,maximumPyramidLevel:l}=t,o=t.statistics?.map(B=>({min:B.min,max:B.max,avg:B.mean,stddev:B.standardDeviation,median:B.median,mode:B.mode})),c=t.histograms?.[0]?.counts?.length?t.histograms:null,f=t.extent.spatialReference,u=t.geodataXform?.spatialReference,p=new z(f?.wkid||f?.wkt||f?.wkt2?f:u),m=new H({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:p}),h=new L({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:p}),d=Math.round((m.xmax-m.xmin)/h.x),y=Math.round((m.ymax-m.ymin)/h.y),g=this._parseTransform(t.geodataXform),w=g?m:null;g&&(m=g.forwardTransform(m),h.x=(m.xmax-m.xmin)/d,h.y=(m.ymax-m.ymin)/y);let x=t.properties??{},b=t.format.toLowerCase().replace("cache/",""),T=new L(t.origin.x,t.origin.y,p),F,R,k,P;if(r?.colors)for(F=[],R=0;R<r.colors.length;R++)k=r.colors[R],P=r.values?r.values[R]:R,F.push([P,255&k,k<<16>>>24,k<<8>>>24,k>>>24]);let _=t.LODInfos,M=[];for(R=0;R<_.levels.length;R++)M.push(new qe({level:_.levels[R],resolution:_.resolutions[R],scale:96/.0254*_.resolutions[R]}));let C=new Q({dpi:96,lods:M,format:b,origin:T,size:[s,n],spatialReference:p}),O={recordSize:qr,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*qr+64},A=[{maxCol:Math.ceil(d/s)-1,maxRow:Math.ceil(y/n)-1,minCol:0,minRow:0}],W=2;if(l>0)for(R=0;R<l;R++)A.push({maxCol:Math.ceil(d/W/s)-1,maxRow:Math.ceil(y/W/n)-1,minCol:0,minRow:0}),W*=2;let q=t.mdInfo,J=null;if(q&&x._yxs){let B=x._yxs;J={packetSize:B.PacketSize,tileSize:[B.TileXSize,B.TileYSize]}}return{storageInfo:O,rasterInfo:new ie({width:d,height:y,pixelType:e,bandCount:i,extent:m,nativeExtent:w,transform:g,spatialReference:p,pixelSize:h,keyProperties:x,statistics:o,histograms:c,multidimensionalInfo:q,colormap:F,storageInfo:new re({blockWidth:s,blockHeight:n,pyramidBlockWidth:s,pyramidBlockHeight:n,origin:T,tileInfo:C,transposeInfo:J,firstPyramidLevel:a,maximumPyramidLevel:l,blockBoundary:A})})}}_parseTransform(t){if(!pr(t))throw new D("cloudraster:open","the data contains unsupported geodata transform types");let e=hr(t);if(e.type==="identity")return null;if(e.type!=="polynomial"||!e.forwardCoefficients?.length||!e.inverseCoefficients?.length)throw new D("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}_fetchAuxiliaryInformation(t){return v(this,null,function*(){let e=this.request(this.url+"/conf.vat.json",{signal:t}).then(n=>n.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(n=>n.data).catch(()=>null),r=yield Promise.all([e,i]),s;if(r[0]){let n=r[0].fields,a=r[0].values;if(n&&a){n=n.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":he.get(o.type),name:o.name,alias:o.alias||o.name}));let l=a.map(o=>({attributes:o}));n&&a&&(s={fields:n,features:l})}}return!s&&r[1]&&(s=Se.parse(r[1]).recordSet),xe.fromJSON(s)})}_buildCacheFilePath(t,e,i,r,s){let n=this._getPackageSize(!!s),a=Math.floor(e/n)*n,l=Math.floor(i/n)*n,o="R"+this._toHexString4(a)+"C"+this._toHexString4(l),c="L";c+=t>=10?t.toString():"0"+t.toString();let{multidimensionalInfo:f}=this.rasterInfo,u=r?.[0];if(f==null||!u)return`${this.url}/_alllayers/${c}/${o}.bundle`;let p="_yxs";if(!s){p=f.variables.find(d=>d.name===u.variableName).dimensions[0].values.indexOf(u.values[0]).toString(16);let h=4-p.length;for(let d=0;d<h;d++)p="0"+p;p="S"+p}let m=this._getVariableFolderName(s||u.variableName);return`${this.url}/_alllayers/${m}/${p}/${c}/${o}.bundle`}_getPackageSize(t=!1){let{transposeInfo:e}=this.rasterInfo.storageInfo;return t&&e!=null?e.packetSize??0:this.storageInfo.packetSize}_getTileSize(t=!1){let{storageInfo:e}=this.rasterInfo,{transposeInfo:i}=e;return t&&i!=null?i.tileSize:e.tileInfo.size}_getVariableFolderName(t){return(t=t.trim())===""?"_v":t.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(t,e,i=!1){let r=this._getPackageSize(i),s=r*(t%r)+e%r;if(s<0)throw new Error("Invalid level / row / col");return 20+s*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){let i=t.subarray(e,e+8),r,s=0;for(r=0;r<5;r++)s|=(255&i[r])<<8*r;let n=0xffffffffff&s;for(s=0,r=5;r<8;r++)s|=(255&i[r])<<8*(r-5);return{position:n,recordSize:0xffffffffff&s}}_toHexString4(t){let e=t.toString(16);if(e.length!==4){let i=4-e.length;for(;i-- >0;)e="0"+e}return e}};I([S({readOnly:!0})],Ee.prototype,"storageInfo",void 0),I([S({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),Ee=I([V("esri.layers.support.rasterDatasets.CloudRaster")],Ee);var Gr=Ee;var Ne=class extends X{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}open(t){return v(this,null,function*(){yield this.init();let e=this.data,{pixelBlock:i,statistics:r,histograms:s,name:n,keyProperties:a,nativeExtent:l,transform:o}=this.data,{width:c,height:f,pixelType:u}=i,p=e.extent??new H({xmin:-.5,ymin:.5,xmax:c-.5,ymax:f-.5,spatialReference:new z({wkid:3857})}),m=e.isPseudoSpatialReference??!e.extent,h={x:p.width/c,y:p.height/f},d=new ie({width:c,height:f,pixelType:u,extent:p,nativeExtent:l,transform:o,pixelSize:h,spatialReference:p.spatialReference,bandCount:i.pixels.length,keyProperties:a||{},statistics:r,isPseudoSpatialReference:m,histograms:s});this.createRemoteDatasetStorageInfo(d,512,512),this._set("rasterInfo",d),this.updateTileInfo(),yield this._buildInMemoryRaster(i,{width:512,height:512},t),this.datasetName=n,this.url="/InMemory/"+n})}fetchRawTile(t,e,i,r={}){let s=this._pixelBlockTiles.get(`${t}/${e}/${i}`);return Promise.resolve(s)}_buildInMemoryRaster(t,e,i){return v(this,null,function*(){let r=this.rasterInfo.storageInfo.maximumPyramidLevel,s=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:r},i):Promise.resolve(Zt(t,e,r)),n=this.rasterInfo.statistics!=null,a=this.rasterInfo.histograms!=null,l=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},i):Promise.resolve(rr(t)),o=yield Le([s,l]);if(!o[0].value&&o[1].value)throw new D("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=o[0].value,n||(this.rasterInfo.statistics=o[1].value?.statistics),a||(this.rasterInfo.histograms=o[1].value?.histograms)})}};I([S({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),I([S()],Ne.prototype,"data",void 0),Ne=I([V("esri.layers.support.rasterDatasets.InMemoryRaster")],Ne);var jr=Ne;function de(t,e){if(!t||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";let r=[];if(e){let n=de(t,i);for(let a=0;a<n.length;a++)de(n[a],e).forEach(l=>r.push(l));return r}let s=t.getElementsByTagNameNS("*",i);if(!s||s.length===0)return[];for(let n=0;n<s.length;n++)r.push(s[n]||s.item(n));return r}function Y(t,e){if(!t||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";let r=de(t,i);return r.length>0?e?Y(r[0],e):r[0]:null}function ee(t,e=null){let i=e?Y(t,e):t,r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function ni(t,e){let i=de(t,e),r=[],s;for(let n=0;n<i.length;n++)s=i[n].textContent||i[n].nodeValue,s&&(s=s.trim(),s!==""&&r.push(s));return r}function Ae(t,e){return ni(t,e).map(i=>Number(i))}function le(t,e){let i=ee(t,e);return Number(i)}function Ke(t,e){let i=t?.nodeName?.toLowerCase(),r=e.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===r}function Ur(t,e){if(!t||!e)return null;let i=[];for(let r=0;r<t.length;r++)i.push(t[r]),i.push(e[r]);return i}function ai(t){let e=Y(t,"GeodataXform"),i=Re(le(e,"SpatialReference/WKID")||ee(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:i,transform:null};let r=le(e,"PolynomialOrder")??1,s=Ae(e,"CoeffX/Double"),n=Ae(e,"CoeffY/Double"),a=Ae(e,"InverseCoeffX/Double"),l=Ae(e,"InverseCoeffY/Double"),o=Ur(s,n),c=Ur(a,l);return{spatialReference:i,transform:o&&c&&o.length&&c.length?new be({spatialReference:i,polynomialOrder:r,forwardCoefficients:o,inverseCoefficients:c}):null}}function oi(t){let e=le(t,"NoDataValue"),i=Y(t,"Histograms/HistItem"),r=le(i,"HistMin"),s=le(i,"HistMax"),n=le(i,"BucketCount"),a=ee(i,"HistCounts")?.split("|").map(p=>Number(p)),l,o,c,f;de(t,"Metadata/MDI").forEach(p=>{let m=Number(p.textContent??p.nodeValue);switch(p.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=m;break;case"STATISTICS_MAXIMUM":o=m;break;case"STATISTICS_MEAN":c=m;break;case"STATISTICS_STDDEV":f=m}});let u=le(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a?.length&&r!=null&&s!=null?{min:r,max:s,size:n||a.length,counts:a}:null,sourceBandIndex:u,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:f}:null}}function Re(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new z({wkid:e});if(t=String(t).trim(),Ft(t))return new z({wkt2:t});let i=t.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;let r=i.indexOf("VERTCS"),s=i.indexOf("PROJCS"),n=s>-1?s:i.indexOf("GEOGCS");if(n===-1)return null;let a=t.slice(n,t.lastIndexOf("]",r)+1).trim(),l=t.slice(r,t.lastIndexOf("]")).trim();e=ut(a);let o=new z(e?{wkid:e}:{wkt:a}),c=ut(l);return c&&(o.vcsWkid=c),o}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=ut(t),new z(e!==0?{wkid:e}:{wkt:t})):null}function ut(t){let e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(s=>s.trim()).filter(s=>s!==""),i=e[e.length-1].split(","),r=i[0]?.toLowerCase();if((r==="epsg"||r==="esri")&&t.endsWith('"]]')){let s=Number(i[1]);if(!isNaN(s)&&s!==0)return s}return 0}function Te(t){if(t?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};let e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(r=>{if(r.nodeType===1){if(Ke(r,"SRS")){if(!e.spatialReference){let s=ee(r);e.spatialReference=Re(s)}}else if(Ke(r,"Metadata"))if(r.getAttribute("domain")==="xml:ESRI"){let{spatialReference:s,transform:n}=ai(r);e.transform=n,e.spatialReference||(e.spatialReference=s)}else de(r,"MDI").forEach(s=>e.metadata[s.getAttribute("key")]=ee(s));else if(Ke(r,"PAMRasterBand")){let s=oi(r);s.sourceBandIndex!=null&&e.rasterBands[s.sourceBandIndex]==null?e.rasterBands[s.sourceBandIndex]=s:e.rasterBands.push(s)}}});let i=e.rasterBands;if(i.length){let r=!!i[0].statistics;e.statistics=r?i.map(n=>n.statistics).filter(_e):null;let s=!!i[0].histogram;e.histograms=s?i.map(n=>n.histogram).filter(_e):null}return e}var Qe=class extends X{open(t){return v(this,null,function*(){yield this.init();let e=yield this._fetchData(t),{spatialReference:i,statistics:r,histograms:s,transform:n}=yield this._fetchAuxiliaryData(t),a=!i;a&&(i=new z({wkid:3857})),s?.length&&r==null&&(r=we(s));let{width:l,height:o}=e,c=new H({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:i}),f=n?n.forwardTransform(c):c,u=!0;if(n){let m=n.forwardCoefficients;u=m&&m[1]===0&&m[2]===0,u&&(n=null,c=f)}let p=new jr({data:{extent:f,nativeExtent:c,transform:n,pixelBlock:e,statistics:r,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});yield p.open(),p.data=null,this._set("rasterInfo",p.rasterInfo),this._inMemoryRaster=p})}fetchRawTile(t,e,i,r={}){return this._inMemoryRaster.fetchRawTile(t,e,i,r)}_fetchData(t){return v(this,null,function*(){let{data:e}=yield this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),i=Yt(e).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new D("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);let r=i.toLowerCase(),s=r==="gif"||r==="bmp"||!dt("ios"),n=yield this.decodePixelBlock(e,{format:r,useCanvas:s,hasNoZlibMask:!0});if(n==null)throw new D("image-aux-raster:open","the data cannot be decoded");return n})}_fetchAuxiliaryData(t){return v(this,null,function*(){let e=t?.signal,i=this.ioConfig.skipExtensions??[],r=i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),s=this.datasetFormat,n=s==="JPG"?"jgw":s==="PNG"?"pgw":s==="BMP"?"bpw":null,a=n&&i.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),l=yield Le([r,a]);if(e?.aborted)throw gt();let o=Te(l[0].value?.data);if(!o.transform){let c=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;o.transform=c?.length===6?new be({forwardCoefficients:[c[4],c[5],c[0],-c[1],c[2],-c[3]]}):null}return o})}};I([S({type:String,json:{write:!0}})],Qe.prototype,"datasetFormat",void 0),Qe=I([V("esri.layers.support.rasterDatasets.ImageAuxRaster")],Qe);var Be=Qe;var Je=class extends X{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(t){return v(this,null,function*(){yield this.init();let e=t?.signal,i=this.sourceJSON?{data:this.sourceJSON}:yield this.request(this.url,{query:{f:"json"},signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let r=i.data;if(this.sourceJSON=r,!r)throw new D("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new D("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();let s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=r.cacheType,this.tileType==null&&(s.includes(r.tileInfo.format.toLowerCase())?this.tileType="Map":r.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name?.slice(r.name.indexOf("/")+1)??"";let n=yield this._fetchRasterInfo({signal:e});if(n==null)throw new D("image-server-raster:open","cannot initialize image service");Dr(n,r);let a=this.tileType==="Map"?li(r.tileInfo,r):Q.fromJSON(r.tileInfo);yt(a);let[l,o]=this._computeMinMaxLOD(n,a),{extent:c,pixelSize:f}=n,u=.5/n.width*f.x,p=Math.max(f.x,f.y),{lods:m}=a;(this.tileType!=="Map"&&r.maxScale!==0||Math.abs(f.x-f.y)>u||!m.some(R=>Math.abs(R.resolution-p)<u))&&(f.x=f.y=l.resolution,n.width=Math.ceil((c.xmax-c.xmin)/f.x-.1),n.height=Math.ceil((c.ymax-c.ymin)/f.y-.1));let h=l.level-o.level,[d,y]=a.size,g=[],w=[];m.forEach((R,k)=>{R.level>=o.level&&R.level<=l.level&&g.push({x:R.resolution,y:R.resolution}),k<m.length-1&&w.push(Math.round(10*R.resolution/m[k+1].resolution)/10)}),g.sort((R,k)=>R.x-k.x);let x=this.computeBlockBoundary(c,d,y,a.origin,g,h),b=g.length>1?g.slice(1):null,T;r.transposeInfo&&(T={tileSize:[r.transposeInfo.rows,r.transposeInfo.cols],packetSize:n.keyProperties?._yxs.PacketSize??0});let F=w.length<=1||w.length>=3&&w.slice(0,-1).every(R=>R===w[0])?w[0]??2:Math.round(10/(o.resolution/l.resolution)**(-1/h))/10;if(n.storageInfo=new re({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:b,pyramidScalingFactor:F,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:a,transposeInfo:T,blockBoundary:x}),this._fixGCSShift(n),this._set("rasterInfo",n),r.capabilities.toLowerCase().includes("tilemap")){let R={tileInfo:n.storageInfo.tileInfo,parsedUrl:Rt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Br({layer:R})}})}fetchRawTile(s,n,a){return v(this,arguments,function*(t,e,i,r={}){let{storageInfo:l,extent:o}=this.rasterInfo,{transposeInfo:c}=l,f=c!=null&&!!r.transposedVariableName;if(this._slices&&!f&&r.sliceId==null)return null;let u=f?0:l.maximumPyramidLevel-t+this._levelOffset,p=`${this.url}/tile/${u}/${e}/${i}`,m=this._slices?f?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null,{data:h}=yield this.request(p,{query:m,responseType:"array-buffer",signal:r.signal});if(!h)return null;let d=f?c.tileSize:l.tileInfo.size,y=yield this.decodePixelBlock(h,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:f,noDataValue:this.rasterInfo.noDataValue});if(y==null)return null;let g=l.blockBoundary[t];if(l.compression!=="jpg"||i>g.minCol&&i<g.maxCol&&e>g.minRow&&e<g.maxRow)return y;let{origin:w,blockWidth:x,blockHeight:b}=l,{x:T,y:F}=this.getPyramidPixelSize(t),R=Math.round((o.xmin-w.x)/T)%x,k=Math.round((o.xmax-w.x)/T)%x||x,P=Math.round((w.y-o.ymax)/F)%b,_=Math.round((w.y-o.ymin)/F)%b||b,M=i===g.minCol?R:0,C=e===g.minRow?P:0,O=i===g.maxCol?k:x,A=e===g.maxRow?_:b;return Qt(y,{x:M,y:C},{width:O-M,height:A-C}),y})}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;let e=t;for(let i=0;i<this._slices.length;i++){let r=this._slices[i].multidimensionalDefinition;if(r.length===e.length&&!r.some(s=>{let n=e.find(a=>s.variableName===a.variableName&&a.dimensionName===s.dimensionName);return n?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return i}return null}fetchVariableStatisticsHistograms(t,e){return v(this,null,function*(){let i=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(n=>n.data?.statistics),r=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(n=>n.data?.histograms),s=yield Promise.all([i,r]);return s[0]&&s[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),s[1]?.[0]?.counts?.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}})}computeBestPyramidLevelForLocation(i){return v(this,arguments,function*(t,e={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(t,0,e.datumTransformation);if(r===null)return null;let s=0,{maximumPyramidLevel:n}=this.rasterInfo.storageInfo,a=n-s+this._levelOffset,l=r.srcLocation;for(;a>=0;){try{if((yield this._tilemapCache.fetchAvailability(a,r.row,r.col,e))==="available")break}catch{}if(a--,s++,r=this.identifyPixelLocation(l,s,e.datumTransformation),r===null)return null}return a===-1||r==null?null:s})}_fetchRasterInfo(t){return v(this,null,function*(){let e=this.sourceJSON;if(this.tileType==="Map"){let a=e.fullExtent||e.extent,l=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),o=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),c=z.fromJSON(e.spatialReference||a.spatialReference),f=new L({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new ie({width:l,height:o,bandCount:3,extent:H.fromJSON(a),spatialReference:c,pixelSize:f,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}let{signal:i}=t,r=Or(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then(a=>a.data?.slices).catch(()=>null):null,n=yield Promise.all([r,s]);return this._slices=n[1],n[0]})}_fixScaleInServiceInfo(){let{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){let{extent:e,spatialReference:i}=t;e.xmin>-1&&e.xmax>181&&i?.wkid&&i.isGeographic&&(t.nativeExtent=t.extent,t.transform=new ur,t.extent=t.transform.forwardTransform(e))}_computeMinMaxLOD(t,e){let{pixelSize:i}=t,r=.5/t.width*i.x,{lods:s}=e,n=e.lodAt(Math.max.apply(null,s.map(p=>p.level))),a=e.lodAt(Math.min.apply(null,s.map(p=>p.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=s[0].level,[n,a];if(l==="Raster")return[s.find(p=>p.resolution===i.x)??n,a];let{minScale:o,maxScale:c}=this.sourceJSON,f=n;c>0&&(f=s.find(p=>Math.abs(p.scale-c)<r),f||(f=s.filter(p=>p.scale>c).sort((p,m)=>p.scale>m.scale?1:-1)[0]??n));let u=a;return o>0&&(u=s.find(p=>Math.abs(p.scale-o)<r)??a,this._levelOffset=u.level-a.level),[f,u]}};function li(t,e){if(!t)return null;let{minScale:i,maxScale:r,minLOD:s,maxLOD:n}=e;if(s!=null&&n!=null)return Q.fromJSON(N(E({},t),{lods:t.lods.filter(({level:a})=>a!=null&&a>=s&&a<=n)}));if(i!==0&&r!==0){let a=c=>Math.round(1e4*c)/1e4,l=i?a(i):1/0,o=r?a(r):-1/0;return Q.fromJSON(N(E({},t),{lods:t.lods.filter(c=>{let f=a(c.scale);return f<=l&&f>=o})}))}return Q.fromJSON(t)}I([S({type:String,json:{write:!0}})],Je.prototype,"datasetFormat",void 0),I([S()],Je.prototype,"tileType",void 0),Je=I([V("esri.layers.support.rasterDatasets.ImageServerRaster")],Je);var $r=Je;var se=new Map;se.set("Int8","s8"),se.set("UInt8","u8"),se.set("Int16","s16"),se.set("UInt16","u16"),se.set("Int32","s32"),se.set("UInt32","u32"),se.set("Float32","f32"),se.set("Float64","f32"),se.set("Double64","f32");var ce=new Map;ce.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ce.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ce.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ce.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});var ve=class extends X{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(t){return v(this,null,function*(){yield this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);let e=t?t.signal:null,i=yield this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:r,files:s}=this._parseHeader(i.data);if(this.ioConfig.skipExtensions?.indexOf("aux.xml")===-1){let d=yield this._fetchAuxiliaryData(t);d!=null&&(r.statistics=d.statistics??r.statistics,r.histograms=d.histograms,d.histograms&&r.statistics==null&&(r.statistics=we(d.histograms)))}this._set("rasterInfo",r),this._files=s;let n=yield this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);let{blockWidth:a,blockHeight:l}=this.rasterInfo.storageInfo,o=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:f}=this.rasterInfo,u=[],p=this._getBandSegmentCount(),m=0,h=-1;for(;m<this._storageIndex.length;){h++;let d=Math.ceil(c/a/o**h)-1,y=Math.ceil(f/l/o**h)-1;m+=(d+1)*(y+1)*p*4,u.push({maxRow:y,maxCol:d,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=u,h>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=h),this.updateTileInfo()})}fetchRawTile(s,n,a){return v(this,arguments,function*(t,e,i,r={}){let{blockWidth:l,blockHeight:o,blockBoundary:c}=this.rasterInfo.storageInfo,f=c[t];if(!f||f.maxRow<e||f.maxCol<i||f.minRow>e||f.minCol>i)return null;let{bandCount:u,pixelType:p}=this.rasterInfo,{ranges:m,actualTileWidth:h,actualTileHeight:d}=this._getTileLocation(t,e,i);if(!m||m.length===0)return null;if(m[0].from===0&&m[0].to===0){let O=new Uint8Array(l*o);return new te({width:l,height:o,pixels:null,mask:O,validPixelCount:0})}let{bandIds:y}=this.ioConfig,g=this._getBandSegmentCount(),w=[],x=0;for(x=0;x<g;x++)y&&!y.includes(x)||w.push(this.request(this._files.data,{range:{from:m[x].from,to:m[x].to},responseType:"array-buffer",signal:r.signal}));let b=yield Promise.all(w),T=b.map(O=>O.data.byteLength).reduce((O,A)=>O+A),F=new Uint8Array(T),R=0;for(x=0;x<g;x++)F.set(new Uint8Array(b[x].data),R),R+=b[x].data.byteLength;let k=ce.get(this.rasterInfo.storageInfo.compression).decoderFormat,P=yield this.decodePixelBlock(F.buffer,{width:l,height:o,format:k,planes:y?.length||u,pixelType:p});if(P==null)return null;let{noDataValue:_}=this.rasterInfo;if(_!=null&&k!=="lerc"&&!P.mask&&(_=_[0],_!=null)){let O=P.width*P.height,A=new Uint8Array(O);if(Math.abs(_)>1e24)for(x=0;x<O;x++)Math.abs((P.pixels[0][x]-_)/_)>1e-6&&(A[x]=1);else for(x=0;x<O;x++)P.pixels[0][x]!==_&&(A[x]=1);P.mask=A}let M=0,C=0;if(h!==l||d!==o){let O=P.mask;if(O)for(x=0;x<o;x++)if(C=x*l,x<d)for(M=h;M<l;M++)O[C+M]=0;else for(M=0;M<l;M++)O[C+M]=0;else for(O=new Uint8Array(l*o),P.mask=O,x=0;x<d;x++)for(C=x*l,M=0;M<h;M++)O[C+M]=1}return P})}_parseIndex(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,i,r,s,n,a;if(Wt){for(i=new Uint8Array(t),s=new ArrayBuffer(t.byteLength),r=new Uint8Array(s),n=0;n<t.byteLength/4;n++)for(a=0;a<4;a++)r[4*n+a]=i[4*n+3-a];e=new Uint32Array(s)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return ce.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,i){let{blockWidth:r,blockHeight:s,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:l}=this.rasterInfo,o=this._getBandSegmentCount(),c,f,u,p=0,m=0;for(u=0;u<t;u++)m=n**u,c=Math.ceil(a/r/m),f=Math.ceil(l/s/m),p+=c*f;m=n**t,c=Math.ceil(a/r/m),f=Math.ceil(l/s/m),p+=e*c+i,p*=4*o;let h=this._storageIndex.subarray(p,p+4*o),d=0,y=0,g=[];for(let w=0;w<o;w++)d=h[4*w]*2**32+h[4*w+1],y=d+h[4*w+2]*2**32+h[4*w+3],g.push({from:d,to:y});return{ranges:g,actualTileWidth:i<c-1?r:Math.ceil(a/m)-r*(c-1),actualTileHeight:e<f-1?s:Math.ceil(l/m)-s*(f-1)}}_parseHeader(t){let e=Y(t,"MRF_META/Raster");if(!e)throw new D("mrf:open","not a valid MRF format");let i=Y(e,"Size"),r=parseInt(i.getAttribute("x"),10),s=parseInt(i.getAttribute("y"),10),n=parseInt(i.getAttribute("c"),10),a=(ee(e,"Compression")||"none").toLowerCase();if(!ce.has(a))throw new D("mrf:open","currently does not support compression "+a);let l=ee(e,"DataType")||"UInt8",o=se.get(l);if(o==null)throw new D("mrf:open","currently does not support pixel type "+l);let c=Y(e,"PageSize"),f=parseInt(c.getAttribute("x"),10),u=parseInt(c.getAttribute("y"),10),p=Y(e,"DataValues"),m,h;if(p&&(h=p.getAttribute("NoData"),h!=null&&(m=h.trim().split(" ").map(M=>parseFloat(M)))),Y(t,"MRF_META/CachedSource"))throw new D("mrf:open","currently does not support MRF referencing other data files");let d=Y(t,"MRF_META/GeoTags"),y=Y(d,"BoundingBox"),g,w=!1;if(y!=null){let M=parseFloat(y.getAttribute("minx")),C=parseFloat(y.getAttribute("miny")),O=parseFloat(y.getAttribute("maxx")),A=parseFloat(y.getAttribute("maxy")),W=ee(d,"Projection")||"",q=z.WGS84;if(W!=="LOCAL_CS[]")if(W.toLowerCase().startsWith("epsg:")){let J=Number(W.slice(5));isNaN(J)||J===0||(q=new z({wkid:J}))}else q=Re(W)??z.WGS84;else w=!0,q=new z({wkid:3857});g=new H(M,C,O,A),g.spatialReference=q}else w=!0,g=new H({xmin:-.5,ymin:.5-s,xmax:r-.5,ymax:.5,spatialReference:new z({wkid:3857})});let x=Y(t,"MRF_META/Rsets"),b=parseInt(x?.getAttribute("scale")||"2",10),T=g.spatialReference,F=new re({origin:new L({x:g.xmin,y:g.ymax,spatialReference:T}),blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,compression:a,pyramidScalingFactor:b}),R=new L({x:g.width/r,y:g.height/s,spatialReference:T}),k=new ie({width:r,height:s,extent:g,isPseudoSpatialReference:w,spatialReference:T,bandCount:n,pixelType:o,pixelSize:R,noDataValue:m,storageInfo:F}),P=ee(t,"datafile"),_=ee(t,"IndexFile");return{rasterInfo:k,files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:P||this.url.replace(".mrf",ce.get(a).blobExtension)}}}_fetchAuxiliaryData(t){return v(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return Te(e)}catch{return null}})}};I([S()],ve.prototype,"_files",void 0),I([S()],ve.prototype,"_storageIndex",void 0),I([S({type:String,json:{write:!0}})],ve.prototype,"datasetFormat",void 0),ve=I([V("esri.layers.support.rasterIO.MRFRaster")],ve);var Xr=ve;var pt=(t,e)=>t.get(e)?.values,ze=(t,e)=>t.get(e)?.values?.[0],ye=class extends X{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(t){return v(this,null,function*(){yield this.init();let e=t?t.signal:null,{data:i}=yield this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!i)throw new D("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));let{littleEndian:r,firstIFDPos:s,isBigTiff:n}=$t(i),a=[];yield this._readIFDs(a,i,r,s,0,n?8:4,e);let{imageInfo:l,rasterInfo:o}=this._parseIFDs(a),c=jt(a),f=Ut(a);if(this._headerInfo=E({littleEndian:r,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:f},l),this._set("rasterInfo",o),!l.isSupported)throw new D("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new D("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");o.isPseudoSpatialReference&&oe.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");let u=a[0].get("PREDICTOR")?.values?.[0];if(a[0].get("SAMPLEFORMAT")?.values?.[0]===3&&u===2)throw new D("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");let{skipExtensions:m=[]}=this.ioConfig;if(!m.includes("aux.xml")){let h=yield this._fetchAuxiliaryMetaData(t);h!=null&&this._processPAMInfo(h,o)}m.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||(o.attributeTable=yield this._fetchAuxiliaryTable(t),o.attributeTable!=null&&(o.keyProperties.DataType="thematic")),this.updateTileInfo()})}fetchRawTile(s,n,a){return v(this,arguments,function*(t,e,i,r={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(t,e,i))return null;let l=yield this._fetchRawTiffTile(t,e,i,!1,r);if(l!=null&&this._headerInfo.hasMaskBand){let o=yield this._fetchRawTiffTile(t,e,i,!0,r);o!=null&&o.pixels[0]instanceof Uint8Array&&(l.mask=o.pixels[0])}return l})}_parseIFDs(t){let e=qt(t),{width:i,height:r,tileWidth:s,tileHeight:n,planes:a,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:f,pyramidBlockWidth:u,pyramidBlockHeight:p,tileBoundary:m,affine:h,metadata:d}=e,y=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid,g=Re(y),w=!!e.isPseudoGeographic;g==null&&(w=!0,g=new z({wkid:3857}));let x=new H(N(E({},e.extent),{spatialReference:g})),b=new L(x?{x:x.xmin,y:x.ymax,spatialReference:g}:{x:0,y:0}),T=new re({blockWidth:s,blockHeight:n,pyramidBlockWidth:u,pyramidBlockHeight:p,compression:o,origin:b,firstPyramidLevel:c,maximumPyramidLevel:f,blockBoundary:m}),F=new L({x:(x.xmax-x.xmin)/i,y:(x.ymax-x.ymin)/r,spatialReference:g}),R=d?{BandProperties:d.bandProperties,DataType:d.dataType}:{},k=null,P=ze(t[0],"PHOTOMETRICINTERPRETATION"),_=pt(t[0],"COLORMAP");if(P<=3&&_?.length>3&&_.length%3==0){k=[];let C=_.length/3;for(let O=0;O<C;O++)k.push([O,_[O]>>>8,_[O+C]>>>8,_[O+2*C]>>>8])}let M=new ie({width:i,height:r,bandCount:a,pixelType:l,pixelSize:F,storageInfo:T,spatialReference:g,isPseudoSpatialReference:w,keyProperties:R,extent:x,colormap:k,statistics:d?d.statistics:null});return h?.length&&(M.nativeExtent=new H({xmin:-.5,ymin:.5-r,xmax:i-.5,ymax:.5,spatialReference:g}),M.transform=new be({polynomialOrder:1,forwardCoefficients:[h[2]+h[0]/2,h[5]-h[3]/2,h[0],h[3],-h[1],-h[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new L({x:(x.xmax-x.xmin)/i,y:(x.ymax-x.ymin)/r,spatialReference:g}),T.origin.x=-.5,T.origin.y=.5),{imageInfo:e,rasterInfo:M}}_processPAMInfo(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=we(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;let i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new L({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}_readIFDs(t,e,i,r,s,n=4,a){return v(this,null,function*(){if(!r)return null;(r>=e.byteLength||r<0)&&(e=(yield this.request(this.url,{range:{from:r+s,to:r+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=r+s,r=0);let l=yield this._readIFD(e,i,r,s,Me.tiffTags,n,a);if(t.push(l.ifd),!l.nextIFD)return null;yield this._readIFDs(t,e,i,l.nextIFD-s,s,n,a)})}_readIFD(l,o,c,f){return v(this,arguments,function*(t,e,i,r,s=Me.tiffTags,n=4,a){if(!t)return null;let u=Xt(t,e,i,r,s,n);if(u.success){let p=[];if(u.ifd?.forEach(m=>{m.values||p.push(m)}),p.length>0){let m=p.map(d=>d.offlineOffsetSize).filter(_e),h=Math.min.apply(null,m.map(d=>d[0]));if(Math.min.apply(null,m.map(d=>d[0]+d[1]))-h<=this._bufferSize){let{data:d}=yield this.request(this.url,{range:{from:h,to:h+this._bufferSize},responseType:"array-buffer",signal:a});t=d,r=h,p.forEach(y=>Vt(t,e,y,r))}}if(u.ifd?.has("GEOKEYDIRECTORY")){let m=u.ifd.get("GEOKEYDIRECTORY"),h=m?.values;if(h&&h.length>4){let d=h[0]+"."+h[1]+"."+h[2],y=yield this._readIFD(t,e,m.valueOffset+6-r,r,Me.geoKeys,2,a);m.data=y.ifd,m.data&&m.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return u}if(u.requiredBufferSize&&u.requiredBufferSize!==t.byteLength)return(t=(yield this.request(this.url,{range:{from:r,to:r+u.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<u.requiredBufferSize?null:this._readIFD(t,e,0,r,Me.tiffTags,4,a)})}_fetchRawTiffTile(n,a,l,o){return v(this,arguments,function*(t,e,i,r,s={}){let c=this._getTileLocation(t,e,i,r);if(!c)return null;let{ranges:f,actualTileWidth:u,actualTileHeight:p,ifd:m}=c,h=f.map(_=>this.request(this.url,{range:_,responseType:"array-buffer",signal:s.signal})),d=yield Promise.all(h),y=d.map(_=>_.data.byteLength).reduce((_,M)=>_+M),g=d.length===1?d[0].data:new ArrayBuffer(y),w=[0],x=[0];if(d.length>1){let _=new Uint8Array(g);for(let M=0,C=0;M<d.length;M++){let O=d[M].data;_.set(new Uint8Array(O),C),w[M]=C,C+=O.byteLength,x[M]=O.byteLength}}let{blockWidth:b,blockHeight:T}=this.getBlockWidthHeight(t),F=yield this.decodePixelBlock(g,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:m,offsets:w,sizes:x},width:b,height:T,planes:null,pixelType:null});if(F==null)return null;let R,k,P;if(u!==b||p!==T){let _=F.mask;if(_)for(R=0;R<T;R++)if(P=R*b,R<p)for(k=u;k<b;k++)_[P+k]=0;else for(k=0;k<b;k++)_[P+k]=0;else for(_=new Uint8Array(b*T),F.mask=_,R=0;R<p;R++)for(P=R*b,k=0;k<u;k++)_[P+k]=1}return F})}_getTileLocation(t,e,i,r=!1){let{firstPyramidLevel:s,blockBoundary:n}=this.rasterInfo.storageInfo,a=t===0?0:t-(s-1),{_headerInfo:l}=this;if(!l)return null;let o=r?l.maskIFDs[a]:a===0?l?.ifds[0]:l?.pyramidIFDs[a-1];if(!o)return null;let c=Gt(o,l),f=pt(o,"TILEOFFSETS");if(f===void 0)return null;let u=pt(o,"TILEBYTECOUNTS"),{minRow:p,minCol:m,maxRow:h,maxCol:d}=n[a];if(e>h||i>d||e<p||i<m)return null;let y=ze(o,"IMAGEWIDTH"),g=ze(o,"IMAGELENGTH"),w=ze(o,"TILEWIDTH"),x=ze(o,"TILELENGTH"),b=[];if(c){let{bandCount:T}=this.rasterInfo;for(let F=0;F<T;F++){let R=F*(h+1)*(d+1)+e*(d+1)+i;b[F]={from:f[R],to:f[R]+u[R]-1}}}else{let T=e*(d+1)+i;b.push({from:f[T],to:f[T]+u[T]-1})}for(let T=0;T<b.length;T++)if(b[T].from==null||!b[T].to||b[T].to<0)return null;return{ranges:b,ifd:o,actualTileWidth:i===d&&y%w||w,actualTileHeight:e===h&&g%x||x}}_fetchAuxiliaryMetaData(t){return v(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return Te(e)}catch{return null}})}_fetchAuxiliaryTable(t){return v(this,null,function*(){try{let{data:e}=yield this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t?.signal}),i=Se.parse(e);return i?.recordSet?xe.fromJSON(i.recordSet):null}catch{return null}})}};I([S()],ye.prototype,"_files",void 0),I([S()],ye.prototype,"_headerInfo",void 0),I([S()],ye.prototype,"_bufferSize",void 0),I([S({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),ye=I([V("esri.layers.support.rasterDatasets.TIFFRaster")],ye);var Yr=ye;var K=new Map;K.set("CRF",{desc:"Cloud Raster Format",constructor:Gr}),K.set("MRF",{desc:"Meta Raster Format",constructor:Xr}),K.set("TIFF",{desc:"GeoTIFF",constructor:Yr}),K.set("RasterTileServer",{desc:"Raster Tile Server",constructor:$r}),K.set("JPG",{desc:"JPG Raster Format",constructor:Be}),K.set("PNG",{desc:"PNG Raster Format",constructor:Be}),K.set("GIF",{desc:"GIF Raster Format",constructor:Be}),K.set("BMP",{desc:"BMP Raster Format",constructor:Be});var Ze=class{static get supportedFormats(){let e=new Set;return K.forEach((i,r)=>e.add(r)),e}static open(e){return v(this,null,function*(){let{url:i,ioConfig:r,sourceJSON:s}=e,n=e.datasetFormat;n==null&&i.lastIndexOf(".")&&(n=i.slice(i.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),i.toLowerCase().includes("/imageserver")&&!i.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");let a={url:i,sourceJSON:s,datasetFormat:n,ioConfig:r??{bandIds:null,sampling:null}},l,o;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!r?.enableCRF)throw new D("rasterfactory:open",`cannot open raster: ${i}`);return l=K.get(n).constructor,o=new l(a),yield o.open({signal:e.signal}),o}if(n)throw new D("rasterfactory:open","not a supported format "+n);let c=Array.from(K.keys()),f=0,u=()=>(n=c[f++],n&&(n!=="CRF"||r?.enableCRF)?(l=K.get(n).constructor,o=new l(a),o.open({signal:e.signal}).then(()=>o).catch(()=>u())):null);return u()})}static register(e,i,r){K.has(e.toUpperCase())||K.set(e.toUpperCase(),{desc:i,constructor:r})}};var G=class extends Pt(Ot(xr(Jt(Bt(Vr(zt(At(Ct(kt(Et(Jr))))))))))){constructor(...t){super(...t),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this._debouncedSaveOperations=It((e,i,r)=>v(this,null,function*(){let{save:s,saveAs:n}=yield import("./chunk-AHNMYSFX.js");switch(e){case Fe.SAVE:return s(this,i);case Fe.SAVE_AS:return n(this,r,i)}}))}normalizeCtorArgs(t,e){return typeof t=="string"?E({url:t},e):t}load(t){let e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(xt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let t=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ue({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:e}=this,i=e?.attributeTable,r=i!=null?i.fields:null,s="Raster.";if(r){let l=r.filter(o=>o.type!=="oid"&&o.name.toLowerCase()!=="value").map(o=>{let c=o.clone();return c.name=s+o.name,c});t.push(...l)}let n=e?.dataType,a=e?.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&a!=null){let l=a.variables[0].unit?.trim(),o="Magnitude"+(l?` (${l})`:"");t.push(new ue({name:"Raster.Magnitude",alias:o,domain:null,editable:!1,type:"double"})),t.push(new ue({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return t}createPopupTemplate(t){let{rasterFields:e}=this,i=new Set(e.map(({name:r})=>r).filter(r=>r.toLowerCase()!=="raster.servicepixelvalue.raw"));return Ht({fields:e,title:this.title},N(E({},t),{visibleFieldNames:i}))}generateRasterInfo(t,e){return v(this,null,function*(){if(!(t=ge(Oe,t)))return this.rasterInfo;try{let i={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>i[n.url]=n);let r=ke(t.functionDefinition?.toJSON()??t.toJSON(),i),s=new De({rasterFunction:r});return yield s.open(e),s.rasterInfo}catch(i){throw i instanceof D?i:new D("imagery-tile-layer","the given raster function is not supported")}})}save(t){return v(this,null,function*(){return this._debouncedSaveOperations(Fe.SAVE,t)})}saveAs(t,e){return v(this,null,function*(){return this._debouncedSaveOperations(Fe.SAVE_AS,e,t)})}write(t,e){let i=this._primaryRasters[0]??this.raster;if(this.loaded?i.datasetFormat==="RasterTileServer"&&(i.tileType==="Raster"||i.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e?.messages){let r=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new D("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${r}'`,{layer:this}))}return null}_openRaster(t){return v(this,null,function*(){let e=!1;if(this.raster)this.raster.rasterInfo||(yield this.raster.open()),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{let{rasterFunction:r}=this,s=[this.url];r&&ir(r.toJSON(),s);let n=yield Promise.all(s.map(l=>Ze.open({url:l,sourceJSON:this.sourceJSON,ioConfig:N(E({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:t}))),a=n.findIndex(l=>l==null);if(a>-1)throw new D("imagery-tile-layer:open",`cannot open raster: ${s[a]}`);if(this._primaryRasters=n,r){let l={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(f=>l[f.url]=f);let o=ke(r.functionDefinition?.toJSON()??r.toJSON(),l),c=new De({rasterFunction:o});try{yield c.open(),this.raster=c}catch(f){let u=oe.getLogger(this);f instanceof D&&u.error("imagery-tile-layer:open",f.message),u.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}let i=this.raster.rasterInfo;if(!i)throw new D("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?i:this._primaryRasters[0].rasterInfo),this._set("spatialReference",i.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){let r=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:N(E({},this.sourceJSON),{minScale:0,maxScale:0});this.read(r,{origin:"service"})}else this.read({tileInfo:this.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Tt(()=>this.customParameters,r=>{this.raster&&(this.raster.ioConfig.customFetchParameters=r)}))})}};I([S({clonable:!1})],G.prototype,"_primaryRasters",void 0),I([S({type:[bt],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],G.prototype,"bandIds",void 0),I([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Dt(Sr)],G.prototype,"interpolation",void 0),I([S(gr)],G.prototype,"legendEnabled",void 0),I([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],G.prototype,"isReference",void 0),I([S({type:["show","hide"]})],G.prototype,"listMode",void 0),I([S({json:{read:!0,write:!0}})],G.prototype,"blendMode",void 0),I([S()],G.prototype,"sourceJSON",void 0),I([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],G.prototype,"version",void 0),I([S({readOnly:!0,json:{read:!1}})],G.prototype,"type",void 0),I([S({type:["ArcGISTiledImageServiceLayer"]})],G.prototype,"operationalLayerType",void 0),I([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,i){e[i]=!t}}}})],G.prototype,"popupEnabled",void 0),I([S({type:Nt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],G.prototype,"popupTemplate",void 0),I([S({readOnly:!0})],G.prototype,"defaultPopupTemplate",null),I([S({readOnly:!0,type:[ue]})],G.prototype,"fields",void 0),I([S({readOnly:!0,type:[ue]})],G.prototype,"rasterFields",null),G=I([V("esri.layers.ImageryTileLayer")],G);var ll=G;export{ll as default};
