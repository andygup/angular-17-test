import{b as zt,d as Gt,e as R,f as b,g as At,h as Ot,i as Pt,j as Be,k as Vt,n as Se,p as Ut}from"./chunk-6GLCEHEN.js";import{c as Lt}from"./chunk-5ZJSZISC.js";import{b as It}from"./chunk-X77FZHE2.js";import{a as Fe}from"./chunk-EVB25YXG.js";import{a as Tt,b as St,c as Rt}from"./chunk-H2E4J3PF.js";import{b as Ct}from"./chunk-N77PCW3L.js";import{a as vt}from"./chunk-WF6JACCV.js";import{a as O,b as ft,e as xt,f as _t,g as bt}from"./chunk-ICBFZ75C.js";import{a as gt}from"./chunk-UYKZ3CEC.js";import{a as dt,b as G,c as q,d as A,j as N,k as ht,l as ct,p as ut}from"./chunk-EKY6QR7N.js";import{f as pt}from"./chunk-AUIMNX4Y.js";import{a as lt,n as mt,q as yt,s as we}from"./chunk-N57AFEUK.js";import{g as ne}from"./chunk-NKBP5F7I.js";import{H as at}from"./chunk-GIHBFCPM.js";import{r as nt}from"./chunk-TKTKGUCU.js";import{a as st,b as it}from"./chunk-G7LWVLCX.js";import{f as Qe,g as Je,m as $e,u as et,v as tt}from"./chunk-M3GEY4SR.js";import{a as Te}from"./chunk-U2QVIRVP.js";import{b as rt,c as z}from"./chunk-VXOK76QV.js";import{a as Mt}from"./chunk-2UWML3DK.js";import{a as Dt}from"./chunk-RH6QQ4K6.js";import{d as wt,e as Ft,f as Bt}from"./chunk-VL6L3PH6.js";import{a as Ye}from"./chunk-HSB35X5B.js";import{d as ot}from"./chunk-MXH75ZNY.js";import{a as H}from"./chunk-AQ74ANSJ.js";import{a as be,b as oe,c as De,d as Ce,e as E,g as L}from"./chunk-4ATIL3QV.js";import{g as Ee,j as He,m as Xe}from"./chunk-U62SHMHB.js";import{a as C,b as qe,h as Ne,i as Ze,l as ie,m as We}from"./chunk-55ESOXMJ.js";import{a as ke}from"./chunk-CBOFHDSC.js";import{b as Ke}from"./chunk-A52LT7YB.js";import{o as S}from"./chunk-CZPMRK53.js";import{H as D,K as je}from"./chunk-WMYPRHRR.js";import{R as Ue}from"./chunk-IAMDMFZ7.js";import{a as v}from"./chunk-53MWZ23O.js";import{i as g,k as ve,p as K}from"./chunk-PT7S6WNL.js";import{a as Ve}from"./chunk-XDTDVCGP.js";import{a as Oe,c as _e,p as Pe}from"./chunk-AC62Z3FX.js";import{a as xe,g as B}from"./chunk-ESDYQQXO.js";var Z=class{constructor(){this._dirties=[{vertexFrom:-1,vertexCount:-1,indexFrom:-1,indexCount:-1,allDirty:!1},{vertexFrom:-1,vertexCount:-1,indexFrom:-1,indexCount:-1,allDirty:!1},{vertexFrom:-1,vertexCount:-1,indexFrom:-1,indexCount:-1,allDirty:!1},{vertexFrom:-1,vertexCount:-1,indexFrom:-1,indexCount:-1,allDirty:!1},{vertexFrom:-1,vertexCount:-1,indexFrom:-1,indexCount:-1,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==-1||e.allDirty)}markAllClean(){for(let e of this._dirties)e.indexFrom=-1,e.indexCount=-1,e.vertexFrom=-1,e.vertexCount=-1,e.allDirty=!1}markAllDirty(){for(let e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){let{indexCount:r,indexFrom:s,vertexCount:i,vertexFrom:o,allDirty:a}=this._dirties[t],l={},d,h=!1;(a||o!==-1&&i>0)&&(l.geometry={count:i,from:o,allDirty:a},h=!0),(a||s!==-1&&r>0)&&(d={count:r,from:s,allDirty:a},h=!0),h&&e({indices:d,vertices:l},t)}}markDirtyIndices(e,t,r){let s=this._dirties[e],i=t,o=r;if(!s.allDirty)if(s.indexCount!==-1){let a=Math.min(s.indexFrom,i),l=Math.max(s.indexFrom+s.indexCount,i+o)-a;s.indexFrom=a,s.indexCount=l}else s.indexFrom=i,s.indexCount=o}markDirtyVertices(e,t,r,s){let i=this._dirties[e],o=r,a=s;if(!i.allDirty)if(i.vertexCount!==-1){let l=Math.min(i.vertexFrom,o),d=Math.max(i.vertexFrom+i.vertexCount,o+a)-l;i.vertexFrom=l,i.vertexCount=d}else i.vertexFrom=o,i.vertexCount=a}};var Re=class{get largestRange(){return this._largestRange}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,r=null;for(;t!==null;)t.count>=e&&(!r||t.count-e<r.count-e)&&(r=t),t=t.next;return r}findAdjacentRanges(e,t){let r=!0,s=!1,i=null,o=this._parent._freeHead;for(;r&&!s;){let a=i!==null?i.from+i.count:0,l=o!==null?o.from:this._parent._size;e>=a&&e+t<=l?(r=!1,s=!0):o!==null?(i=o,o=o.next):r=!1}return[i,o]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;t!==null;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}},I=class n{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new Re(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){let t=this._bookKeeper.findBestRange(e);if(t==null)return-1;let r=t.from,s=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,r,s),this._allocated+=e,t.count===0){let i=t.prev!==null?this._freeHead:t.next;n._removeRange(t),this._freeHead=i}return r}free(e,t){let[r,s]=this._bookKeeper.findAdjacentRanges(e,t),i={from:e,count:t,prev:r??null,next:s??null};if(r!=null&&(r.next=i),s!=null&&(s.prev=i),this._bookKeeper.rangeCreated(i),this._allocated-=t,s!=null&&i.from+i.count===s.from){let o=i.from,a=i.count;n._fuse(i,s),n._removeRange(s),this._bookKeeper.rangeResized(i,o,a),this._bookKeeper.rangeResized(s,void 0,0)}if(r!=null&&r.from+r.count===i.from){let o=r.from,a=r.count;n._fuse(r,i),n._removeRange(i),this._bookKeeper.rangeResized(r,o,a),this._bookKeeper.rangeResized(i,void 0,0)}this._freeHead=i.prev!==null?this._freeHead:i}get fragmentation(){let e=this._size-this._allocated;return e===0?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){e.prev!==null?e.next!==null?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:e.next!==null&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,t.next!==null&&(t.next.prev=e)}};var W=["FILL","LINE","MARKER","TEXT","LABEL"];function qt(n){let e=n.getStrides(),t={};for(let r=0;r<e.length;r++)t[W[r]]=e[r];return t}var jt=.5,X=class n{constructor(e,t,r,s){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=r;for(let i in e){this._freeListsAndStorage[i]={vtxFreeList:s?new I(s):null,idxFreeList:s?new I(s):null,vertexBuffers:{},indexBuffer:s?new Uint32Array(s):null};for(let o in e[i])this._freeListsAndStorage[i].vertexBuffers[o]={data:s?q(s,e[i][o]):null,stride:e[i][o]}}}static fromTileData(e,t){let r=qt(e),s=[0,0,0,0,0],i=[0,0,0,0,0];for(let l of e.tileDisplayData.displayObjects)for(let d of l.displayRecords)s[d.geometryType]=Math.max(s[d.geometryType],d.vertexFrom+d.vertexCount),i[d.geometryType]=Math.max(i[d.geometryType],d.indexFrom+d.indexCount);let o=new n(r,e.tileDisplayData.displayList,t,void 0),a=e.tileBufferData?.geometries??[];for(let l=0;l<a.length;++l){let d=s[l],h=i[l],c=a[l],u=W[l],f=o._storageFor(u),p=a[l].indexBuffer;f.indexBuffer=p,f.idxFreeList=new I(p.length),f.idxFreeList.allocate(h);let m=0;for(let y in c.vertexBuffer){let _=a[l].vertexBuffer[y];f.vertexBuffers[y].data=_.data,f.vertexBuffers[y].stride=_.stride;let T=G(_.stride),F=_.data.length*T/_.stride;m||(m=F)}f.vtxFreeList=new I(m),f.vtxFreeList.allocate(d)}return o}delete(e){let t=W[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,r,s,i){let o=W[e.geometryType],a,l;e.meshData=null,e.vertexFrom===void 0?(l=t.vertexCount,a=this._allocateVertices(o,l)):t.vertexCount>e.vertexCount?(this._freeVertices(o,e.vertexFrom,e.vertexCount),l=t.vertexCount,a=this._allocateVertices(o,l)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,l=e.vertexCount):(this._freeVertices(o,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,l=t.vertexCount);let d,h,c,u=!0;if(e.indexFrom===void 0?(d=i,c=t.indexCount,h=this._allocateIndices(o,c)):t.indexCount>e.indexCount?(d=this._displayList.removeFromList(e),this._freeIndices(o,e.indexFrom,e.indexCount),c=t.indexCount,h=this._allocateIndices(o,c)):t.indexCount===e.indexCount?(u=!1,h=e.indexFrom,c=e.indexCount):(d=this._displayList.removeFromList(e),this._freeIndices(o,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),h=e.indexFrom,c=t.indexCount),a!==-1&&h!==-1){let f=this._storageFor(o);if(N(a,h,f.vertexBuffers,f.indexBuffer,t,r,s),e.vertexFrom=a,e.indexFrom=h,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(let p in r)this._dirtyMap.markDirtyVertices(e.geometryType,p,e.vertexFrom,e.vertexCount)}return u&&this._displayList.addToList(e,d),!0}return a!==-1&&this._freeVertices(o,a,l),h!==-1&&this._freeIndices(o,h,c),e.setMeshDataFromBuffers(t,r,s),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){let r=t.vertexBuffer,s=t.indexBuffer,i=W[e.geometryType],o=this._allocateVertices(i,e.vertexCount);if(o===-1)return this._freeVertices(i,o,e.vertexCount),!1;let a=this._allocateIndices(i,e.indexCount);if(a===-1)return this._freeVertices(i,o,e.vertexCount),this._freeIndices(i,a,e.indexCount),!1;let l=this._storageFor(i);if(N(o,a,l.vertexBuffers,l.indexBuffer,e,r,s),e.vertexFrom=o,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(let d in r)this._dirtyMap.markDirtyVertices(e.geometryType,d,o,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){let r=this._storageFor(e),s=r.vtxFreeList?.allocate(t);if(s==null||s===-1)return-1;let i=r.vtxFreeList?.fragmentation;return i==null||i>jt?-1:s}_freeVertices(e,t,r){this._storageFor(e).vtxFreeList?.free(t,r)}_freeIndices(e,t,r){this._storageFor(e).idxFreeList?.free(t,r)}_allocateIndices(e,t){let r=this._storageFor(e),s=r.idxFreeList?.allocate(t);if(s==null||s===-1)return-1;let i=r.idxFreeList?.fragmentation;return i==null||i>jt?-1:s}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}};var ae=class{constructor(e){this.geometryMap=ct(()=>({indexBuffer:Fe.createIndex(e,nt.STATIC_DRAW),vao:null}),(t,r)=>({vertexBuffer:Fe.createVertex(e,ht[r])}))}dispose(){for(let e=0;e<5;e++){let t=this.geometryMap[e];if(t){t.data.vao?.disposeVAOOnly(),t.data.indexBuffer?.dispose();for(let r in t.buffers)t.buffers[r]?.data.vertexBuffer.dispose()}}}get(e){let t=this.geometryMap[e];return{getVAO(r,s,i){if(!t.data.vao){let o={};for(let a in t.buffers)o[a]=t.buffers[a].data.vertexBuffer;t.data.vao=new Lt(r,i,s,o,t.data.indexBuffer)}return t.data.vao}}}has(e){return this.geometryMap[e]!=null}upload(e,t){t.forEach((r,s)=>{this._upload(r,s,e)})}_upload(e,t,r){if(e.indices&&(e.indices.allDirty?this._uploadIndices(r,t):e.indices.from!=null&&e.indices.count!=null&&this._uploadIndices(r,t,e.indices.from,e.indices.count)),e.vertices){let s=e.vertices;for(let i in s){let o=s[i];o.allDirty?this._uploadVertices(r,t,i):o.from!=null&&o.count!=null&&this._uploadVertices(r,t,i,o.from,o.count)}}}_uploadVertices(e,t,r,s,i){let o=this.geometryMap[t];if(!o)return;let a=e.geometries[t].vertexBuffer[r];if(!a)return;let{data:l,stride:d}=a;if(o.buffers[r]&&l.length>0){let h=d/l.BYTES_PER_ELEMENT;s!=null&&i!=null?o.buffers[r].data.vertexBuffer.setSubData(l,s*h,s*h,(s+i)*h):o.buffers[r].data.vertexBuffer.setData(l)}}_uploadIndices(e,t,r,s){let i=this.geometryMap[t];if(!i)return;let o=e.geometries[t].indexBuffer;i.data.indexBuffer&&o.length>0&&(r!=null&&s!=null?i.data.indexBuffer.setSubData(o,r,r,r+s):i.data.indexBuffer.setData(o))}};var le=class extends zt{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new Z}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(e.clear===!0)return this.clear(),void(this._hasData=!1);let t=e.addOrUpdate,r=e.remove;!this._data&&t?.tileDisplayData?.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new Z,this._dispRecStore=X.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t?.tileDisplayData?.displayObjects.length||r.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new ae(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=X.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0,r=e.addOrUpdate?.tileDisplayData?.displayObjects||[],s=(e.remove||[]).slice();for(let a of r)a.insertAfter!=null&&s.push(a.id);let i;s.length>0&&(i=new Set(s));let o=this._data.tileDisplayData;for(let a of s){let l=o.displayObjectRegistry.get(a);if(l){o.displayList.removeFromList(l.displayRecords);for(let d of l.displayRecords)this._dispRecStore.delete(d);o.displayObjectRegistry.delete(a)}}i?.size&&(o.displayObjects=o.displayObjects.filter(a=>!i.has(a.id)));for(let a of r){let l,d=o.displayObjectRegistry.get(a.id);if(d){let c=d.displayRecords;d.set(a),d.displayRecords=c;let u=d.displayRecords.length;for(let f=0;f<u;++f){let p=d.displayRecords[f],m=a.displayRecords[f];(f>=a.displayRecords.length||p.geometryType!==m.geometryType||p.symbolLevel!==m.symbolLevel||p.zOrder!==m.zOrder||p.materialKey!==m.materialKey)&&(this._dispRecStore.delete(d.displayRecords[f]),f<a.displayRecords.length&&(d.displayRecords[f]=void 0))}d.displayRecords.length=a.displayRecords.length}else{let c;d=a.copy(),d.displayRecords=[],o.displayObjectRegistry.set(a.id,d);let u=o.displayObjects;if(d.insertAfter!=null)if(l={},d.insertAfter>=0){let f=o.displayObjectRegistry.get(d.insertAfter);f?(c=u.indexOf(f)+1,c<u.length?u.splice(c,0,d):(u.push(d),c=u.length)):(u.push(d),c=u.length)}else u.unshift(d),c=0;else u.push(d),c=u.length;if(l){let f=a.displayRecords.length>0?1:0,p=0;for(let m=c-1;m>=0&&p<f;--m)for(let y=u[m].displayRecords.length-1;y>=0&&p<f;--y){let _=u[m].displayRecords[y],T=o.displayList.getDPInfoType();l[T]||(l[T]=_,++p)}}}let h=a.displayRecords.length;for(let c=0;c<h;++c){let u=a.displayRecords[c],f=d.displayRecords[c];f?(f.meshData=u.meshData,f.materialKey=u.materialKey):(f=u.copy(),f.vertexFrom=void 0,f.indexFrom=void 0,d.displayRecords[c]=f);let p=u.geometryType,m=o.displayList.getDPInfoType(),y=e.addOrUpdate.tileBufferData.geometries[p],_=y.vertexBuffer,T=y.indexBuffer,F;l&&(F=l[m]?o.displayList.splitAfter(l[m]):-1),t=this._dispRecStore.setMeshData(f,u,_,T,F)&&t,l&&f.indexFrom!=null&&f.indexFrom!=null&&(l[m]=f)}}return t}};var Y=class{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,r){if(!t&&!r)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);let s=this._byGeometryType[e];s.vertices+=t,s.indices+=r}};var Ie=5,P=class n{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){let e=new n;for(let t=0;t<this.geometries.length;t++){let r=this.geometries[t],s=e.geometries[t];s.indexBuffer=r.indexBuffer.slice(),s.vertexBuffer={};for(let i in r.vertexBuffer){let{data:o,stride:a}=r.vertexBuffer[i];s.vertexBuffer[i]={data:o.slice(),stride:a}}}return e}static deserialize(e){let t=new n;for(let r=0;r<Ie;++r){t.geometries[r].indexBuffer=new Uint32Array(e.geometries[r].indexBuffer),t.geometries[r].vertexBuffer={};for(let s in e.geometries[r].vertexBuffer)t.geometries[r].vertexBuffer[s]={data:A(e.geometries[r].vertexBuffer[s].data,e.geometries[r].vertexBuffer[s].stride),stride:e.geometries[r].vertexBuffer[s].stride}}return t}serialize(){let e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<Ie;++t)for(let r in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[r]={data:this.geometries[t].vertexBuffer[r].data.buffer,stride:this.geometries[t].vertexBuffer[r].stride};return e}getBuffers(){let e=[];for(let t=0;t<Ie;++t){e.push(this.geometries[t].indexBuffer.buffer);for(let r in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[r].data.buffer)}return e}};function de(n,e,t,...r){e<n.length?n.splice(e,t,...r):n.push(...r)}var he=class n{constructor(){this.symbolLevels=[]}replay(e,t,r){for(let s of this.symbolLevels)for(let i of s.zLevels){let o=i.geometryDPInfo.unified;if(o)for(let a of o){let{geometryType:l,materialKey:d,indexFrom:h,indexCount:c}=a,u=pt.load(d).symbologyType,f=e.painter.getBrush(l,u),p={geometryType:l,materialKey:d,indexFrom:h,indexCount:c,target:t.getGeometry(l)};f.prepareState(e),f.drawGeometry(e,t,p,r)}}}get empty(){return!this.symbolLevels||this.symbolLevels.length===0}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(let r of e)this._addToList(r,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(let r of e)t=this._removeFromList(r);return t}clone(){let e=new n;for(let t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){let t=this._getDisplayList(e.symbolLevel,e.zOrder),r=t.length,s=e.indexFrom+e.indexCount;for(let i=0;i<r;++i){let o=t[i];if(o.geometryType===e.geometryType&&s>o.indexFrom&&s<=o.indexFrom+o.indexCount){if(s<o.indexFrom+o.indexCount){let a=new Q;a.geometryType=o.geometryType,a.materialKey=o.materialKey,a.indexFrom=s,a.indexCount=o.indexFrom+o.indexCount-s,t.splice(i+1,0,a),o.indexCount=s-o.indexFrom}return i}}}_addToList(e,t){let r=e.symbolLevel,s=e.zOrder,i=this._getDisplayList(r,s),o=t??i.length-1,a=o>=0&&o<i.length?i[o]:null;if(a!==null&&a.materialKey===e.materialKey&&a.indexFrom+a.indexCount===e.indexFrom&&a.geometryType===e.geometryType)a.indexCount+=e.indexCount;else{let l=new Q;l.indexFrom=e.indexFrom,l.indexCount=e.indexCount,l.materialKey=e.materialKey,l.geometryType=e.geometryType,de(i,o+1,0,l)}}_removeFromList(e){let t=e.symbolLevel,r=e.zOrder,s=this._getDisplayList(t,r),i=s.length,o;for(let a=0;a<i;++a){let l=s[a];if(e.indexFrom+e.indexCount>l.indexFrom&&e.indexFrom<l.indexFrom+l.indexCount&&l.geometryType===e.geometryType){o=a;break}}if(o!==void 0){let a=s[o];if(e.indexFrom===a.indexFrom)return a.indexCount-=e.indexCount,a.indexFrom+=e.indexCount,a.indexCount===0&&de(s,o,1),o-1;if(e.indexFrom+e.indexCount===a.indexFrom+a.indexCount)return a.indexCount-=e.indexCount,a.indexCount===0?(de(s,o,1),o-1):o;{let l=a.indexFrom,d=e.indexFrom-a.indexFrom,h=e.indexCount,c=a.indexFrom+a.indexCount-(e.indexFrom+e.indexCount);a.indexCount=d;let u=new Q;return u.geometryType=a.geometryType,u.materialKey=a.materialKey,u.indexFrom=l+d+h,u.indexCount=c,de(s,o+1,0,u),o}}return null}_getDisplayList(e,t){let r,s=this.symbolLevels.length;for(let a=0;a<s;a++)if(this.symbolLevels[a].symbolLevel===e){r=this.symbolLevels[a];break}let i;r||(r=new Le,r.symbolLevel=e,this.symbolLevels.push(r));let o=r.zLevels.length;for(let a=0;a<o;a++)if(r.zLevels[a].zLevel===t){i=r.zLevels[a];break}return i||(i=new Me,i.geometryDPInfo=new ce,i.zLevel=t,r.zLevels.push(i)),i.geometryDPInfo.unified||(i.geometryDPInfo.unified=[]),i.geometryDPInfo.unified}getDPInfoType(){return"unified"}},Q=class n{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){let e=new n;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}},ce=class n{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){let e=new n;return e.fill=this.fill&&this.fill.map(t=>t.clone()),e.line=this.line&&this.line.map(t=>t.clone()),e.marker=this.marker&&this.marker.map(t=>t.clone()),e.text=this.text&&this.text.map(t=>t.clone()),e.label=this.label&&this.label.map(t=>t.clone()),e.unified=this.unified&&this.unified.map(t=>t.clone()),e}},Me=class n{constructor(){this.geometryDPInfo=new ce}clone(){let e=new n;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}},Le=class n{constructor(){this.zLevels=[]}clone(){let e=new n;e.symbolLevel=this.symbolLevel;for(let t of this.zLevels)e.zLevels.push(t.clone());return e}};var J=class{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,r){for(let s in e)this.vertexData.set(s,e[s]);for(let s in this.vertexData)e[s]===null&&this.vertexData.delete(s);this.vertexCount=t,this.indexData=r}};var M=class n{constructor(e,t,r,s=0,i=0){this.id=e,this.geometryType=t,this.materialKey=r,this.minZoom=s,this.maxZoom=i,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}get sortKey(){return this._sortKey==null&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){let e=new n(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,r){let s=new J;for(let i in t){let o=t[i].stride,a=t[i].data;if(!a)continue;let l=[],d=G(o);for(let h=0;h<o*e.vertexCount/d;++h)l[h]=a[h+o*e.vertexFrom/d];s.vertexData.set(i,l)}s.indexData.length=0;for(let i=0;i<e.indexCount;++i)s.indexData[i]=r[i+e.indexFrom]-e.vertexFrom;s.vertexCount=e.vertexCount,this.meshData=s}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new J;for(let r in e){let s=e[r].stride,i=e[r].data,o=[],a=G(s);for(let l=0;l<s*this.vertexCount/a;++l)o[l]=i[l+s*this.vertexFrom/a];this.meshData.vertexData.set(r,o)}this.meshData.indexData.length=0;for(let r=0;r<this.indexCount;++r)this.meshData.indexData[r]=t[r+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,r,s){if(this.meshData){for(let i in t){let o=t[i].stride,a=this.meshData.vertexData.get(i),l=t[i].data,d=G(o);for(let h=0;h<o*this.meshData.vertexCount/d;++h)l[h+o*e/d]=a[h]}for(let i=0;i<this.meshData.indexData.length;++i)s[i+r]=this.meshData.indexData[i]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=r,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(e,t,r){let s=0,i=0;for(let o of e)o.writeMeshDataToBuffers(s,t,i,r),s+=o.vertexCount,i+=o.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){let r=e.readInt32(),s=e.readInt32(),i=new n(t.id,r,s);return i.vertexFrom=e.readInt32(),i.vertexCount=e.readInt32(),i.indexFrom=e.readInt32(),i.indexCount=e.readInt32(),i.minZoom=e.readInt32(),i.maxZoom=e.readInt32(),i}};function ue(n,e){if(e!==null){n.push(e.length);for(let t of e)t.serialize(n);return n}n.push(0)}function kt(n,e,t){let r=n.readInt32(),s=new Array(r);for(let i=0;i<s.length;i++)s[i]=e.deserialize(n,t);return s}var V=class n{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){let e=new n(this.id);return e.set(this),e}clone(){let e=new n(this.id);return e.displayRecords=this.displayRecords.map(t=>t.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),ue(e,this.displayRecords),e}static deserialize(e){let t=e.readInt32(),r=new n(t),s={id:t};return r.displayRecords=kt(e,M,s)??[],r}};var $=class n{constructor(){this.displayObjects=[],this._displayList=null}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(let e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new he;for(let e of this.displayObjects)for(let t of e.displayRecords)this._displayList.addToList(t)}clone(){let e=new n;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(t=>t.clone())),e}serialize(e){return ue(e,this.displayObjects),e}_deserializeObjects(e){let t=e.readInt32(),r=new Array(t),s=new Map;for(let i=0;i<r.length;++i){let o=V.deserialize(e);r[i]=o,s.set(o.id,o)}this.displayObjects=r,this._displayList=null,this._displayObjectRegistry=s}static deserialize(e){let t=new n;return t._deserializeObjects(e),t}};var ee=class n{constructor(e,t){this.data=e,this.stride=t}static decode(e){let t=A(e.data,e.stride),r=e.stride;return new n(t,r)}static fromVertexVector(e){let t=A(e.data.buffer(),e.stride),r=e.stride;return new n(t,r)}},U=class n{constructor(e,t,r){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=r}static decode(e){let t=e.geometryType,r=e.indexBuffer,s={};for(let i in e.namedBuffers)s[i]=ee.decode(e.namedBuffers[i]);return new n(t,r,s)}static fromVertexData(e,t){let r=e.indices,s=A(e.vertices,e.stride),i=e.stride,o={geometry:new ee(s,i)};return new n(t,r,o)}static fromVertexVectors(e){let t=e.geometryType,r=e.indexVector.buffer(),s={},i;for(i in e.namedVectors)s[i]=ee.fromVertexVector(e.namedVectors[i]);return new n(t,r,s)}};var ze=class{get vertexCount(){let e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}constructor(e,t){this.data=e,this.stride=t}transfer(e,t){let r=this.data.buffer();e.vertexCount=this.vertexCount,e.data=r,e.stride=this.stride,t.push(r)}},fe=class{constructor(e,t,r){this.geometryType=e,this.indexVector=new O(Uint32Array,6*t),this.namedVectors={};let s=dt(e,r);for(let i in s){let o=s[i],a;switch(o%4){case 0:case 2:a=new O(Uint32Array,o*t);break;case 1:case 3:a=new O(Uint8Array,o*t)}this.namedVectors[i]=new ze(a,o)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){let r=this.indexVector.buffer(),s={},i;for(i in t.push(r),this.namedVectors){let o=this.namedVectors[i];s[i]={},o.transfer(s[i],t)}e.geometryType=this.geometryType,e.indexBuffer=r,e.namedBuffers=s,this.destroy()}intoBuffers(){let e=U.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}};var pe=new Y,j=new Y,Nt=5;function Zt(n,e){let t={};for(let r in n){let s={data:q(e,n[r]),stride:n[r]};t[r]=s}return t}function Wt(n){return[n.fill||{},n.line||{},n.icon||{},n.text||{},n.label||{}]}function Xt(n){let e=[[],[],[],[],[]],t=n;for(let r of t)for(let s of r.displayRecords)e[s.geometryType].push(s);return e}var te=class n{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){if(pe.reset(),!this.tileDisplayData)return;let e=Xt(this.tileDisplayData.displayObjects);for(let o of e)for(let a of o)a&&pe.needMore(a.geometryType,a.meshData?a.meshData.vertexCount:a.vertexCount,a.meshData?a.meshData.indexData.length:a.indexCount);let t=e.length,r=new P;for(let o=0;o<t;++o){r.geometries[o].indexBuffer=new Uint32Array(Math.round(_e*pe.indicesFor(o)));let a=[],l=this.tileBufferData?.geometries[o].vertexBuffer;if(!l)continue;for(let u in l)a.push(l[u].stride);let d=n._computeVertexAlignment(a),h=Math.round(_e*pe.verticesFor(o)),c=n._align(h,d);for(let u in l){let f=l[u].stride;r.geometries[o].vertexBuffer[u]={stride:f,data:q(c,f)}}}j.reset(),this.tileDisplayData.displayList?.clear();for(let o=0;o<t;++o){let a=e[o];for(let l of a){if(l.meshData)l.writeMeshDataToBuffers(j.verticesFor(o),r.geometries[o].vertexBuffer,j.indicesFor(o),r.geometries[o].indexBuffer),l.meshData=null;else{let d=this.tileBufferData?.geometries[o];if(d){let h=d.vertexBuffer,c=d.indexBuffer,u=r.geometries[o].vertexBuffer,f=r.geometries[o].indexBuffer,p=j.verticesFor(o),m=j.indicesFor(o);N(p,m,u,f,l,h,c),l.vertexFrom=p,l.indexFrom=m}}j.needMore(o,l.vertexCount,l.indexCount)}}let{displayList:s,displayObjects:i}=this.tileDisplayData;if(s)for(let o of i)s.addToList(o.displayRecords);this.tileBufferData=r}getStrides(){let e=[],t=this.tileBufferData?.geometries;if(!t)return e;for(let r=0;r<t.length;++r){let s=t[r];e[r]={};for(let i in s.vertexBuffer)e[r][i]=s.vertexBuffer[i].stride}return e}clone(){let e=new n;return e.tileBufferData=this.tileBufferData?.clone()??null,e.tileDisplayData=this.tileDisplayData?.clone()??null,e}_guessSize(){let e=this.tileDisplayData?.displayObjects??[],t=Math.min(e.length,4),r=12,s=40,i=0;for(let o=0;o<t;o++)i=Math.max(i,e[o].displayRecords.length);return 2*(e.length*r+e.length*i*s)}serialize(){let e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new O(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}}static fromVertexData(e,t){let r={},s=new Map;for(let i of t)s.set(i.id,i);return ut(i=>{let o=e.data[i];if(o!=null){let a=Gt.from(o.records).getCursor();for(;a.next();){let l=a.id,d=a.materialKey,h=a.indexFrom,c=a.indexCount,u=a.vertexFrom,f=a.vertexCount,p=s.get(l),m=new M(l,i,d);m.indexFrom=h,m.indexCount=c,m.vertexFrom=u,m.vertexCount=f,p.displayRecords.push(m)}r[i]=U.fromVertexData(o,i)}else r[i]=new fe(i,0,ne.DEFAULT).intoBuffers()}),n.fromMeshData({displayObjects:t,vertexBuffersMap:r})}static fromMeshData(e){let t=new n,r=new $,s=new P;r.displayObjects=e.displayObjects;for(let i in e.vertexBuffersMap){let o=i,a=e.vertexBuffersMap[o];s.geometries[o].indexBuffer=a.indexBuffer,s.geometries[o].vertexBuffer=a.namedBuffers}return t.tileDisplayData=r,t.tileBufferData=s,t}static bind(e,t){let r=new n;return r.tileDisplayData=e,r.tileBufferData=t,r}static create(e,t){let r=new n;r.tileDisplayData=new $,r.tileDisplayData.displayObjects=e;let s=[0,0,0,0,0],i=[0,0,0,0,0],o=[[],[],[],[],[]];for(let d of e)for(let h of d.displayRecords)o[h.geometryType].push(h),s[h.geometryType]+=h.meshData.vertexCount,i[h.geometryType]+=h.meshData.indexData.length;let a=new P,l=Wt(t);for(let d=0;d<Nt;d++){let h=new Uint32Array(i[d]),c=Zt(l[d],s[d]);M.writeAllMeshDataToBuffers(o[d],c,h),a.geometries[d]={indexBuffer:h,vertexBuffer:c}}return r.tileBufferData=a,r}static _align(e,t){let r=e%t;return r===0?e:e+(t-r)}static _computeVertexAlignment(e){let t=!1,r=!1;for(let s of e)s%4==2?t=!0:s%4!=0&&(r=!0);return r?4:t?2:1}};var me=class n extends Tt{static from(e,t,r){let s=Ct.createInstance(),i=[],o=e.filter(a=>!!a.geometry);for(let a of o){let l=L(a.geometry);$e(i,[a],l,!1,!1,t)}return new n(s,i,r)}constructor(e,t,r){super(e,t,null),this._transform=r}get geometryType(){let e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){let e=new n(this.instance,this._features,this._transform);return this.copyInto(e),e}};var re=new Te,Ge=new Te,Kt="esriGeometryPolyline";function Et(n){n.coords.length=0,n.lengths.length=0}var w=class n{constructor(){this.bounds=C(),this.graphic=null}static acquire(e=null,t,r,s,i){let o;return n._pool.length===0?o=new n:(o=n._pool.pop(),this._set.delete(o)),o.acquire(e,t,r,s,i),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if(E(e.geometry)){let r=e.symbol;if(r==null)return null;if(r?.layers.length>0&&r.layers.some(s=>s.type==="text"||s.type==="marker")){let s=He(e.geometry);return s!==null?rt(t,{},{x:s[0],y:s[1]},!1,!1):null}}return null}acquire(e=null,t,r,s,i){e&&this.set(e,t,r,s,i)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,r,s,i){this.graphic=e,this.geometry=r,this.symbolResource=t,this.bounds=s,i&&(this.size=i)}getGeometryQuantized(e,t,r,s){let i=this.geometry,o=L(i);if(o==null)return null;switch(o){case"esriGeometryPolygon":{let a=i,{rings:l}=a;if(!l||l.length===0)return null;let d;if(d=l.length===1&&l[0].length===2?z(e,{paths:[[l[0][0],l[0][1]]]}):z(e,this.geometry),!d){let h={x:l[0][0][0],y:l[0][0][1]};if(d=z(e,h),d){let{x:c,y:u}=d;return{rings:[[[c-1,u],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return d}case"esriGeometryPolyline":{let a=i;Et(re),Et(Ge);let l=a.hasZ??!1,d=a.hasM??!1;return Je(re,a),tt(Ge,re,l,d,Kt,e.scale[0]),et(re,Ge,l,d,Kt,e),Qe(re,a.hasZ??!1,a.hasM??!1)}case"esriGeometryMultipoint":{let a=i,l=.5*s*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),d=S(r),h=a.points;if(d){let[c,u]=d.valid,f=u-c;h=h.filter(p=>{if(p[0]+l>u||p[0]-l<c){let m=[...p];return p[0]+l>u?m[0]-=f:m[0]+=f,ie(t,p,l)||ie(t,m,l)}return ie(t,p,l)})}return h.length===0?{points:h}:z(e,{points:h})}}return z(e,this.geometry)}};w._pool=[],w._set=new Set;var se={minX:0,minY:0,maxX:0,maxY:0},k=C(),Ht=1e-5;function ye(n,e,t,r,s){return se.minX=e,se.minY=t,se.maxX=r,se.maxY=s,n.search(se)}function Yt(n){return{minX:n.bounds[0],minY:n.bounds[1],maxX:n.bounds[2],maxY:n.bounds[3]}}var ge=class{constructor(e,t,r,s,i,o,a){this._graphics=s,this._onAdd=i,this._onRemove=o,this._hashToCIM=a,this._index=Dt(9,Yt),this._itemByGraphic=new Map,this._inflatedSizeHelper=new we,this._tileInfoView=e,this._uidFieldName=r;let l=e.getClosestInfoForScale(t);l&&(this._resolution=this._tileInfoView.getTileResolution(l.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new mt(e)}hitTest(e,t,r,s,i){e=ot(e,this._tileInfoView.spatialReference);let o=.5*s*window.devicePixelRatio*r;k[0]=e-o,k[1]=t-o,k[2]=e+o,k[3]=t+o;let a=.5*s*(r+b),l=ye(this._index,e-a,t-a,e+a,t+a);if(!l||l.length===0)return[];let d=[],h=C(),c=C();for(let p of l){let{geometry:m,symbolResource:y}=p;this._getSymbolBounds(h,y,m,c,i),c[3]=c[2]=c[1]=c[0]=0,We(h,k)&&p.graphic?.visible&&d.push(p)}if(d.length===0)return[];let u=this._hittestDrawHelper,f=[];for(let p of d){let{geometry:m,symbolResource:y}=p,{hash:_,textInfo:T}=y,F=this._hashToCIM.get(_);F&&u.hitTest(k,F.symbol,m,T,i,s)&&f.push(p)}return f.sort(Qt),f.map(p=>p.graphic)}getGraphicsData(e,t,r){let s=this._searchForItems(t);if(s.length===0||r.length===0)return[];s.sort((c,u)=>c.zorder-u.zorder),s[0].insertAfter=-1;for(let c=1;c<s.length;c++)s[c].insertAfter=s[c-1].graphic.uid;s.sort((c,u)=>c.graphic.uid-u.graphic.uid),r.sort((c,u)=>c.uid-u.uid);let i,o=0,a=0,l=t.resolution,d=[],h={originPosition:"upperLeft",scale:[l,l],translate:[t.bounds[0],t.bounds[3]]};for(let c of r){for(a=-2;o<s.length;)if(i=s[o],o++,c.uid===i.graphic.uid){a=i.insertAfter;break}if(!i?.geometry||a===-2)continue;let u=i.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference,l),f=xe({},i.graphic.attributes);f[this._uidFieldName]=c.uid,i.groupId==null&&(i.groupId=e.createTemplateGroup(i.symbol,null)),d.push({centroid:w.getCentroidQuantized(i,h),geometry:u,attributes:f,symbol:i.symbol,groupId:i.groupId,insertAfter:a,zorder:i.zorder})}return d.sort((c,u)=>c.zorder-u.zorder),d}queryTileData(e,t){if(this._graphics.length===0)return[];let{bounds:r,resolution:s}=t,i=this._searchForItems(t),o=[];return i.length===0||this._createTileGraphics(o,e,i,{originPosition:"upperLeft",scale:[s,s],translate:[r[0],r[3]]},t),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){let t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter(e=>e.graphic.visible).map(e=>e.bounds)}addOrModify(e,t,r){if(!e||t==null)return;this.has(e)&&this.remove(e),this._onAdd(e);let s=[0,0,0,0],i=this._getSymbolBounds(null,t,r,s,0),o=w.acquire(e,t,r,i??null,s);return this._itemByGraphic.set(e,o),r&&this._index.insert(o),o.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);let t=this._itemByGraphic.get(e);t?.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){let e=this._graphics.items,t,r;for(let s=0;s<e.length;s++)r=e[s],t=this._itemByGraphic.get(r),t&&(t.zorder=s)}update(e,t,r){let s=this._itemByGraphic.get(e);s.groupId=null;let i=qe(s.bounds);this._index.remove(s);let o=this._getSymbolBounds(s.bounds,t,r,s.size,0);return o!=null&&s.set(e,t,r,o,s.size),r&&this._index.insert(s),{oldBounds:i,newBounds:s.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();let t=this._itemByGraphic,r=[];for(let[s,i]of t){let o=this._getSymbolBounds(i.bounds,i.symbolResource,i.geometry,i.size,0);i.geometry&&o!=null&&(i.bounds=o,r.push(i))}this._index.load(r)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,r,s,i){let o=this._uidFieldName,a=this._tileInfoView.spatialReference,{bounds:l,resolution:d}=i,h,c,u,f;r.sort((p,m)=>p.zorder-m.zorder);for(let p=0;p<r.length;p++){u=r[p],h=u.graphic,c=u.getGeometryQuantized(s,l,a,d),f=p===0?-1:r[p-1].graphic.uid;let m=xe({},u.graphic.attributes);m[o]=h.uid,u.groupId==null&&(u.groupId=t.createTemplateGroup(u.symbol,null)),e.push({centroid:w.getCentroidQuantized(u,s),geometry:c,attributes:m,symbol:u.symbol,groupId:u.groupId,insertAfter:f,zorder:u.zorder})}}_searchForItems(e){let t=this._tileInfoView.spatialReference,r=e.bounds,s=S(t);if(s&&t.isWrappable){let[i,o]=s.valid,a=Math.abs(r[2]-o)<Ht,l=Math.abs(r[0]-i)<Ht;if((!a||!l)&&(a||l)){let d=e.resolution,h;h=C(a?[i,r[1],i+d*b,r[3]]:[o-d*b,r[1],o,r[3]]);let c=ye(this._index,r[0],r[1],r[2],r[3]),u=ye(this._index,h[0],h[1],h[2],h[3]);return[...new Set([...c,...u])]}}return ye(this._index,r[0],r[1],r[2],r[3])}_getSymbolBounds(e,t,r,s,i){if(!t||!t.symbol||!r)return null;if(e||(e=C()),Xe(e,r),!s||s[0]===0&&s[1]===0&&s[2]===0&&s[3]===0){let{hash:l,textInfo:d}=t,h=this._hashToCIM.get(l);if(!h)return null;s||(s=[0,0,0,0]);let c=this._inflatedSizeHelper.getSymbolInflateSize(s,h.symbol,this._cimResourceManager,i,d);s[0]=H(c[0]),s[1]=H(c[1]),s[2]=H(c[2]),s[3]=H(c[3])}let o=this._resolution,a=we.safeSize(s);return e[0]-=a*o,e[1]-=a*o,e[2]+=a*o,e[3]+=a*o,e}},Qt=(n,e)=>{let t=Be(n.graphic),r=Be(e.graphic);return t===r?e.zorder-n.zorder:t-r};var Jt=Oe("esri-2d-graphic-debug");function Ae(n,e,t){let r=t.get(n);return r||(r={tile:e,addedOrModified:[],removed:[]},t.set(n,r)),r}var x=class extends Ye(je){constructor(n){super(n),this._storage=new Rt,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.renderer=null,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(n,e,t){if(n){let r=Se(n),s=Ut({indexCount:0,fields:{}},"feature",n,r);this._matcher=bt(s,e,null,t)}}_createDisplayId(n){let e=this._displayIds.get(n);return e||(e=this._storage.createDisplayId(),this._displayIds.set(n,e)),e}initialize(){this._attributeStore=new St({type:"local",initialize:s=>Promise.resolve(this.container.attributeView.initialize(s)),update:s=>this.container.attributeView.requestUpdate(s),render:()=>this.container.requestRender()},Mt("2d")),this.container.checkHighlight=()=>this._attributeStore.hasHighlight;let n=s=>{this._createDisplayId(s.uid),this._setFilterState(s.uid,s.visible)},e=s=>{let i=this._displayIds.get(s.uid);this._displayIds.delete(s.uid),this._storage.releaseDisplayId(i)},t=new xt(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new ge(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,n,e,this._hashToCIM),this._meshFactory=new _t(null,this.uid,t),this._templateStore=t,this.addHandles([ke(()=>this._effectiveRenderer,s=>{this._createMatcher(s,t,this.container.stage.resourceManager);for(let i of this.graphics)this._pendingUpdate.updated.add(i);this.requestUpdate()}),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{Jt&&this.container.enableRenderingBounds(()=>this._graphicStore.getAllBounds()),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.addHandles(this.graphics.on("change",i=>this._graphicsChangeHandler(i)),"graphics");let s=this.container.stage.resourceManager;this._createMatcher(this._effectiveRenderer,t,s),this._graphicStore.setResourceManager(s),this._attached=!0,this.notifyChange("updating")})]);let r=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:r,removed:[]})}get _effectiveRenderer(){return typeof this.renderer=="function"?this.renderer():this.renderer}get updating(){return!this._attached||this._updatingGraphicsTimer!==null||this._pendingUpdate.added.size>0||this._pendingUpdate.removed.size>0||this._pendingUpdate.updated.size>0||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore?.updatingHandles.updating||this._processing}hitTest(n){if(!this.view||this.view.suspended)return[];let{resolution:e,rotation:t}=this.view.state;return this._graphicStore.hitTest(n.x,n.y,2,e,t)}update(n){g(this._controller.signal);let e=n.state,{resolution:t}=e;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(n){this.updateRequested&&(this.updateRequested=!1,this.update(n))}graphicUpdateHandler(n){let{graphic:e,property:t}=n;switch(t){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(e),this.requestUpdate();break;case"visible":this._setFilterState(e.uid,e.visible),this._attributeStore.sendUpdates()}}setHighlight(n){let e=n.map(t=>this._displayIds.get(t)).filter(Pe);this._attributeStore.setHighlight(n,e)}_getIntersectingTiles(n){let e=this._graphicStore.getBounds(n);if(!e||Ne(e)===0||Ze(e)===0)return[];let t=At(e,this.view.spatialReference);return t!=null?[...new Set([...this.view.graphicsTileStore.boundsIntersections(t[0]),...this.view.graphicsTileStore.boundsIntersections(t[1])])]:this.view.graphicsTileStore.boundsIntersections(e)}_updateTile(n){return B(this,null,function*(){g(this._controller.signal);let e=n.tile,t=this._getGraphicsData(this._templateStore,e,n.addedOrModified),r=yield this._processGraphics(e,t);return g(this._controller.signal),this._patchTile(e.key,{type:"update",addOrUpdate:r,remove:n.removed,end:!0,clear:!1,sort:!1}),r})}_patchTile(n,e){let t=this._tiles.get(n);t&&(this.container.onTileData(t,e),this.container.requestRender())}_graphicsChangeHandler(n){let e=this._pendingUpdate;for(let t of n.added)e.added.add(t);for(let t of n.moved)e.updated.add(t);for(let t of n.removed)this._pendingUpdate.added.has(t)?e.added.delete(t):e.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){let n={added:[],removed:[],updated:[]};if(!this.graphics)return n;let e=this._pendingUpdate;for(let t of this.graphics.items)e.added.has(t)?n.added.push(t):e.updated.has(t)&&n.updated.push(t);for(let t of e.removed)this._graphicStore.has(t)&&n.removed.push(t);return e.added.clear(),e.removed.clear(),e.updated.clear(),n}_updateGraphics(){return B(this,null,function*(){this._processing=!0;let{added:n,removed:e,updated:t}=this._getGraphicsToUpdate(),r=this._tilesToUpdate,s;try{if(!this._graphicStoreUpdate){let h=this.view.state,{resolution:c}=h;this._graphicStore.updateLevel(c)}let i=[],o=new Array(n.length+e.length);for(let h=0;h<t.length;h++){let c=t[h],u=this._getIntersectingTiles(c);for(let f of u)s=f.id,Ae(s,f,r).removed.push(this._displayIds.get(c.uid));i.push(this._updateGraphic(c,null)),o[h]=c}let a=t.length;for(let h=0;h<n.length;h++){let c=n[h];o[a+h]=c,this._graphicsSet.add(c),i.push(this._addGraphic(c))}for(let h of e){this._abortProcessingGraphic(h.uid);let c=this._getIntersectingTiles(h);for(let u of c)s=u.id,Ae(s,u,r).removed.push(this._displayIds.get(h.uid));this._graphicsSet.delete(h),this._graphicStore.remove(h)}let l;this._flipUpdatingGraphics(),yield Promise.all(i);for(let h=0;h<o.length;h++){l=o[h];let c=this._getIntersectingTiles(l);for(let u of c)s=u.id,Ae(s,u,r).addedOrModified.push(l)}this._graphicStore.updateZ();let d=[];for(let[h,c]of r)d.push(this._updateTile(c));yield Promise.all(d)}catch(i){K(i)}for(let i of e)try{let o=yield this._getSymbolForGraphic(i,null);if(o){let a=o.hash();this._hashToExpandedSymbol.delete(a)}}catch(o){K(o)}r.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())})}_getArcadeInfo(n){let e=(n.attributes?Object.keys(n.attributes):[]).map(t=>({name:t,alias:t,type:typeof n.attributes[t]=="string"?"esriFieldTypeString":"esriFieldTypeDouble"}));return n.geometry==null?null:{geometryType:L(n.geometry),spatialReference:Ke.fromJSON(n.geometry.spatialReference),fields:e}}_getSymbolForGraphic(n,e){return g(this._controller.signal),n.symbol!=null?Promise.resolve(n.symbol):this._effectiveRenderer!=null?this._effectiveRenderer.getSymbolAsync(n,{scale:this.view.state.scale,signal:e!=null?e.signal:null}):Promise.resolve(this._getNullSymbol(n))}_getCIMSymbol(n,e,t){let r=this._hashToCIM.get(e);if(r)return Promise.resolve(r);let s=yt(n);if(s!=null){if(s.type==="CIMSymbolReference")return r=s,this._hashToCIM.set(e,r),Promise.resolve(r);let i=this._hashToCIMSymbolPromise.get(e);return i||(i=s.fetchCIMSymbol(t).then(o=>(this._hashToCIM.set(e,o.data),this._hashToCIMSymbolPromise.delete(e),o)).catch(o=>(this._hashToCIMSymbolPromise.delete(e),ve(o),null)),this._hashToCIMSymbolPromise.set(e,i),i)}return Promise.resolve(null)}_expandCIMSymbol(n,e,t,r){let s=this._hashToExpandedSymbol.get(t);if(s)return Promise.resolve(s);let i=this._hashToExpandedSymbolPromise.get(t);if(i)return i;let o=this.container.stage,a=this._getArcadeInfo(e),l=Se(null),d=vt(n,l);return i=gt(d,a,o.resourceManager,r),this._hashToExpandedSymbolPromise.set(t,i),i.then(h=>(this._hashToExpandedSymbol.set(t,h),this._hashToExpandedSymbolPromise.delete(t),h)),i}_getSymbolResources(n,e){return B(this,null,function*(){return g(this._controller.signal),this.container.stage?this._getSymbolForGraphic(n,e).then(t=>{if(!t)return null;let r=t.hash();return this._getCIMSymbol(t,r,e).then(s=>s==null?null:this._expandCIMSymbol(s,n,r,e).then(i=>{let o=i.layers.filter(a=>a.type==="text"&&typeof a.text=="string");if(o&&o.length>0){let a=new Array(o.length);for(let d=0;d<o.length;d++){let h=o[d],c=[],[u]=lt(h.text);h.text=u,t.type==="text"&&(h.lineWidth=t.lineWidth);for(let f=0;f<u.length;f++)c.push(u.charCodeAt(f));a[d]={symbol:h,id:d,glyphIds:c}}let l=new Map;return this.container.getMaterialItems(a).then(d=>{Ve(d);for(let h=0;h<o.length;h++){let c=o[h];l.set(c.cim,{text:c.text,mosaicItem:d[h].mosaicItem})}return{symbol:i,textInfo:l,hash:r}})}return{symbol:i,hash:r}}))}).catch(t=>(ve(t),null)):null})}_projectAndNormalizeGeometry(n,e){return B(this,null,function*(){if(g(this._controller.signal),n.geometry==null||n.geometry.type==="mesh")return null;let t=n.geometry;if(E(t)){let i=t.rings;t.rings=i}else if(Ce(t)){let i=t.paths;t.paths=i}else if(be(t)){let i=yield this._getSymbolForGraphic(n,e);g(this._controller.signal),i&&(Pt(i.type)||Ot(i.type))?t=t.center:t=Vt(t)}yield st(t.spatialReference,this.view.spatialReference);let r=It(t),s=it(r,t.spatialReference,this.view.spatialReference);return s&&Ee(s),s})}_onTileUpdate(n){let e=S(this.view.spatialReference);if(n.added&&n.added.length>0)for(let t of n.added)this._addNewTile(t,e);if(n.removed&&n.removed.length>0)for(let t of n.removed)this._removeTile(t.key)}_addGraphic(n){return B(this,null,function*(){this._abortProcessingGraphic(n.uid),g(this._controller.signal);let e=new AbortController;this._graphicIdToAbortController.set(n.uid,e);let t={signal:e.signal};try{yield this._addOrUpdateGraphic(n,t),g(this._controller.signal),this._graphicIdToAbortController.delete(n.uid)}catch(r){if(this._graphicIdToAbortController.delete(n.uid),!K(r))throw r}})}_updateGraphic(n,e){g(this._controller.signal);let t=this._projectAndNormalizeGeometry(n,e),r=this._getSymbolResources(n,e);return Promise.all([t,r]).then(([s,i])=>{g(this._controller.signal),this._graphicStore.addOrModify(n,i,s)})}_addOrUpdateGraphic(n,e){g(this._controller.signal);let t=this._projectAndNormalizeGeometry(n,e),r=this._getSymbolResources(n,e);return Promise.all([t,r]).then(([s,i])=>{g(this._controller.signal),this._graphicsSet.has(n)&&this._graphicStore.addOrModify(n,i,s)})}_addTile(n){let e=this.view.featuresTilingScheme.getTileBounds(C(),n),t=this.view.featuresTilingScheme.getTileResolution(n.level),r=new le(n,t,e[0],e[3]);return this._tiles.set(n,r),this.container.addChild(r),r}_addNewTile(n,e){return B(this,null,function*(){let t=this._addTile(n.key),r=this._graphicStore.queryTileData(this._templateStore,n);if(r.length===0)return;if(e){let i=Math.round((e.valid[1]-e.valid[0])/n.resolution);for(let o of r)o.geometry&&(De(o.geometry)||oe(o.geometry))&&this._wrapPoints(o,i)}let s=n.key;this._tileUpdateSet.add(n.key),this.notifyChange("updating");try{let i={type:"update",clear:!1,addOrUpdate:yield this._processGraphics(n,r),remove:[],end:!0,sort:!1};t.patch(i),this._tileUpdateSet.delete(s),this.notifyChange("updating")}catch(i){if(this._tileUpdateSet.delete(s),this.notifyChange("updating"),!K(i))throw i}})}_removeTile(n){if(!this._tiles.has(n))return;let e=this._tiles.get(n);this.container.removeChild(e),e.destroy(),this._tiles.delete(n)}_setFilterState(n,e){let t=this._displayIds.get(n),r=this._attributeStore.getHighlightFlag(n);this._attributeStore.setData(t,0,0,r|(e?at:0))}_getGraphicsData(n,e,t){let r=this.view,s=S(r.spatialReference),i=this._graphicStore.getGraphicsData(n,e,t);if(s){let o=Math.round((s.valid[1]-s.valid[0])/e.resolution);for(let a of i)a.geometry&&(De(a.geometry)||oe(a.geometry))&&this._wrapPoints(a,o)}return i}_wrapPoints(n,e){let t=n.geometry;oe(t)?this._wrapMultipoint(t,e):this._wrapPoint(n,e)}_wrapMultipoint(n,e){let t=n.points,r=[],s=0,i=0;for(let[o,a]of t){if(r.push([o+s,a]),s=0,e===R){let l=5*b;o+i<l?(r.push([e,0]),s=-e):o+i>R-l&&(r.push([-e,0]),s=e)}else o+i<-b?(r.push([e,0]),s=-e):o+i>R+b&&(r.push([-e,0]),s=e);i+=o}n.points=r}_wrapPoint(n,e){let t=n.geometry;if(e===R){let r=5*b;t.x<r?n.geometry={points:[[t.x,t.y],[e,0]]}:t.x>R-r&&(n.geometry={points:[[t.x,t.y],[-e,0]]})}else t.x<-b?n.geometry={points:[[t.x,t.y],[e,0]]}:t.x>R+b&&(n.geometry={points:[[t.x,t.y],[-e,0]]})}_processGraphics(n,e,t){if(!(e&&e.length)||!this._meshFactory)return Promise.resolve(null);let r=me.from(e,this.uid,n.transform),s=this._meshFactory;return this._matcher.then(i=>s.analyzeGraphics(r,this.container.stage.resourceManager,i,null,null,t).then(()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(n,r))))}_processAnalyzedGraphics(n,e){let t=this._meshFactory,r=e.getSize(),s=e.getCursor(),i={features:r,records:r,metrics:0},o=new ft(n.key.id,i,ne.DEFAULT,!1,!1),a=[];for(;s.next();){let c=s.readGraphic();c.insertAfter=c.insertAfter===-1?-1:this._displayIds.get(c.insertAfter),c.displayId=this._displayIds.get(c.attributes[this.uid]);let u=new V(c.displayId);u.insertAfter=c.insertAfter,a.push(u),t.writeGraphic(o,s,n.level,this.container.stage.resourceManager)}let l=n.tileInfoView.tileInfo.isWrappable,d=o.serialize(l);if(d.length!==1)return new te;let h=d[0].message;return te.fromVertexData(h,a)}_abortProcessingGraphic(n){this._graphicIdToAbortController.get(n)?.abort()}_getNullSymbol(n){let e=n.geometry;return Ce(e)?Ft:E(e)||be(e)?Bt:this.defaultPointSymbolEnabled?wt:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};v([D()],x.prototype,"_effectiveRenderer",null),v([D({constructOnly:!0})],x.prototype,"requestUpdateCallback",void 0),v([D()],x.prototype,"container",void 0),v([D({constructOnly:!0})],x.prototype,"graphics",void 0),v([D()],x.prototype,"renderer",void 0),v([D()],x.prototype,"updating",null),v([D()],x.prototype,"view",void 0),v([D()],x.prototype,"updateRequested",void 0),v([D()],x.prototype,"defaultPointSymbolEnabled",void 0),x=v([Ue("esri.views.2d.layers.support.GraphicsView2D")],x);var ni=x;export{ni as a};
