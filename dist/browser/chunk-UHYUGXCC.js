import{d as Z}from"./chunk-JHWJLQOC.js";import"./chunk-DTWRSK4M.js";import{p as _,x}from"./chunk-M3GEY4SR.js";import"./chunk-7QY3BMVN.js";import"./chunk-4HXOVZYF.js";import"./chunk-U2QVIRVP.js";import"./chunk-VXOK76QV.js";import"./chunk-I3S324BU.js";import{c as f}from"./chunk-O5IGEGOS.js";import"./chunk-YH4Z47PR.js";import"./chunk-CJJRHJ2S.js";import"./chunk-QZ4L25WE.js";import"./chunk-4ATIL3QV.js";import"./chunk-WUM4JBII.js";import{a as M}from"./chunk-3S2DT2SI.js";import"./chunk-U62SHMHB.js";import"./chunk-55ESOXMJ.js";import"./chunk-BCREO4Q5.js";import"./chunk-EJ3VIBAJ.js";import"./chunk-4LHUJTP5.js";import"./chunk-NBRBW7H5.js";import"./chunk-6QIKBCPR.js";import"./chunk-AHKJJNRE.js";import"./chunk-HBTOKQC5.js";import{b as m}from"./chunk-A52LT7YB.js";import"./chunk-CZPMRK53.js";import"./chunk-2BBIRZVO.js";import"./chunk-WQAXQD4X.js";import"./chunk-IUPUERVS.js";import"./chunk-XF4NUYV7.js";import"./chunk-FNDPIYNC.js";import{B as p}from"./chunk-WMYPRHRR.js";import"./chunk-IAMDMFZ7.js";import"./chunk-53MWZ23O.js";import"./chunk-PT7S6WNL.js";import"./chunk-XDTDVCGP.js";import"./chunk-JPDAKIWT.js";import"./chunk-465DRXTW.js";import"./chunk-AC62Z3FX.js";import{a as g,b}from"./chunk-ESDYQQXO.js";var u=class{constructor(e,t,r){this.uid=e,this.geometry=t,this.attributes=r,this.visible=!0,this.objectId=null,this.centroid=null}};var h=class{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}};function C(n,e){return e}function y(n,e,t,r){switch(t){case 0:return l(n,e+r,0);case 1:return n.originPosition==="lowerLeft"?l(n,e+r,1):F(n,e+r,1)}}function P(n,e,t,r){return t===2?l(n,e,2):y(n,e,t,r)}function R(n,e,t,r){return t===2?l(n,e,3):y(n,e,t,r)}function k(n,e,t,r){return t===3?l(n,e,3):P(n,e,t,r)}function l({translate:n,scale:e},t,r){return n[r]+t*e[r]}function F({translate:n,scale:e},t,r){return n[r]-t*e[r]}var c=class{constructor(e){this._options=e,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=C,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{}}createFeatureResult(){return new h}finishFeatureResult(e){if(this._options.applyTransform&&(e.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!e.hasZ)return;let t=M(e.geometryType,this._options.sourceSpatialReference,e.spatialReference);if(t!=null)for(let r of e.features)t(r.geometry)}createSpatialReference(){return new m}addField(e,t){e.fields.push(f.fromJSON(t));let r=e.fields.map(s=>s.name);this._attributesConstructor=function(){for(let s of r)this[s]=null}}addFeature(e,t){let r=this._options.maxStringAttributeLength??0;if(r>0)for(let s in t.attributes){let i=t.attributes[s];typeof i=="string"&&i.length>r&&(t.attributes[s]="")}e.features.push(t)}addQueryGeometry(e,t){let{queryGeometry:r,queryGeometryType:s}=t,i=x(r.clone(),r,!1,!1,this._transform),o=_(i,s,!1,!1),a=null;switch(s){case"esriGeometryPoint":a="point";break;case"esriGeometryPolygon":a="polygon";break;case"esriGeometryPolyline":a="polyline";break;case"esriGeometryMultipoint":a="multipoint"}o.type=a,e.queryGeometryType=s,e.queryGeometry=o}prepareFeatures(e){switch(this._transform=e.transform??null,this._options.applyTransform&&e.transform&&(this._applyTransform=this._deriveApplyTransform(e)),this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++,e.geometryType){case"point":this.addCoordinate=(t,r,s)=>this.addCoordinatePoint(t,r,s),this.createGeometry=t=>this.createPointGeometry(t);break;case"polygon":this.addCoordinate=(t,r,s)=>this._addCoordinatePolygon(t,r,s),this.createGeometry=t=>this._createPolygonGeometry(t);break;case"polyline":this.addCoordinate=(t,r,s)=>this._addCoordinatePolyline(t,r,s),this.createGeometry=t=>this._createPolylineGeometry(t);break;case"multipoint":this.addCoordinate=(t,r,s)=>this._addCoordinateMultipoint(t,r,s),this.createGeometry=t=>this._createMultipointGeometry(t);break;case"mesh":case"extent":break;default:e.geometryType}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new u(p(),null,new this._attributesConstructor)}allocateCoordinates(){let e=this._lengths.reduce((t,r)=>t+r,0);this._coordinateBuffer=new Float64Array(e*this._vertexDimension),this._coordinateBufferPtr=0}addLength(e,t){this._lengths.length===0&&(this._toAddInCurrentPath=t),this._lengths.push(t)}createPointGeometry(e){let t={type:"point",x:0,y:0,spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM};return t.hasZ&&(t.z=0),t.hasM&&(t.m=0),t}addCoordinatePoint(e,t,r){let s=this._transform?this._applyTransform(this._transform,t,r,0):t;if(s!=null)switch(r){case 0:e.x=s;break;case 1:e.y=s;break;case 2:e.hasZ?e.z=s:e.m=s;break;case 3:e.m=s}}_transformPathLikeValue(e,t){let r=0;return t<=1&&(r=this._previousCoordinate[t],this._previousCoordinate[t]+=e),this._transform?this._applyTransform(this._transform,e,t,r):e}_addCoordinatePolyline(e,t,r){this._dehydratedAddPointsCoordinate(e.paths,t,r)}_addCoordinatePolygon(e,t,r){this._dehydratedAddPointsCoordinate(e.rings,t,r)}_addCoordinateMultipoint(e,t,r){r===0&&e.points.push([]);let s=this._transformPathLikeValue(t,r);e.points[e.points.length-1].push(s)}_createPolygonGeometry(e){return{type:"polygon",rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return{type:"polyline",paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return{type:"multipoint",points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,r){r===0&&this._toAddInCurrentPath--==0&&(e.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);let s=this._transformPathLikeValue(t,r),i=e[e.length-1],o=this._coordinateBuffer;if(o){if(r===0){let a=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;i.push(new Float64Array(o.buffer,a,this._vertexDimension))}o[this._coordinateBufferPtr++]=s}}_deriveApplyTransform(e){let{hasZ:t,hasM:r}=e;return t&&r?k:t?P:r?R:y}};var d=class{_parseFeatureQuery(e){let t=Z(e.buffer,new c(e.options)),r=b(g({},t),{spatialReference:t.spatialReference?.toJSON(),fields:t.fields?t.fields.map(s=>s.toJSON()):void 0});return Promise.resolve(r)}};function ye(){return new d}export{ye as default};
