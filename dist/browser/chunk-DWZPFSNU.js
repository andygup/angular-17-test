import{a as y}from"./chunk-45GFWXQC.js";import{a as k}from"./chunk-TQYOVOJO.js";import{a as v}from"./chunk-QDNKD3H5.js";import{t as f}from"./chunk-WMYPRHRR.js";import{m as o}from"./chunk-IAMDMFZ7.js";import{h as p,m,n as g,w as d,z as b}from"./chunk-PT7S6WNL.js";import{d as c}from"./chunk-XDTDVCGP.js";var h=class{constructor(){this._map=new Map,this._observable=new v}get size(){return o(this._observable),this._map.size}clear(){this._map.size>0&&(this._map.clear(),this._observable.notify())}delete(e){let s=this._map.delete(e);return s&&this._observable.notify(),s}entries(){return o(this._observable),this._map.entries()}forEach(e,s){o(this._observable),this._map.forEach((r,t)=>e.call(s,r,t,this),s)}get(e){return o(this._observable),this._map.get(e)}has(e){return o(this._observable),this._map.has(e)}keys(){return o(this._observable),this._map.keys()}set(e,s){return this._map.set(e,s),this._observable.notify(),this}values(){return o(this._observable),this._map.values()}[Symbol.iterator](){return o(this._observable),this._map[Symbol.iterator]()}get[Symbol.toStringTag](){return this._map[Symbol.toStringTag]}};var u=class{constructor(e,s){this.item=e,this.controller=s,this.promise=null}},q=class{constructor(e){this._schedule=null,this._task=null,this._deferreds=new h,this._controllers=new h,this._processingItems=new h,this._pausedSignal=k(!1),this.concurrency=1,e.concurrency&&(this.concurrency=e.concurrency),this._queue=new y(e.peeker),this.process=e.process;let s=e.scheduler;e.priority&&s&&(this._task=s.registerTask(e.priority,this))}destroy(){this.clear(),this._schedule=c(this._schedule),this._task=c(this._task)}get updating(){return!!this._task?.updating||this.running}get length(){return this._processingItems.size+this._queue.length}abort(e){let s=this._controllers.get(e);s&&s.abort()}clear(){this._queue.clear();let e=[];this._controllers.forEach(s=>e.push(s)),this._controllers.clear(),e.forEach(s=>s.abort()),this._processingItems.clear(),this._cancelNext()}forEach(e){this._deferreds.forEach((s,r)=>e(r))}get(e){let s=this._deferreds.get(e);return s?s.promise:void 0}isOngoing(e){return this._processingItems.has(e)}has(e){return this._deferreds.has(e)}pause(){this._pausedSignal.value||(this._pausedSignal.value=!0,this._cancelNext())}push(e,s){let r=this.get(e);if(r)return r;let t=new AbortController,i=null;s&&(i=m(s,()=>t.abort()));let x=()=>{let _=this._processingItems.get(e);_&&_.controller.abort(),l(),n.reject(p())},l=()=>{S.remove(),i?.remove(),this._deferreds.delete(e),this._controllers.delete(e),this._queue.remove(e),this._processingItems.delete(e),this._scheduleNext()},S=g(t.signal,x),n=b();return this._deferreds.set(e,n),this._controllers.set(e,t),n.promise.then(l,l),this._queue.push(e),this._scheduleNext(),n.promise}last(){return this._queue.last()}peek(){return this._queue.peek()}popLast(){return this._queue.popLast()}reset(){let e=[];this._processingItems.forEach(s=>e.push(s)),this._processingItems.clear();for(let s of e)this._queue.push(s.item),s.controller.abort();this._scheduleNext()}resume(){this._pausedSignal.value&&(this._pausedSignal.value=!1,this._scheduleNext())}takeAll(){let e=[];for(;this._queue.length;)e.push(this._queue.pop());return this.clear(),e}get running(){return!this._pausedSignal.value&&this._queue.length>0&&this._processingItems.size<this.concurrency}runTask(e){for(;!e.done&&this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop()),e.madeProgress()}_scheduleNext(){this._task||this._pausedSignal.value||this._schedule||(this._schedule=f(()=>{this._schedule=null,this._next()}))}_next(){for(;this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop())}_cancelNext(){this._schedule&&(this._schedule.remove(),this._schedule=null)}_processResult(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).resolve(s))}_processError(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).reject(s))}_canProcessFulfillment(e){return!!this._deferreds.get(e.item)&&this._processingItems.get(e.item)===e}_process(e){if(e==null)return;let s,r=new AbortController,t=new u(e,r);this._processingItems.set(e,t);try{s=this.process(e,r.signal)}catch(i){this._processError(t,i)}d(s)?(t.promise=s,s.then(i=>this._processResult(t,i),i=>this._processError(t,i))):this._processResult(t,s)}get test(){return{update:e=>this.runTask(e)}}};export{q as a};
