import{c as Me}from"./chunk-IFG5AX52.js";import{a as Fe}from"./chunk-HRUHPNEV.js";import{a as Ae}from"./chunk-XW7QX6JS.js";import{a as Oe}from"./chunk-E4G7B7K5.js";import{a as Le}from"./chunk-ZVPHD6FG.js";import{a as Ee}from"./chunk-BHUF7DXK.js";import{b as Te}from"./chunk-XFFNQH2H.js";import{g as xe}from"./chunk-VL6L3PH6.js";import{b as Ie,c as ve}from"./chunk-EGQHBYFL.js";import{a as De}from"./chunk-RAIGRXV3.js";import{a as ue}from"./chunk-URPONBMS.js";import{c as Pe,m as _e}from"./chunk-QB3NROF7.js";import{a as we}from"./chunk-N3XRI3RU.js";import{n as Se}from"./chunk-4KJ462UD.js";import{a as de}from"./chunk-HSB35X5B.js";import{c as K}from"./chunk-FBHJEXCM.js";import{u as be}from"./chunk-MYELF7MV.js";import{a as ge}from"./chunk-HTB4QCFJ.js";import{c as he}from"./chunk-TJ3KO5EG.js";import{a as k,b as W}from"./chunk-6N5DPLFH.js";import{b as H}from"./chunk-HI2T2YSZ.js";import{c as fe}from"./chunk-O5IGEGOS.js";import{a as me}from"./chunk-EDSVJRYE.js";import{b as ce}from"./chunk-SVEGZVCP.js";import{a as q}from"./chunk-QZ4L25WE.js";import{a as oe,f as le}from"./chunk-CBOFHDSC.js";import{b as P}from"./chunk-FC3MPJI4.js";import{a as pe}from"./chunk-6J4Y65BV.js";import{j as R}from"./chunk-6QIKBCPR.js";import{a as f}from"./chunk-HBTOKQC5.js";import{a as D,b as ye}from"./chunk-A52LT7YB.js";import{a as ne}from"./chunk-2BBIRZVO.js";import{$ as _,i as se,s as G}from"./chunk-XF4NUYV7.js";import{H as n,l as p,n as E,o as re}from"./chunk-WMYPRHRR.js";import{H as N,R as T,b as O,u as te,x as ie,y as $,z as ae}from"./chunk-IAMDMFZ7.js";import{a as s}from"./chunk-53MWZ23O.js";import{i as Q}from"./chunk-PT7S6WNL.js";import{b as F,p as w,r as h}from"./chunk-465DRXTW.js";import{a as ee}from"./chunk-AC62Z3FX.js";import{a as I,b as x,g}from"./chunk-ESDYQQXO.js";var ir=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(t,i){let a=i.capabilities&&i.capabilities.split(",").map(je=>je.toLowerCase().trim());if(!a)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};let o=this.type,y=o!=="tile"&&!!i.supportsDynamicLayers,u=a.includes("query"),c=a.includes("map"),S=!!i.exportTilesAllowed,v=a.includes("tilemap"),A=a.includes("data"),M=o!=="tile"&&(!i.tileInfo||y),V=o!=="tile"&&(!i.tileInfo||y),d=o!=="tile",m=i.cimVersion&&ge.parse(i.cimVersion),j=m?.since(1,4)??!1,C=m?.since(2,0)??!1;return{operations:{supportsExportMap:c,supportsExportTiles:S,supportsIdentify:u,supportsQuery:A,supportsTileMap:v},exportMap:c?{supportsArcadeExpressionForLabeling:j,supportsSublayersChanges:d,supportsDynamicLayers:y,supportsSublayerVisibility:M,supportsSublayerDefinitionExpression:V,supportsCIMSymbols:C}:null,exportTiles:S?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(t,i){let a=i.currentVersion;return a||(a=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),a}fetchRelatedService(t){return g(this,null,function*(){let i=this.portalItem;if(!i||!K(i))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=i.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},t).then(o=>o.find(y=>y.type==="Feature Service")??null,()=>null));let a=yield this._relatedFeatureServicePromise;return Q(t),a?{itemId:a.id,url:a.url}:null})}fetchSublayerInfo(t,i){return g(this,null,function*(){let{source:a}=t;if(this?.portalItem&&this.type==="tile"&&a?.type==="map-layer"&&K(this.portalItem)&&t.originIdOf("url")<p.SERVICE){let u=yield this.fetchRelatedService(i);u&&(t.url=G(u.url,a.mapLayerId.toString()),t.layerItemId=u.itemId)}let{url:o}=t,y;if(a.type==="data-layer")y=(yield _(o,I({responseType:"json",query:x(I({f:"json"},this.customParameters),{token:this.apiKey})},i))).data;else if(o&&t.originIdOf("url")>p.SERVICE)try{let u=yield this._fetchAllLayersAndTablesFromService(o),c=H(o)?.sublayer??a.mapLayerId;y=u.get(c)}catch{}else{let u=t.id;a?.type==="map-layer"&&(u=a.mapLayerId);try{y=(yield this.fetchAllLayersAndTables(i)).get(u)}catch{}}return y})}fetchAllLayersAndTables(t){return g(this,null,function*(){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,t)})}_fetchAllLayersAndTablesFromService(t,i){return g(this,null,function*(){yield this.load(i),this._allLayersAndTablesMap||=new Map;let a=H(t),o=te(this._allLayersAndTablesMap,a?.url.path,()=>_(G(a?.url.path,"/layers"),{responseType:"json",query:x(I({f:"json"},this.customParameters),{token:this.apiKey})}).then(u=>{let c=new Map;for(let S of u.data.layers)c.set(S.id,S);return{result:c}},u=>({error:u}))),y=yield o;if(Q(i),"result"in y)return y.result;throw y.error})}};return s([n({readOnly:!0})],r.prototype,"capabilities",void 0),s([f("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),s([n({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),s([n({type:R})],r.prototype,"fullExtent",void 0),s([n(_e)],r.prototype,"id",void 0),s([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),s([n(Pe)],r.prototype,"popupEnabled",void 0),s([n({type:ye})],r.prototype,"spatialReference",void 0),s([n({readOnly:!0})],r.prototype,"version",void 0),s([f("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=s([T("esri.layers.mixins.ArcGISMapService")],r),r};var B;function z(e){return e!=null&&e.type==="esriSMS"}function X(e,r,t){let i=this.originIdOf(r)>=E(t.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&t.layer?.type==="map-image"&&(t.writeSublayerStructure||i)}}function Y(e,r,t){return{enabled:!!t&&t.layer?.type==="tile"&&(t.origin&&this.originIdOf(r)>=E(t.origin)||this._isOverridden(r))}}function b(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function U(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=E(t.origin))}}var Ce=0,L=new Set;L.add("layer"),L.add("parent"),L.add("loaded"),L.add("loadStatus"),L.add("loadError"),L.add("loadWarnings");var l=B=class extends ue(de(pe)){constructor(e){super(e),this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}load(e){return g(this,null,function*(){return this.addResolvingPromise((()=>g(this,null,function*(){let{layer:r,url:t}=this;if(!r&&!t)throw new h("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let i=r?yield r.fetchSublayerInfo(this,e):(yield _(t,I({responseType:"json",query:{f:"json"}},e))).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service"}))}))()),this})}readCapabilities(e,r){r=r.layerDefinition||r;let{operations:{supportsQuery:t,supportsQueryAttachments:i},query:{supportsFormatPBF:a},data:{supportsAttachment:o}}=Le(r,this.url);return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:t,supportsQueryAttachments:i},data:{supportsAttachment:o},query:{supportsFormatPBF:a}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){let{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readMaxScaleRange(e,r){return{minScale:(r=r.layerDefinition||r).minScale??0,maxScale:r.maxScale??0}}get fieldsIndex(){return new me(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields){for(let t of r.fields)if(t.type==="esriFieldTypeGlobalID")return t.name}}get id(){return this._get("id")??Ce++}set id(e){this._get("id")!==e&&(this.layer?.capabilities?.exportMap?.supportsDynamicLayers!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map(a=>a.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(r=>r.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields){for(let t of r.fields)if(t.type==="esriFieldTypeOID")return t.name}}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){let t=r.layerDefinition;return 1-.01*((t?.transparency!=null?t.transparency:t?.drawingInfo?.transparency)??0)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=ie(this.parent.id):r.parentLayerId=-1}get queryTask(){if(!this.layer)return null;let{spatialReference:e}=this.layer,r="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:t,fieldsIndex:i}=this,a=ee("featurelayer-pbf")&&t?.query.supportsFormatPBF,o=t?.operations?.supportsQueryAttachments??!1;return new Fe({url:this.url,pbfSupported:a,fieldsIndex:i,gdbVersion:r,sourceSpatialReference:e,queryAttachmentsSupported:o})}set renderer(e){if(e){for(let r of e.getSymbols())if(be(r)){w.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new k({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return ae(P.ofType(B),e)}writeSublayers(e,r,t){this.sublayers?.length&&(r[t]=this.sublayers.map(i=>i.id).toArray().reverse())}readTitle(e,r){return r.layerDefinition?.name??r.name}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();let i=r.fields.find(a=>a.name.toLowerCase()===t);i&&(t=i.name)}return t}get url(){let e=this.layer?.parsedUrl??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,r?.type==="map-layer")return`${e.path}/${r.mapLayerId}`;let t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${se(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){let{store:e}=O(this),r=new B;return O(r).store=e.clone(L),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return De(this,e)}createQuery(){return new he({returnGeometry:!0,where:this.definitionExpression||"1=1"})}createFeatureLayer(){return g(this,null,function*(){if(this.hasOwnProperty("sublayers"))return null;let e=(yield import("./chunk-W3EA2IPP.js")).default,{layer:r,url:t}=this,i;if(t&&this.originIdOf("url")>p.SERVICE)i=new e({url:t});else{if(!r?.parsedUrl)throw new h("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{let a=r.parsedUrl;i=new e({url:a.path}),a&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return r?.refreshInterval!=null&&(i.refreshInterval=r.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=F(this.floorInfo)),this.originIdOf("labelingInfo")>p.SERVICE&&(i.labelingInfo=F(this.labelingInfo)),this.originIdOf("labelsVisible")>p.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>p.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>p.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>p.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>p.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>p.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>p.DEFAULTS&&(i.popupTemplate=F(this.popupTemplate)),this.originIdOf("renderer")>p.SERVICE&&(i.renderer=F(this.renderer)),this.source?.type==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>p.DEFAULTS&&(i.title=this.title),r?.type==="map-image"&&r.originIdOf("customParameters")>p.DEFAULTS&&(i.customParameters=r.customParameters),r?.type==="tile"&&r.originIdOf("customParameters")>p.DEFAULTS&&(i.customParameters=r.customParameters),i})}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){let{typeIdField:r,types:t}=this;if(!r||!e)return null;let i=e.attributes?e.attributes[r]:void 0;if(i==null)return null;let a=null;return t?.some(o=>{let{id:y}=o;return y!=null&&(y.toString()===i.toString()&&(a=o),!!a)}),a}getFieldDomain(e,r){let t=r?.feature,i=this.getFeatureType(t);if(i){let a=i.domains&&i.domains[e];if(a&&a.type!=="inherited")return a}return this._getLayerDomain(e)}queryAttachments(e,r){return g(this,null,function*(){yield this.load(),e=we.from(e);let t=this.capabilities;if(!t?.data?.supportsAttachment)throw new h("queryAttachments:not-supported","this layer doesn't support attachments");let{attachmentTypes:i,objectIds:a,globalIds:o,num:y,size:u,start:c,where:S}=e;if(!t?.operations?.supportsQueryAttachments&&(i?.length>0||o?.length>0||u?.length>0||y||c||S))throw new h("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(a?.length||o?.length||S))throw new h("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,r)})}queryFeatures(){return g(this,arguments,function*(e=this.createQuery(),r){if(yield this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatures:not-supported","this layer has no url.");let t=yield this.queryTask.execute(e,x(I({},r),{query:x(I({},this.layer?.customParameters),{token:this.layer?.apiKey})}));if(t?.features)for(let i of t.features)i.sourceLayer=this;return t})}toExportImageJSON(e){let r={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},t=ce(e,this.definitionExpression);t!=null&&(r.definitionExpression=t);let i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((o,y)=>(o[y]=this.originIdOf(y),o),{});if(Object.keys(i).some(o=>i[o]>p.SERVICE)){let o=r.drawingInfo={};if(i.renderer>p.SERVICE&&(o.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>p.SERVICE&&(o.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>p.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(u=>!u.labelPlacement)&&w.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let y=this.labelingInfo;this.geometryType!=null&&(y=Te(this.labelingInfo,q.toJSON(this.geometryType))),o.showLabels=!0,o.labelingInfo=y.filter(u=>u.labelPlacement).map(u=>u.toJSON({origin:"service",layer:this.layer}))}else o.showLabels=!1;i.opacity>p.SERVICE&&(o.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(o.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,r=>{r.color||r.style!=="esriSMSX"&&r.style!=="esriSMSCross"||(r.outline?.color?r.color=r.outline.color:r.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,r){if(e){let t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(let i of t)z(i.symbol)&&r(i.symbol);"symbol"in e&&z(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&z(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){let t=this.layer,i=this._get(e),a,o;switch(e){case"definitionExpression":case"floorInfo":a="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":a="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":a="supportsDynamicLayers",o="supportsModification"}let y=O(this).getDefaultOrigin();if(y!=="service"){if(a&&this.layer?.capabilities?.exportMap?.[a]===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${a}'`);if(o&&this.capabilities?.exportMap[o]===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${o}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,r),y!=="service"&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach(t=>{t.parent=null,t.layer=null}),this.removeAllHandles()),e&&(e.forEach(t=>{t.parent=this,t.layer=this.layer}),this.addHandles([e.on("after-add",({item:t})=>{t.parent=this,t.layer=this.layer}),e.on("after-remove",({item:t})=>{t.parent=null,t.layer=null}),e.on("before-changes",t=>{let i=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;i==null||i||(w.getLogger(this).error(new h("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),t.preventDefault())})]))}_logLockedError(e,r){let{layer:t,declaredClass:i}=this;w.getLogger(i).error(new h("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t?.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){let r=this.fieldsIndex.get(e);return r?r.domain:null}};l.test={isMapImageLayerOverridePolicy:e=>e===b||e===X,isTileImageLayerOverridePolicy:e=>e===Y},s([n({readOnly:!0})],l.prototype,"capabilities",void 0),s([f("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],l.prototype,"readCapabilities",null),s([n()],l.prototype,"defaultPopupTemplate",null),s([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:X}}})],l.prototype,"definitionExpression",null),s([n({readOnly:!0})],l.prototype,"effectiveScaleRange",null),s([f("service","maxScaleRange",["minScale","maxScale"])],l.prototype,"readMaxScaleRange",null),s([n({type:[fe],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],l.prototype,"fields",void 0),s([n({readOnly:!0})],l.prototype,"fieldsIndex",null),s([n({type:Ee,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:X},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"floorInfo",null),s([n({type:R,json:{read:{source:"layerDefinition.extent"}}})],l.prototype,"fullExtent",void 0),s([n({type:q.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:q.read}}}}})],l.prototype,"geometryType",void 0),s([n({type:String})],l.prototype,"globalIdField",void 0),s([f("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],l.prototype,"readGlobalIdFieldFromService",null),s([n({type:N,json:{write:{ignoreOrigin:!0}}})],l.prototype,"id",null),s([n({value:null,type:[xe],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:b}}})],l.prototype,"labelingInfo",null),s([D("labelingInfo")],l.prototype,"writeLabelingInfo",null),s([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:b}}})],l.prototype,"labelsVisible",null),s([n({value:null})],l.prototype,"layer",null),s([n({type:String,json:{write:{overridePolicy:Y}}})],l.prototype,"layerItemId",void 0),s([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:U}}})],l.prototype,"legendEnabled",void 0),s([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],l.prototype,"listMode",null),s([n({type:Number,value:0,json:{write:{overridePolicy:b}}})],l.prototype,"minScale",null),s([f("minScale",["minScale","layerDefinition.minScale"])],l.prototype,"readMinScale",null),s([n({type:Number,value:0,json:{write:{overridePolicy:b}}})],l.prototype,"maxScale",null),s([f("maxScale",["maxScale","layerDefinition.maxScale"])],l.prototype,"readMaxScale",null),s([n({type:String})],l.prototype,"objectIdField",void 0),s([f("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],l.prototype,"readObjectIdFieldFromService",null),s([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:b}}})],l.prototype,"opacity",null),s([f("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],l.prototype,"readOpacity",null),s([D("opacity")],l.prototype,"writeOpacity",null),s([n({json:{type:N,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:b}}})],l.prototype,"parent",void 0),s([D("parent")],l.prototype,"writeParent",null),s([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:U,writer(e,r,t){r[t]=!e}}}})],l.prototype,"popupEnabled",void 0),s([n({type:Se,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:U}}})],l.prototype,"popupTemplate",void 0),s([n({readOnly:!0})],l.prototype,"queryTask",null),s([n({types:Ie,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:b},origins:{"web-scene":{types:ve,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:b}}}}})],l.prototype,"renderer",null),s([n({types:{key:"type",base:null,typeMap:{"data-layer":W,"map-layer":k}},cast(e){if(e){if("mapLayerId"in e)return $(k,e);if("dataSource"in e)return $(W,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:b}}})],l.prototype,"source",null),s([n()],l.prototype,"sourceJSON",void 0),s([n({value:null,json:{type:[N],write:{target:"subLayerIds",allowNull:!0,overridePolicy:b}}})],l.prototype,"sublayers",null),s([ne("sublayers")],l.prototype,"castSublayers",null),s([D("sublayers")],l.prototype,"writeSublayers",null),s([n({type:String,json:{name:"name",write:{overridePolicy:U}}})],l.prototype,"title",void 0),s([f("service","title",["name","layerDefinition.name"])],l.prototype,"readTitle",null),s([n({type:String})],l.prototype,"typeIdField",void 0),s([n({json:{read:!1},readOnly:!0,value:"sublayer"})],l.prototype,"type",void 0),s([f("typeIdField",["layerDefinition.typeIdField"])],l.prototype,"readTypeIdField",null),s([n({type:[Oe],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],l.prototype,"types",void 0),s([n({type:String,json:{name:"layerUrl",write:{overridePolicy:Y}}})],l.prototype,"url",null),s([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:b}}})],l.prototype,"visible",null),s([D("visible")],l.prototype,"writeVisible",null),l=B=s([T("esri.layers.support.Sublayer")],l);var J=l;var Ne=w.getLogger("esri.layers.TileLayer");function Re(e,r){let t=[],i={};return e&&e.forEach(a=>{let o=new J;if(o.read(a,r),i[o.id]=o,a.parentLayerId!=null&&a.parentLayerId!==-1){let y=i[a.parentLayerId];y.sublayers||(y.sublayers=[]),y.sublayers.unshift(o)}else t.unshift(o)}),t}var Z=P.ofType(J);function Ve(e,r){e&&e.forEach(t=>{r(t),t.sublayers&&t.sublayers.length&&Ve(t.sublayers,r)})}var St=e=>{let r=class extends e{constructor(...t){super(...t),this.allSublayers=new Ae({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.sublayers}),this.sublayersSourceJSON={[p.SERVICE]:{},[p.PORTAL_ITEM]:{},[p.WEB_SCENE]:{},[p.WEB_MAP]:{}},this.addHandles(oe(()=>this.sublayers,(i,a)=>this._handleSublayersChange(i,a),le))}destroy(){this.allSublayers.destroy()}readSublayers(t,i){if(!i||!t)return;let{sublayersSourceJSON:a}=this,o=E(i.origin);if(o<p.SERVICE||(a[o]={context:i,visibleLayers:t.visibleLayers||a[o].visibleLayers,layers:t.layers||a[o].layers},o>p.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);let{sublayers:y,origin:u}=this.createSublayersForOrigin("web-document"),c=O(this);c.setDefaultOrigin(u),this._set("sublayers",new Z(y)),c.setDefaultOrigin("user")}findSublayerById(t){return this.allSublayers.find(i=>i.id===t)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(t){let i=E(t==="web-document"?"web-map":t),a=p.SERVICE,o=this.sublayersSourceJSON[p.SERVICE].layers,y=this.sublayersSourceJSON[p.SERVICE].context,u=null,c=[p.PORTAL_ITEM,p.WEB_SCENE,p.WEB_MAP].filter(d=>d<=i);for(let d of c){let m=this.sublayersSourceJSON[d];Me(m.layers)&&(a=d,o=m.layers,y=m.context,m.visibleLayers&&(u={visibleLayers:m.visibleLayers,context:m.context}))}let S=[p.PORTAL_ITEM,p.WEB_SCENE,p.WEB_MAP].filter(d=>d>a&&d<=i),v=null;for(let d of S){let{layers:m,visibleLayers:j,context:C}=this.sublayersSourceJSON[d];m&&(v={layers:m,context:C}),j&&(u={visibleLayers:j,context:C})}let A=Re(o,y),M=new Map,V=new Set;if(v)for(let d of v.layers)M.set(d.id,d);if(u?.visibleLayers)for(let d of u.visibleLayers)V.add(d);return Ve(A,d=>{v&&d.read(M.get(d.id),v.context),u&&d.read({defaultVisibility:V.has(d.id)},u.context)}),{origin:re(a),sublayers:new Z({items:A})}}read(t,i){super.read(t,i),this.readSublayers(t,i)}_handleSublayersChange(t,i){i&&(i.forEach(a=>{a.parent=null,a.layer=null}),this.removeHandles("sublayers-owner")),t&&(t.forEach(a=>{a.parent=this,a.layer=this}),this.addHandles([t.on("after-add",({item:a})=>{a.parent=this,a.layer=this}),t.on("after-remove",({item:a})=>{a.parent=null,a.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(t.on("before-changes",a=>{Ne.error(new h("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),a.preventDefault()}),"sublayers-owner"))}};return s([n({readOnly:!0})],r.prototype,"allSublayers",void 0),s([n({readOnly:!0,type:P.ofType(J)})],r.prototype,"serviceSublayers",void 0),s([n({value:null,type:Z,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),s([n({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=s([T("esri.layers.mixins.SublayersOwner")],r),r};export{ir as a,J as b,St as c};
