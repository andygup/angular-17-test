var q=Number.POSITIVE_INFINITY,I=Math.PI,z=2*I,b=128/I,E=256/360,V=I/180,D=1/Math.LN2;function B(l,t){return(l%=t)>=0?l:l+t}function k(l){return B(l*b,256)}function H(l){return Math.log(l)*D}function N(l,t,s){return l*(1-s)+t*s}var T,c;(function(l){l[l.Unknown=0]="Unknown",l[l.Point=1]="Point",l[l.LineString=2]="LineString",l[l.Polygon=3]="Polygon"})(T||(T={}));var g=class l{constructor(t,s){this.x=t,this.y=s}clone(){return new l(this.x,this.y)}equals(t,s){return t===this.x&&s===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,s){this.x=t,this.y=s}normalize(){let t=this.x,s=this.y,i=Math.sqrt(t*t+s*s);this.x/=i,this.y/=i}rightPerpendicular(){let t=this.x;this.x=this.y,this.y=-t}move(t,s){this.x+=t,this.y+=s}assign(t){this.x=t.x,this.y=t.y}assignAdd(t,s){this.x=t.x+s.x,this.y=t.y+s.y}assignSub(t,s){this.x=t.x-s.x,this.y=t.y-s.y}rotate(t,s){let i=this.x,h=this.y;this.x=i*t-h*s,this.y=i*s+h*t}scale(t){this.x*=t,this.y*=t}length(){let t=this.x,s=this.y;return Math.sqrt(t*t+s*s)}static distance(t,s){let i=s.x-t.x,h=s.y-t.y;return Math.sqrt(i*i+h*h)}static add(t,s){return new l(t.x+s.x,t.y+s.y)}static sub(t,s){return new l(t.x-s.x,t.y-s.y)}},w=class{constructor(t,s,i){this.ratio=t,this.x=s,this.y=i}},L=class{constructor(t,s,i,h=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=e,this._tileSize=512*h,this._dz=t,this._yPos=s,this._xPos=i}setPixelMargin(t){t!==this._pixelMargin&&(this._pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this._finalRatio=this._tileSize/t*(1<<this._dz);let s=this._pixelRatio*this._pixelMargin;s/=this._finalRatio;let i=t>>this._dz;s>i&&(s=i),this._margin=s,this._xmin=i*this._xPos-s,this._ymin=i*this._yPos-s,this._xmax=this._xmin+i+2*s,this._ymax=this._ymin+i+2*s}reset(t){this._type=t,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(t,s){this._pushLine(),this._prevIsIn=this._isIn(t,s),this._moveTo(t,s,this._prevIsIn),this._prevPt=new g(t,s),this._firstPt=new g(t,s),this._dist=0}lineTo(t,s){let i=this._isIn(t,s),h=new g(t,s),e=g.distance(this._prevPt,h),n,o,_,y,d,f,r,p;if(i)this._prevIsIn?this._lineTo(t,s,!0):(n=this._prevPt,o=h,_=this._intersect(o,n),this._start=this._dist+e*(1-this._r),this._lineTo(_.x,_.y,!0),this._lineTo(o.x,o.y,!0));else if(this._prevIsIn)o=this._prevPt,n=h,_=this._intersect(o,n),this._lineTo(_.x,_.y,!0),this._lineTo(n.x,n.y,!1);else{let x=this._prevPt,a=h;if(x.x<=this._xmin&&a.x<=this._xmin||x.x>=this._xmax&&a.x>=this._xmax||x.y<=this._ymin&&a.y<=this._ymin||x.y>=this._ymax&&a.y>=this._ymax)this._lineTo(a.x,a.y,!1);else{let m=[];if((x.x<this._xmin&&a.x>this._xmin||x.x>this._xmin&&a.x<this._xmin)&&(y=(this._xmin-x.x)/(a.x-x.x),p=x.y+y*(a.y-x.y),p<=this._ymin?f=!1:p>=this._ymax?f=!0:m.push(new w(y,this._xmin,p))),(x.x<this._xmax&&a.x>this._xmax||x.x>this._xmax&&a.x<this._xmax)&&(y=(this._xmax-x.x)/(a.x-x.x),p=x.y+y*(a.y-x.y),p<=this._ymin?f=!1:p>=this._ymax?f=!0:m.push(new w(y,this._xmax,p))),(x.y<this._ymin&&a.y>this._ymin||x.y>this._ymin&&a.y<this._ymin)&&(y=(this._ymin-x.y)/(a.y-x.y),r=x.x+y*(a.x-x.x),r<=this._xmin?d=!1:r>=this._xmax?d=!0:m.push(new w(y,r,this._ymin))),(x.y<this._ymax&&a.y>this._ymax||x.y>this._ymax&&a.y<this._ymax)&&(y=(this._ymax-x.y)/(a.y-x.y),r=x.x+y*(a.x-x.x),r<=this._xmin?d=!1:r>=this._xmax?d=!0:m.push(new w(y,r,this._ymax))),m.length===0)d?f?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):f?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(m.length>1&&m[0].ratio>m[1].ratio)this._start=this._dist+e*m[1].ratio,this._lineTo(m[1].x,m[1].y,!0),this._lineTo(m[0].x,m[0].y,!0);else{this._start=this._dist+e*m[0].ratio;for(let u=0;u<m.length;u++)this._lineTo(m[u].x,m[u].y,!0)}this._lineTo(a.x,a.y,!1)}}this._dist+=e,this._prevIsIn=i,this._prevPt=h}close(){if(this._line.length>2){let t=this._firstPt,s=this._prevPt;t.x===s.x&&t.y===s.y||this.lineTo(t.x,t.y);let i=this._line,h=i.length;for(;h>=4&&(i[0].x===i[1].x&&i[0].x===i[h-2].x||i[0].y===i[1].y&&i[0].y===i[h-2].y);)i.pop(),i[0].x=i[h-2].x,i[0].y=i[h-2].y,--h}}result(t=!0){return this._pushLine(),this._lines.length===0?null:(this._type===T.Polygon&&t&&R.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==T.LineString)throw new Error("Only valid for lines");this._pushLine();let t=this._lines,s=t.length;if(s===0)return null;let i=[];for(let h=0;h<s;h++)i.push({line:t[h],start:this._starts[h]||0});return i}_isIn(t,s){return t>=this._xmin&&t<=this._xmax&&s>=this._ymin&&s<=this._ymax}_intersect(t,s){let i,h,e;if(s.x>=this._xmin&&s.x<=this._xmax)h=s.y<=this._ymin?this._ymin:this._ymax,e=(h-t.y)/(s.y-t.y),i=t.x+e*(s.x-t.x);else if(s.y>=this._ymin&&s.y<=this._ymax)i=s.x<=this._xmin?this._xmin:this._xmax,e=(i-t.x)/(s.x-t.x),h=t.y+e*(s.y-t.y);else{h=s.y<=this._ymin?this._ymin:this._ymax,i=s.x<=this._xmin?this._xmin:this._xmax;let n=(i-t.x)/(s.x-t.x),o=(h-t.y)/(s.y-t.y);n<o?(e=n,h=t.y+n*(s.y-t.y)):(e=o,i=t.x+o*(s.x-t.x))}return this._r=e,new g(i,h)}_pushLine(){this._line&&(this._type===T.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===T.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===T.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(t,s,i){this._type!==T.Polygon?i&&(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new g(t,s))):(i||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new g(t,s)),this._isH=!1,this._isV=!1)}_lineTo(t,s,i){let h,e;if(this._type!==T.Polygon)if(i){if(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(h=this._line[this._line.length-1],h.equals(t,s)))return;this._line.push(new g(t,s))}else this._line&&this._line.length>0&&this._pushLine();else if(i||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){h=this._line[this._line.length-1];let n=h.x===t,o=h.y===s;if(n&&o)return;this._isH&&n||this._isV&&o?(h.x=t,h.y=s,e=this._line[this._line.length-2],e.x===t&&e.y===s?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(e=this._line[this._line.length-2],this._isH=e.x===t,this._isV=e.y===s)):(this._isH=e.x===t,this._isV=e.y===s)):(this._line.push(new g(t,s)),this._isH=n,this._isV=o)}else this._line.push(new g(t,s))}},S=class{setExtent(t){this._ratio=t===4096?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,s){this._line&&this._lines.push(this._line),this._line=[];let i=this._ratio;this._line.push(new g(t*i,s*i))}lineTo(t,s){let i=this._ratio;this._line.push(new g(t*i,s*i))}close(){let t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),this._lines.length===0?null:this._lines}};(function(l){l[l.sideLeft=0]="sideLeft",l[l.sideRight=1]="sideRight",l[l.sideTop=2]="sideTop",l[l.sideBottom=3]="sideBottom"})(c||(c={}));var R=class l{static simplify(t,s,i){if(!i)return;let h=-s,e=t+s,n=-s,o=t+s,_=[],y=[],d=i.length;for(let r=0;r<d;++r){let p=i[r];if(!p||p.length<2)continue;let x,a=p[0],m=p.length;for(let u=1;u<m;++u)x=p[u],a.x===x.x&&(a.x<=h&&(a.y>x.y?(_.push(r),_.push(u),_.push(c.sideLeft),_.push(-1)):(y.push(r),y.push(u),y.push(c.sideLeft),y.push(-1))),a.x>=e&&(a.y<x.y?(_.push(r),_.push(u),_.push(c.sideRight),_.push(-1)):(y.push(r),y.push(u),y.push(c.sideRight),y.push(-1)))),a.y===x.y&&(a.y<=n&&(a.x<x.x?(_.push(r),_.push(u),_.push(c.sideTop),_.push(-1)):(y.push(r),y.push(u),y.push(c.sideTop),y.push(-1))),a.y>=o&&(a.x>x.x?(_.push(r),_.push(u),_.push(c.sideBottom),_.push(-1)):(y.push(r),y.push(u),y.push(c.sideBottom),y.push(-1)))),a=x}if(_.length===0||y.length===0)return;l.fillParent(i,y,_),l.fillParent(i,_,y);let f=[];l.calcDeltas(f,y,_),l.calcDeltas(f,_,y),l.addDeltas(f,i)}static fillParent(t,s,i){let h=i.length,e=s.length;for(let n=0;n<e;n+=4){let o=s[n],_=s[n+1],y=s[n+2],d=t[o][_-1],f=t[o][_],r=8092,p=-1;for(let x=0;x<h;x+=4){if(i[x+2]!==y)continue;let a=i[x],m=i[x+1],u=t[a][m-1],P=t[a][m];switch(y){case c.sideLeft:case c.sideRight:if(v(d.y,u.y,P.y)&&v(f.y,u.y,P.y)){let M=Math.abs(P.y-u.y);M<r&&(r=M,p=x)}break;case c.sideTop:case c.sideBottom:if(v(d.x,u.x,P.x)&&v(f.x,u.x,P.x)){let M=Math.abs(P.x-u.x);M<r&&(r=M,p=x)}}}s[n+3]=p}}static calcDeltas(t,s,i){let h=s.length;for(let e=0;e<h;e+=4){let n=[],o=l.calcDelta(e,s,i,n);t.push(s[e]),t.push(s[e+1]),t.push(s[e+2]),t.push(o)}}static calcDelta(t,s,i,h){let e=s[t+3];if(e===-1)return 0;let n=h.length;return n>1&&h[n-2]===e?0:(h.push(e),l.calcDelta(e,i,s,h)+1)}static addDeltas(t,s){let i=t.length,h=0;for(let e=0;e<i;e+=4){let n=t[e+3];n>h&&(h=n)}for(let e=0;e<i;e+=4){let n=s[t[e]],o=t[e+1],_=h-t[e+3];switch(t[e+2]){case c.sideLeft:n[o-1].x-=_,n[o].x-=_,o===1&&(n[n.length-1].x-=_),o===n.length-1&&(n[0].x-=_);break;case c.sideRight:n[o-1].x+=_,n[o].x+=_,o===1&&(n[n.length-1].x+=_),o===n.length-1&&(n[0].x+=_);break;case c.sideTop:n[o-1].y-=_,n[o].y-=_,o===1&&(n[n.length-1].y-=_),o===n.length-1&&(n[0].y-=_);break;case c.sideBottom:n[o-1].y+=_,n[o].y+=_,o===1&&(n[n.length-1].y+=_),o===n.length-1&&(n[0].y+=_)}}}},v=(l,t,s)=>l>=t&&l<=s||l>=s&&l<=t;export{T as a,g as b,L as c,S as d,q as e,I as f,z as g,V as h,B as i,k as j,H as k,N as l};
