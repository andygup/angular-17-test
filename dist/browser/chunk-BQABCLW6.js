import{a as F}from"./chunk-HTB4QCFJ.js";import{b as x}from"./chunk-7K4WIBFN.js";import{a as T}from"./chunk-HPJ6EQFO.js";import{a as v}from"./chunk-EDSVJRYE.js";import{a as N}from"./chunk-QAVDKCSH.js";import{a as q,d as V}from"./chunk-6MGDEI2H.js";import{$ as w}from"./chunk-XF4NUYV7.js";import{p as R}from"./chunk-PT7S6WNL.js";import{m as I,p as M,r as L}from"./chunk-465DRXTW.js";import{a as C,b as P,g as b}from"./chunk-ESDYQQXO.js";var j="esri.renderers.support.DictionaryLoader",D={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}},k=class{constructor(t,i,o){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new N(100),this._dictionaryVersion=null,this._fieldIndex=null,this._dictionaryPromise=null,this.url=t,this.config=i,this.fieldMap=o}getSymbolFields(){return this._symbolFields}getSymbolAsync(t,i){return b(this,null,function*(){let o;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(i));try{o=yield this._dictionaryPromise}catch(s){if(R(s))return this._dictionaryPromise=null,null}let e=this._dictionaryVersion&&this._dictionaryVersion.since(4,0),l={};if(this.fieldMap)for(let s of this._symbolFields){let n=this._getFieldName(this.fieldMap[s]);if(n){let m=t.attributes[n];l[s]=e?m:m!=null?""+t.attributes[n]:""}else l[s]=""}let a=null;try{a=o?.(l,i)}catch{return null}if(!a||typeof a!="string")return null;let f=I(a).toString(),c=this._symbolCache.get(f);if(c)return c.catch(()=>{this._symbolCache.pop(f)}),c;let _=a.split(";"),h=[],u=[];for(let s of _)if(s)if(s.includes("po:")){let n=s.substr(3).split("|");if(n.length===3){let m=n[0],g=n[1],y=n[2];if(g==="DashTemplate")y=y.split(" ").map(p=>Number(p));else if(g==="Color"){let p=new T(y).toRgba();y=[p[0],p[1],p[2],255*p[3]]}else y=Number(y);u.push({primitiveName:m,propertyName:g,value:y})}}else if(s.includes("|")){for(let n of s.split("|"))if(this._itemNames.has(n)){h.push(n);break}}else this._itemNames.has(s)&&h.push(s);let S=t.geometry==null||!t.geometry.hasZ&&t.geometry.type==="point",r=this._cimPartsToCIMSymbol(h,u,S,i);return this._symbolCache.put(f,r,1),r})}fetchResources(t){return b(this,null,function*(){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void M.getLogger(j).error("no valid URL!");let i=w(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:t!=null?t.signal:null}),[{data:o}]=yield Promise.all([i,q()]);if(!o)throw this._dictionaryPromise=null,new L("esri.renderers.DictionaryRenderer","Bad dictionary data!");let{authoringInfo:e,dictionary_version:l,expression:a,itemsNames:f}=o,c=a,_=!1;l&&(this._dictionaryVersion=F.parse(l),_=this._dictionaryVersion.since(4,0)),this._refSymbolUrlTemplate=this.url+"/"+o.cimRefTemplateUrl,this._itemNames=new Set(f),this._symbolFields=e.symbol;let h={};if(this.config){let r=this.config;for(let s in r)h[s]=r[s]}if(e.configuration)for(let r of e.configuration)h.hasOwnProperty(r.name)||(h[r.name]=r.value);let u=[];if(t?.fields&&this.fieldMap)for(let r of this._symbolFields){let s=this.fieldMap[r],n=t.fields.filter(m=>m.name.toLowerCase()===s?.toLowerCase());n.length>0&&u.push(P(C({},n[0]),{type:_?n[0].type:"esriFieldTypeString"}))}u.length>0&&(this._fieldIndex=new v(u));let S=V(c,t!=null?t.spatialReference:null,u,h).then(r=>{let s={scale:0};return(n,m)=>{if(r==null)return null;let g=r.repurposeFeature({geometry:null,attributes:n});return s.scale=m!=null?m.scale??void 0:void 0,r.evaluate({$feature:g,$view:s},r.services)}}).catch(r=>(M.getLogger(j).error("Creating dictinoary expression failed:",r),null));return this._dictionaryPromise=S,S})}_cimPartsToCIMSymbol(t,i,o,e){return b(this,null,function*(){let l=new Array(t.length);for(let c=0;c<t.length;c++)l[c]=this._getSymbolPart(t[c],e);let a=yield Promise.all(l),f=this.fieldMap;if(f)for(let c of a)A(c,f);return new x({data:this._combineSymbolParts(a,i,o)})})}_getSymbolPart(t,i){return b(this,null,function*(){if(this._ongoingRequests.has(t))return this._ongoingRequests.get(t).then(l=>l.data);let o=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,t),e=w(o,C({responseType:"json",query:{f:"json"}},i));this._ongoingRequests.set(t,e);try{return(yield e).data}catch(l){throw this._ongoingRequests.delete(t),l}})}_combineSymbolParts(t,i,o){if(!t||t.length===0)return null;let e=C({},t[0]);if(t.length>1){e.symbolLayers=[];for(let l of t){let a=l;e.symbolLayers.unshift(...a.symbolLayers)}}return o&&(e.callout=D),{type:"CIMSymbolReference",symbol:e,primitiveOverrides:i}}_getFieldName(t){if(this._fieldIndex!==null){let i=this._fieldIndex.get(t);return i?i.name:t}return t}};function A(d,t){if(!d)return;let i=d.symbolLayers;if(!i)return;let o=i.length;for(;o--;){let e=i[o];e&&e.enable!==!1&&e.type==="CIMVectorMarker"&&U(e,t)}}function U(d,t){let i=d.markerGraphics;if(i)for(let o of i){if(!o)continue;let e=o.symbol;if(e)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":A(e,t);break;case"CIMTextSymbol":e.fieldMap=t}}}export{k as a};
