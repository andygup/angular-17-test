import{a as P,b as R}from"./chunk-WV4GLBNV.js";import{b as w,c as A}from"./chunk-5WNLDCIP.js";import{f as g,t as z,v as M}from"./chunk-N57AFEUK.js";import{h as I}from"./chunk-VGW7YJZ7.js";import{d as b}from"./chunk-EJ3VIBAJ.js";var D=512,k=class{constructor(e){this._resourceManager=e,this._lazyRasterizationCanvas=null}dispose(){this._lazyRasterizationCanvas=null}get _rasterizationCanvas(){return this._lazyRasterizationCanvas==null&&(this._lazyRasterizationCanvas=document.createElement("canvas"),this._lazyRasterizationCanvas.getContext("2d",{willReadFrequently:!0})),this._lazyRasterizationCanvas}rasterizeJSONResource(e,n,l){if(e.type==="simple-fill"||e.type==="esriSFS"){let[a,i,c]=P(this._rasterizationCanvas,e.style,n);return{size:[i,c],image:new Uint32Array(a.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:b(Math.ceil(n))}}if(e.type==="simple-line"||e.type==="esriSLS"||e.type==="line"&&e.dashTemplate){let a,i;if(e.type==="simple-line"||e.type==="esriSLS")switch(a=M(e.style,e.cap),e.cap){case"butt":i="Butt";break;case"square":i="Square";break;default:i="Round"}else a=e.dashTemplate,i=e.cim.capStyle;let[c,d,C]=R(a,i);return{size:[d,C],image:new Uint32Array(c.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}let t,h=null,u=null,r=1;if(e.type==="simple-marker"||e.type==="esriSMS"||e.type==="line-marker"?(t=z.fromSimpleMarker(e),u=w(t)):e.cim&&e.cim.type==="CIMHatchFill"?(t=z.fromCIMHatchFill(e.cim,n),h=new g(t.frame.xmin,-t.frame.ymax,t.frame.xmax-t.frame.xmin,t.frame.ymax-t.frame.ymin),r=n):e.cim.markerPlacement&&e.cim.markerPlacement.type==="CIMMarkerPlacementInsidePolygon"?(t=z.fromCIMInsidePolygon(e.cim),h=new g(t.frame.xmin,-t.frame.ymax,t.frame.xmax-t.frame.xmin,t.frame.ymax-t.frame.ymin)):(t=e.cim,e.avoidSDFRasterization||(u=w(t))),u&&!l){let[a,i,c]=A(u);return a?{size:[i,c],image:new Uint32Array(a.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:r}:null}let[p,y,o,m,f]=z.rasterize(this._rasterizationCanvas,t,h,this._resourceManager,!l);return p?{size:[y,o],image:new Uint32Array(p.buffer),sdf:!1,simplePattern:!1,anchorX:m,anchorY:f}:null}rasterizeImageResource(e,n,l,t){this._rasterizationCanvas.width=e,this._rasterizationCanvas.height=n;let h=this._rasterizationCanvas.getContext("2d");l instanceof ImageData?h.putImageData(l,0,0):(l.setAttribute("width",`${e}px`),l.setAttribute("height",`${n}px`),h.drawImage(l,0,0,e,n));let u=h.getImageData(0,0,e,n),r=new Uint8Array(u.data);if(t){for(let a of t)if(a&&a.oldColor&&a.oldColor.length===4&&a.newColor&&a.newColor.length===4){let[i,c,d,C]=a.oldColor,[S,x,v,_]=a.newColor;if(i===S&&c===x&&d===v&&C===_)continue;for(let s=0;s<r.length;s+=4)i===r[s]&&c===r[s+1]&&d===r[s+2]&&C===r[s+3]&&(r[s]=S,r[s+1]=x,r[s+2]=v,r[s+3]=_)}}let p;for(let a=0;a<r.length;a+=4)p=r[a+3]/255,r[a]=r[a]*p,r[a+1]=r[a+1]*p,r[a+2]=r[a+2]*p;let y=r,o=e,m=n,f=D;if(o>=f||m>=f){let a=o/m;a>1?(o=f,m=Math.round(f/a)):(m=f,o=Math.round(f*a)),y=new Uint8Array(4*o*m);let i=new Uint8ClampedArray(y.buffer);I(r,e,n,i,o,m,!1)}return{size:[o,m],image:new Uint32Array(y.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}};export{k as a};
