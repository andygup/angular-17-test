import{a as S}from"./chunk-3HXNXWXE.js";import{a as n}from"./chunk-TTUUVT2M.js";import{c as _}from"./chunk-GIHBFCPM.js";import{c as K}from"./chunk-AUVYUYNK.js";import{e as k}from"./chunk-ZWFVPWKA.js";import"./chunk-AQ74ANSJ.js";import"./chunk-SREKDU6P.js";import"./chunk-EJ3VIBAJ.js";import"./chunk-4LHUJTP5.js";import"./chunk-NBRBW7H5.js";import"./chunk-FC3MPJI4.js";import"./chunk-5ETRXDS4.js";import"./chunk-QDNKD3H5.js";import"./chunk-WMYPRHRR.js";import{R as w}from"./chunk-IAMDMFZ7.js";import{a as T}from"./chunk-53MWZ23O.js";import"./chunk-PT7S6WNL.js";import"./chunk-XDTDVCGP.js";import"./chunk-JPDAKIWT.js";import"./chunk-465DRXTW.js";import"./chunk-AC62Z3FX.js";import{a as u,b as y,g as p}from"./chunk-ESDYQQXO.js";var a=class{constructor(t,i){this.offset=t,this.extent=i}};function I(s){let t=s.key,i=new Map,r=256,e=_,o=s.tileInfoView.tileInfo.isWrappable;return i.set(n(t,-1,-1,o).id,new a([-e,-e],[e-r,e-r,e,e])),i.set(n(t,0,-1,o).id,new a([0,-e],[0,e-r,e,e])),i.set(n(t,1,-1,o).id,new a([e,-e],[0,e-r,r,e])),i.set(n(t,-1,0,o).id,new a([-e,0],[e-r,0,e,e])),i.set(n(t,1,0,o).id,new a([e,0],[0,0,r,e])),i.set(n(t,-1,1,o).id,new a([-e,e],[e-r,0,e,r])),i.set(n(t,0,1,o).id,new a([0,e],[0,0,e,r])),i.set(n(t,1,1,o).id,new a([e,e],[0,0,r,r])),i}var h=class extends S{constructor(){super(...arguments),this.type="heatmap",this._tileKeyToFeatureSets=new Map}initialize(){this.addHandles([this.tileStore.on("update",this.onTileUpdate.bind(this))])}update(s,t){return p(this,null,function*(){let i=t.schema.processors[0];i.type==="heatmap"&&K(this._schema,i)&&(s.mesh=!0,this._schema=i)})}onTileUpdate(s){for(let t of s.removed)this._tileKeyToFeatureSets.delete(t.key.id)}onTileClear(s){let t={clear:!0};return this._tileKeyToFeatureSets.delete(s.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:s.id,data:t})}onTileMessage(s,t,i){return p(this,null,function*(){this._tileKeyToFeatureSets.has(s.key.id)||this._tileKeyToFeatureSets.set(s.key.id,new Map);let r=this._tileKeyToFeatureSets.get(s.key.id);if(r&&t.addOrUpdate!=null&&t.addOrUpdate.hasFeatures&&r.set(t.addOrUpdate.instance,t),t.end){let e=[],o=I(s);this._tileKeyToFeatureSets.forEach((c,l)=>{if(l===s.key.id)c.forEach(({addOrUpdate:d})=>{d&&e.push(d)});else if(o.has(l)){let d=o.get(l),[g,v]=d.offset;c.forEach(({addOrUpdate:f})=>{if(f){let E=f.transform(g,v,1,1);e.push(E)}})}});let m=k(e,this._schema.mesh,512,512),F={tileKey:s.key.id,intensityInfo:m},U=[m.matrix];return this.remoteClient.invoke("tileRenderer.onTileData",F,y(u({},i),{transferList:U}))}})}onTileError(s,t,i){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:s.id,error:t},i)}};h=T([w("esri.views.2d.layers.features.processors.HeatmapProcessor")],h);var V=h;export{V as default};
