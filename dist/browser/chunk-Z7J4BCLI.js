import{e as X,k as E,l as b,m as g,n as d,o as s,p as P,q as A,v as B,z as h}from"./chunk-TKTKGUCU.js";import{a as D}from"./chunk-MNLP6AEE.js";import{c as L}from"./chunk-EJ3VIBAJ.js";import{p as v,r as p}from"./chunk-465DRXTW.js";import{a as C}from"./chunk-AC62Z3FX.js";var Z=v.getLogger("esri.views.webgl.checkWebGLError");function J(e,t){switch(t){case e.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case e.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case e.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case e.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case e.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case e.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}var W=!!C("enable-feature:webgl-debug");function Q(){return W}function ce(){return W}function w(e){if(Q()){let t=e.getError();if(t){let r=J(e,t),i=new Error().stack;Z.error(new p("webgl-error","WebGL error occurred",{message:r,stack:i}))}}}var S;(function(e){e[e.Texture=0]="Texture",e[e.RenderBuffer=1]="RenderBuffer"})(S||(S={}));function _e(e){let t=e.gl;switch(t.getError()){case t.NO_ERROR:return null;case t.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case t.INVALID_VALUE:return"An unacceptable value has been specified for an argument";case t.INVALID_OPERATION:return"The specified command is not allowed for the current state";case t.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case t.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case t.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function he(e,t,r,i,c=0){let n=e.gl;e.bindBuffer(r);for(let a of i){let o=t.get(a.name);o===void 0&&console.error(`There is no location for vertex attribute '${a.name}' defined.`);let u=c*a.stride;if(a.count<=4)n.vertexAttribPointer(o,a.count,a.type,a.normalized,a.stride,a.offset+u),n.enableVertexAttribArray(o),a.divisor>0&&e.gl2?.vertexAttribDivisor(o,a.divisor);else if(a.count===9)for(let l=0;l<3;l++)n.vertexAttribPointer(o+l,3,a.type,a.normalized,a.stride,a.offset+12*l+u),n.enableVertexAttribArray(o+l),a.divisor>0&&e.gl2?.vertexAttribDivisor(o+l,a.divisor);else if(a.count===16)for(let l=0;l<4;l++)n.vertexAttribPointer(o+l,4,a.type,a.normalized,a.stride,a.offset+16*l+u),n.enableVertexAttribArray(o+l),a.divisor>0&&e.gl2?.vertexAttribDivisor(o+l,a.divisor);else console.error("Unsupported vertex attribute element count: "+a.count)}}function me(e,t,r,i){let c=e.gl;e.bindBuffer(r);for(let n of i){let a=t.get(n.name);if(n.count<=4)c.disableVertexAttribArray(a),n.divisor&&n.divisor>0&&e.gl2?.vertexAttribDivisor(a,0);else if(n.count===9)for(let o=0;o<3;o++)c.disableVertexAttribArray(a+o),n.divisor&&n.divisor>0&&e.gl2?.vertexAttribDivisor(a+o,0);else if(n.count===16)for(let o=0;o<4;o++)c.disableVertexAttribArray(a+o),n.divisor&&n.divisor>0&&e.gl2?.vertexAttribDivisor(a+o,0);else console.error("Unsupported vertex attribute element count: "+n.count)}e.unbindBuffer(X.ARRAY_BUFFER)}function H(e){switch(e){case d.ALPHA:case d.LUMINANCE:case d.RED:case d.RED_INTEGER:case s.R8:case s.R8I:case s.R8UI:case s.R8_SNORM:case A.STENCIL_INDEX8:return 1;case d.LUMINANCE_ALPHA:case d.RG:case d.RG_INTEGER:case s.RGBA4:case s.R16F:case s.R16I:case s.R16UI:case s.RG8:case s.RG8I:case s.RG8UI:case s.RG8_SNORM:case s.RGB565:case s.RGB5_A1:case A.DEPTH_COMPONENT16:return 2;case d.DEPTH_COMPONENT:case d.RGB:case d.RGB_INTEGER:case s.RGB8:case s.RGB8I:case s.RGB8UI:case s.RGB8_SNORM:case s.SRGB8:case A.DEPTH_COMPONENT24:return 3;case d.DEPTH_STENCIL:case d.DEPTH24_STENCIL8:case d.RGBA:case d.RGBA_INTEGER:case s.RGBA8:case s.R32F:case s.R11F_G11F_B10F:case s.RG16F:case s.R32I:case s.R32UI:case s.RG16I:case s.RG16UI:case s.RGBA8I:case s.RGBA8UI:case s.RGBA8_SNORM:case s.SRGB8_ALPHA8:case s.RGB9_E5:case s.RGB10_A2UI:case s.RGB10_A2:case A.DEPTH_STENCIL:case A.DEPTH_COMPONENT32F:case A.DEPTH24_STENCIL8:return 4;case A.DEPTH32F_STENCIL8:return 5;case s.RGB16F:case s.RGB16I:case s.RGB16UI:return 6;case s.RG32F:case s.RG32I:case s.RG32UI:case s.RGBA16F:case s.RGBA16I:case s.RGBA16UI:return 8;case s.RGB32F:case s.RGB32I:case s.RGB32UI:return 12;case s.RGBA32F:case s.RGBA32I:case s.RGBA32UI:return 16;case h.COMPRESSED_RGB_S3TC_DXT1_EXT:case h.COMPRESSED_RGBA_S3TC_DXT1_EXT:return .5;case h.COMPRESSED_RGBA_S3TC_DXT3_EXT:case h.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case h.COMPRESSED_R11_EAC:case h.COMPRESSED_SIGNED_R11_EAC:case h.COMPRESSED_RGB8_ETC2:case h.COMPRESSED_SRGB8_ETC2:case h.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case h.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return .5;case h.COMPRESSED_RG11_EAC:case h.COMPRESSED_SIGNED_RG11_EAC:case h.COMPRESSED_RGBA8_ETC2_EAC:case h.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}var N=class{constructor(t=0,r=t){this.width=t,this.height=r,this.target=g.TEXTURE_2D,this.pixelFormat=d.RGBA,this.dataType=P.UNSIGNED_BYTE,this.samplingMode=E.LINEAR,this.wrapMode=b.REPEAT,this.maxAnisotropy=1,this.flipped=!1,this.hasMipmap=!1,this.isOpaque=!1,this.unpackAlignment=4,this.preMultiplyAlpha=!1,this.depth=1,this.isImmutable=!1}};function V(e){return e.width<=0||e.height<=0?0:e.width*e.height*(e.hasMipmap?4/3:1)*(e.internalFormat==null?4:H(e.internalFormat))}var G=class e extends N{constructor(t,r){switch(super(),this.context=t,Object.assign(this,r),this.internalFormat){case s.R16F:case s.R16I:case s.R16UI:case s.R32F:case s.R32I:case s.R32UI:case s.R8_SNORM:case s.R8:case s.R8I:case s.R8UI:this.pixelFormat=d.RED}}static validate(t,r){return new e(t,r)}};var z=4,f=class{constructor(e,t=null,r=null){if(this.type=S.Texture,this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,"context"in e)this._descriptor=e,r=t;else{let i=G.validate(e,t);if(!i)throw new p("Texture descriptor invalid");this._descriptor=i}if(this._descriptor.context.type!==D.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),I(this._descriptor.target)))throw new p("3D and array textures are not supported in WebGL1");this._descriptor.target===g.TEXTURE_CUBE_MAP?this._setDataCubeMap(r):this.setData(r)}get glName(){return this._glName}get descriptor(){return this._descriptor}get gpuMemoryUsage(){return se.delete(this),V(this._descriptor)}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._glName&&this._descriptor.context.instanceCounter.decrement(B.Texture,this),this._descriptor.context.gl&&this._glName&&(this._descriptor.context.unbindTexture(this),this._descriptor.context.gl.deleteTexture(this._glName),this._glName=null)}release(){this.dispose()}resize(e,t){let r=this._descriptor;if(r.width!==e||r.height!==t){if(this._wasImmutablyAllocated)throw new p("Immutable textures can't be resized!");r.width=e,r.height=t,this._descriptor.target===g.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(e=null){for(let t=g.TEXTURE_CUBE_MAP_POSITIVE_X;t<=g.TEXTURE_CUBE_MAP_NEGATIVE_Z;t++)this._setData(e,t)}setData(e){this._setData(e)}_setData(e,t){if(!this._descriptor.context?.gl)return;let r=this._descriptor.context.gl;w(r),this._glName||(this._glName=r.createTexture(),this._glName&&this._descriptor.context.instanceCounter.increment(B.Texture,this)),e===void 0&&(e=null);let i=this._descriptor,c=t??i.target,n=I(c);e===null&&(i.width=i.width||z,i.height=i.height||z,n&&(i.depth=i.depth??1));let a=this._descriptor.context.bindTexture(this,f.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(f.TEXTURE_UNIT_FOR_UPDATES),O(this._descriptor.context,i),this._configurePixelStorage(),w(r);let o=this._deriveInternalFormat();if(y(e)){let u="width"in e?e.width:e.codedWidth,l="height"in e?e.height:e.codedHeight,_=1;e instanceof HTMLVideoElement&&(u=e.videoWidth,l=e.videoHeight),i.width&&i.height,n&&i.depth,i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(c,o,i.hasMipmap,u,l,_),this._texImage(c,0,o,u,l,_,e),w(r),i.hasMipmap&&this.generateMipmap(),i.width||(i.width=u),i.height||(i.height=l),n&&!i.depth&&(i.depth=_)}else{let{width:u,height:l,depth:_}=i;if(u==null||l==null)throw new p("Width and height must be specified!");if(n&&_==null)throw new p("Depth must be specified!");if(i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(c,o,i.hasMipmap,u,l,_),U(e)){let m=e.levels,x=Y(c,u,l,_),R=Math.min(x-1,m.length-1);this._descriptor.context.gl2!=null?r.texParameteri(i.target,this._descriptor.context.gl2.TEXTURE_MAX_LEVEL,R):i.hasMipmap=i.hasMipmap&&x===m.length;let T=o;if(!re(T))throw new p("Attempting to use compressed data with an uncompressed format!");this._forEachMipmapLevel((M,F,$,j)=>{let q=m[Math.min(M,m.length-1)];this._compressedTexImage(c,M,T,F,$,j,q)},R)}else this._texImage(c,0,o,u,l,_,e),w(r),i.hasMipmap&&this.generateMipmap()}k(r,this._descriptor),K(r,this._descriptor),ee(this._descriptor.context,this._descriptor),w(r),this._descriptor.context.bindTexture(a,f.TEXTURE_UNIT_FOR_UPDATES)}updateData(e,t,r,i,c,n,a=0){n||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");let o=this._descriptor.context.gl,u=this._descriptor.context.gl2,l=this._descriptor,_=this._deriveInternalFormat(),{pixelFormat:m,dataType:x,target:R,isImmutable:T}=l;if(T&&!this._wasImmutablyAllocated)throw new p("Cannot update immutable texture before allocation!");let M=this._descriptor.context.bindTexture(this,f.TEXTURE_UNIT_FOR_UPDATES,!0);if((t<0||r<0||i>l.width||c>l.height||t+i>l.width||r+c>l.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),a){if(!u)return void console.error("Webgl2 must be enabled to use dataRowOffset!");o.pixelStorei(u.UNPACK_SKIP_ROWS,a)}if(y(n)?u?u.texSubImage2D(R,e,t,r,i,c,m,x,n):o.texSubImage2D(R,e,t,r,m,x,n):U(n)?o.compressedTexSubImage2D(R,e,t,r,i,c,_,n.levels[e]):o.texSubImage2D(R,e,t,r,i,c,m,x,n),a){if(!u)return void console.error("Webgl2 must be enabled to use dataRowOffset!");o.pixelStorei(u.UNPACK_SKIP_ROWS,0)}this._descriptor.context.bindTexture(M,f.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(e,t,r,i,c,n,a,o){o||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");let u=this._descriptor.context.gl2;if(u==null)throw new p("3D textures are not supported in WebGL1");let l=this._descriptor,_=this._deriveInternalFormat(),{pixelFormat:m,dataType:x,isImmutable:R,target:T}=l;if(R&&!this._wasImmutablyAllocated)throw new p("Cannot update immutable texture before allocation!");I(T)||console.warn("Attempting to set 3D texture data on a non-3D texture");let M=this._descriptor.context.bindTexture(this,f.TEXTURE_UNIT_FOR_UPDATES);if(this._descriptor.context.setActiveTexture(f.TEXTURE_UNIT_FOR_UPDATES),(t<0||r<0||i<0||c>l.width||n>l.height||a>l.depth||t+c>l.width||r+n>l.height||i+a>l.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),U(o))o=o.levels[e],u.compressedTexSubImage3D(T,e,t,r,i,c,n,a,_,o);else{let F=o;u.texSubImage3D(T,e,t,r,i,c,n,a,m,x,F)}this._descriptor.context.bindTexture(M,f.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){let e=this._descriptor;if(!e.hasMipmap){if(this._wasImmutablyAllocated)throw new p("Cannot add mipmaps to immutable texture after allocation");e.hasMipmap=!0,this._samplingModeDirty=!0,O(this._descriptor.context,e)}e.samplingMode===E.LINEAR?(this._samplingModeDirty=!0,e.samplingMode=E.LINEAR_MIPMAP_NEAREST):e.samplingMode===E.NEAREST&&(this._samplingModeDirty=!0,e.samplingMode=E.NEAREST_MIPMAP_NEAREST);let t=this._descriptor.context.bindTexture(this,f.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(f.TEXTURE_UNIT_FOR_UPDATES),this._descriptor.context.gl.generateMipmap(e.target),this._descriptor.context.bindTexture(t,f.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,this._samplingModeDirty=!0)}setWrapMode(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,O(this._descriptor.context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){let e=this._descriptor.context.gl,t=this._descriptor;this._samplingModeDirty&&(k(e,t),this._samplingModeDirty=!1),this._wrapModeDirty&&(K(e,t),this._wrapModeDirty=!1)}_deriveInternalFormat(){if(this._descriptor.context.type===D.WEBGL1)return this._descriptor.internalFormat=this._descriptor.pixelFormat;if(this._descriptor.internalFormat!=null)return this._descriptor.internalFormat===d.DEPTH_STENCIL&&(this._descriptor.internalFormat=d.DEPTH24_STENCIL8),this._descriptor.internalFormat;switch(this._descriptor.dataType){case P.FLOAT:switch(this._descriptor.pixelFormat){case d.RGBA:return this._descriptor.internalFormat=s.RGBA32F;case d.RGB:return this._descriptor.internalFormat=s.RGB32F;default:throw new p("Unable to derive format")}case P.UNSIGNED_BYTE:switch(this._descriptor.pixelFormat){case d.RGBA:return this._descriptor.internalFormat=s.RGBA8;case d.RGB:return this._descriptor.internalFormat=s.RGB8}}return this._descriptor.internalFormat=this._descriptor.pixelFormat===d.DEPTH_STENCIL?d.DEPTH24_STENCIL8:this._descriptor.pixelFormat}_configurePixelStorage(){let e=this._descriptor.context.gl,{unpackAlignment:t,flipped:r,preMultiplyAlpha:i}=this._descriptor;e.pixelStorei(e.UNPACK_ALIGNMENT,t),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r?1:0),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i?1:0)}_texStorage(e,t,r,i,c,n){let a=this._descriptor.context.gl2;if(a==null)throw new p("Immutable textures are not supported in WebGL1");if(!te(t))throw new p("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;let o=r?Y(e,i,c,n):1;if(I(e)){if(n==null)throw new p("Missing depth dimension for 3D texture upload");a.texStorage3D(e,o,t,i,c,n)}else a.texStorage2D(e,o,t,i,c);this._wasImmutablyAllocated=!0}_texImage(e,t,r,i,c,n,a){let o=this._descriptor.context.gl,u=I(e),{isImmutable:l,pixelFormat:_,dataType:m}=this._descriptor,x=this._descriptor.context.type===D.WEBGL2,R=x?o:null;if(x||!y(a))if(l){if(a!=null){let T=a;if(u){if(n==null)throw new p("Missing depth dimension for 3D texture upload");R.texSubImage3D(e,t,0,0,0,i,c,n,_,m,T)}else o.texSubImage2D(e,t,0,0,i,c,_,m,T)}}else{let T=a;if(u){if(n==null)throw new p("Missing depth dimension for 3D texture upload");R.texImage3D(e,t,r,i,c,n,0,_,m,T)}else o.texImage2D(e,t,r,i,c,0,_,m,T)}else o.texImage2D(e,0,r,_,m,a)}_compressedTexImage(e,t,r,i,c,n,a){let o=this._descriptor.context.gl,u=null,l=I(e),_=this._descriptor.isImmutable;if(l){if(this._descriptor.context.type!==D.WEBGL2)throw new p("3D textures are not supported in WebGL1");u=o}if(_){if(a!=null)if(l){if(n==null)throw new p("Missing depth dimension for 3D texture upload");u.compressedTexSubImage3D(e,t,0,0,0,i,c,n,r,a)}else o.compressedTexSubImage2D(e,t,0,0,i,c,r,a)}else if(l){if(n==null)throw new p("Missing depth dimension for 3D texture upload");u.compressedTexImage3D(e,t,r,i,c,n,0,a)}else o.compressedTexImage2D(e,t,r,i,c,0,a)}_forEachMipmapLevel(e,t=1/0){let{width:r,height:i,depth:c,hasMipmap:n,target:a}=this._descriptor,o=a===g.TEXTURE_3D;if(r==null||i==null||o&&c==null)throw new p("Missing texture dimensions for mipmap calculation");for(let u=0;e(u,r,i,c),n&&(r!==1||i!==1||o&&c!==1)&&!(u>=t);++u)r=Math.max(1,r>>1),i=Math.max(1,i>>1),o&&(c=Math.max(1,c>>1))}};function O(e,t){(t.width!=null&&t.width<0||t.height!=null&&t.height<0||t.depth!=null&&t.depth<0)&&console.error("Negative dimension parameters are not allowed!");let r=e.type===D.WEBGL2;r||!t.isImmutable&&!I(t.target)||console.error("Immutable and 3D-like textures are not supported in WebGL1!"),!r&&(t.width!=null&&L(t.width)&&t.height!=null&&L(t.height)||(typeof t.wrapMode=="number"?t.wrapMode!==b.CLAMP_TO_EDGE&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):t.wrapMode.s===b.CLAMP_TO_EDGE&&t.wrapMode.t===b.CLAMP_TO_EDGE||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),t.hasMipmap&&console.error("Mipmapping requires power-of-two textures!")))}function k(e,t){let r=t.samplingMode,i=t.samplingMode;r===E.LINEAR_MIPMAP_NEAREST||r===E.LINEAR_MIPMAP_LINEAR?(r=E.LINEAR,t.hasMipmap||(i=E.LINEAR)):r!==E.NEAREST_MIPMAP_NEAREST&&r!==E.NEAREST_MIPMAP_LINEAR||(r=E.NEAREST,t.hasMipmap||(i=E.NEAREST)),e.texParameteri(t.target,e.TEXTURE_MAG_FILTER,r),e.texParameteri(t.target,e.TEXTURE_MIN_FILTER,i)}function K(e,t){typeof t.wrapMode=="number"?(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode)):(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode.s),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode.t))}function ee(e,t){let r=e.capabilities.textureFilterAnisotropic;r&&e.gl.texParameterf(t.target,r.TEXTURE_MAX_ANISOTROPY,t.maxAnisotropy??1)}function te(e){return e in s}function re(e){return e in h}function U(e){return e!=null&&"type"in e&&e.type==="compressed"}function ie(e){return e!=null&&"byteLength"in e}function y(e){return e!=null&&!U(e)&&!ie(e)}function I(e){return e===g.TEXTURE_3D||e===g.TEXTURE_2D_ARRAY}function Y(e,t,r,i=1){let c=Math.max(t,r);return e===g.TEXTURE_3D&&(c=Math.max(c,i)),Math.round(Math.log(c)/Math.LN2)+1}f.TEXTURE_UNIT_FOR_UPDATES=0;var se=new Map;export{Q as a,ce as b,w as c,S as d,_e as e,he as f,me as g,H as h,N as i,f as j};
