"use strict";(self.webpackChunkangular_17_test=self.webpackChunkangular_17_test||[]).push([[3724],{23724:(I,p,s)=>{s.r(p),s.d(p,{default:()=>x});var v=s(15861),n=s(50484),y=s(57964),c=s(1258),u=s(77675),a=s(80543),h=(s(1535),s(57678),s(14007),s(10141)),f=s(93792),S=s(71997),g=s(57108),C=s(74321);const O=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return(0,n._)([(0,a.Cb)()],t.prototype,"_isUserPaused",void 0),(0,n._)([(0,a.Cb)({readOnly:!0})],t.prototype,"connectionStatus",null),(0,n._)([(0,a.Cb)({type:C.Z})],t.prototype,"filter",void 0),t=(0,n._)([(0,h.j)("esri.layers.mixins.StreamLayerView")],t),t};function m(e,t){if(null==e&&null==t)return null;const r={};return null!=t&&(r.geometry=t.toJSON()),null!=e&&(r.where=e),r}let o=class extends(O(S.default)){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([(0,u.YP)(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),(0,u.YP)(()=>this.layer.purgeOptions,()=>this._update()),(0,u.YP)(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new y.Z("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return(0,c.AL)(e.map(d=>this.on(d,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const l=super.on(e,t),i=this;return(0,c.kB)(()=>{l.remove(),r&&(i._proxy.closed||i.hasEventListener(e)||i._proxy.enableEvent(e,!1))})}queryLatestObservations(e,t){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new y.Z("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(r=>{const l=f.Z.fromJSON(r);return l.features.forEach(i=>{i.layer=this.layer,i.sourceLayer=this.layer}),l})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._proxy?.pauseStream()}_doResume(){this._proxy?.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(m(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}_createServiceOptions(){var e=this;return(0,v.Z)(function*(){const t=e.layer,{objectIdField:r}=t,l=t.fields.map(E=>E.toJSON()),i=(0,g.oq)(t.geometryType),d=t.timeInfo?.toJSON()||null,P=t.spatialReference?t.spatialReference.toJSON():null;return{type:"stream",isPaused:e._isUserPaused,fields:l,fieldsIndex:e.layer.fieldsIndex.toJSON(),geometryType:i,objectIdField:r,timeInfo:d,source:e.layer.parsedUrl,serviceFilter:m(e.layer.definitionExpression,e.layer.geometryDefinition),purgeOptions:e.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(e._enabledEventTypes.values()),spatialReference:P,maxReconnectionAttempts:e.layer.maxReconnectionAttempts,maxReconnectionInterval:e.layer.maxReconnectionInterval,updateInterval:e.layer.updateInterval,customParameters:t.customParameters}})()}};(0,n._)([(0,a.Cb)()],o.prototype,"pipelineConnectionStatus",void 0),(0,n._)([(0,a.Cb)()],o.prototype,"pipelineErrorString",void 0),(0,n._)([(0,a.Cb)({readOnly:!0})],o.prototype,"connectionError",null),(0,n._)([(0,a.Cb)({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=(0,n._)([(0,h.j)("esri.views.2d.layers.StreamLayerView2D")],o);const x=o}}]);