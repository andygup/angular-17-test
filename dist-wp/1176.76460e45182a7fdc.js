"use strict";(self.webpackChunkangular_17_test=self.webpackChunkangular_17_test||[]).push([[1176],{33520:(Ve,ce,x)=>{function G(){return new Float32Array(3)}function X(z,T,E){const K=new Float32Array(3);return K[0]=z,K[1]=T,K[2]=E,K}function j(){return G()}function A(){return X(1,1,1)}function q(){return X(1,0,0)}function se(){return X(0,1,0)}function F(){return X(0,0,1)}x.d(ce,{c:()=>G,f:()=>X});const ie=j(),P=A(),fe=q(),me=se(),re=F();Object.freeze(Object.defineProperty({__proto__:null,ONES:P,UNIT_X:fe,UNIT_Y:me,UNIT_Z:re,ZEROS:ie,clone:function O(z){const T=new Float32Array(3);return T[0]=z[0],T[1]=z[1],T[2]=z[2],T},create:G,createView:function Q(z,T){return new Float32Array(z,T,3)},fromValues:X,ones:A,unitX:q,unitY:se,unitZ:F,zeros:j},Symbol.toStringTag,{value:"Module"}))},95150:(Ve,ce,x)=>{x.d(ce,{SR:()=>F,Ui:()=>se});var G=x(89317),O=x(45425),X=x(43585),Q=x(54746),j=x(40637),A=x(23991),q=x(33721);function se(v){return ie(v,!0)}function F(v){return ie(v,!1)}function ie(v,c){if(null==v)return null;const g=v.spatialReference,p=(0,q.C5)(g),m=(0,G.AK)(v)?v.toJSON():v;if(!p)return m;const b=(0,q.sS)(g)?102100:4326,S=A.UZ[b].maxX,B=A.UZ[b].minX;if((0,j.wp)(m))return fe(m,S,B);if((0,j.aW)(m))return m.points=m.points.map(D=>fe(D,S,B)),m;if((0,j.YX)(m))return function P(v,c){if(!c)return v;const g=function me(v,c){const g=[],{ymin:p,ymax:m,xmin:b,xmax:S}=v,B=v.xmax-v.xmin,[D,M]=c.valid,{x:w,frameId:L}=re(v.xmin,c),{x:Z,frameId:k}=re(v.xmax,c),Le=w===Z&&B>0;if(B>2*M){const pe={xmin:b<S?w:Z,ymin:p,xmax:M,ymax:m},ye={xmin:D,ymin:p,xmax:b<S?Z:w,ymax:m},ge={xmin:0,ymin:p,xmax:M,ymax:m},xe={xmin:D,ymin:p,xmax:0,ymax:m},ee=[],J=[];R(pe,ge)&&ee.push(L),R(pe,xe)&&J.push(L),R(ye,ge)&&ee.push(k),R(ye,xe)&&J.push(k);for(let H=L+1;H<k;H++)ee.push(H),J.push(H);g.push(new E(pe,[L]),new E(ye,[k]),new E(ge,ee),new E(xe,J))}else w>Z||Le?g.push(new E({xmin:w,ymin:p,xmax:M,ymax:m},[L]),new E({xmin:D,ymin:p,xmax:Z,ymax:m},[k])):g.push(new E({xmin:w,ymin:p,xmax:Z,ymax:m},[L]));return g}(v,c).map(p=>p.extent);return g.length<2?g[0]||v:g.length>2?(v.xmin=c.valid[0],v.xmax=c.valid[1],v):{rings:g.map(p=>[[p.xmin,p.ymin],[p.xmin,p.ymax],[p.xmax,p.ymax],[p.xmax,p.ymin],[p.xmin,p.ymin]])}}(m,p);if((0,j.oU)(m)||(0,j.l9)(m)){const D=(0,X.$P)(K,m),M={xmin:D[0],ymin:D[1],xmax:D[2],ymax:D[3]},w=(0,A.XZ)(M.xmin,B)*(2*S),L=0===w?m:(0,A.Sy)(m,w);return M.xmin+=w,M.xmax+=w,M.xmax>S?T(L,S,c):M.xmin<B?T(L,B,c):L}return m}function fe(v,c,g){if(Array.isArray(v)){const p=v[0];if(p>c){const m=(0,A.XZ)(p,c);v[0]=p+m*(-2*c)}else if(p<g){const m=(0,A.XZ)(p,g);v[0]=p+m*(-2*g)}}else{const p=v.x;if(p>c){const m=(0,A.XZ)(p,c);v.x+=m*(-2*c)}else if(p<g){const m=(0,A.XZ)(p,g);v.x+=m*(-2*g)}}return v}function re(v,c){const[g,p]=c.valid,m=2*p;let b,S=0;return v>p?(b=Math.ceil(Math.abs(v-p)/m),v-=b*m,S=b):v<g&&(b=Math.ceil(Math.abs(v-g)/m),v+=b*m,S=-b),{x:v,frameId:S}}function R(v,c){const{xmin:g,ymin:p,xmax:m,ymax:b}=c;return z(v,g,p)&&z(v,g,b)&&z(v,m,b)&&z(v,m,p)}function z(v,c,g){return c>=v.xmin&&c<=v.xmax&&g>=v.ymin&&g<=v.ymax}function T(v,c,g=!0){const p=!(0,j.l9)(v);if(p&&(0,Q.Zy)(v),g)return(new Te).cut(v,c);const m=p?v.rings:v.paths,b=p?4:2,S=m.length,B=-2*c;for(let D=0;D<S;D++){const M=m[D];if(M&&M.length>=b){const w=[];for(const L of M)w.push([L[0]+B,L[1]]);m.push(w)}}return p?v.rings=m:v.paths=m,v}class E{constructor(c,g){this.extent=c,this.frameIds=g}}const K=(0,O.Ue)();class Te{constructor(){this._linesIn=[],this._linesOut=[]}cut(c,g){let p;if(this._xCut=g,c.rings)this._closed=!0,p=c.rings,this._minPts=4;else{if(!c.paths)return null;this._closed=!1,p=c.paths,this._minPts=2}for(const b of p){if(!b||b.length<this._minPts)continue;let S=!0;for(const B of b)S?(this.moveTo(B),S=!1):this.lineTo(B);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),p=[];for(const b of this._linesIn)b&&b.length>=this._minPts&&p.push(b);const m=-2*this._xCut;for(const b of this._linesOut)if(b&&b.length>=this._minPts){for(const S of b)S[0]+=m;p.push(b)}return this._closed?c.rings=p:c.paths=p,c}moveTo(c){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(c[0]),this._moveTo(c[0],c[1],this._prevSide),this._prevPt=c,this._firstPt=c}lineTo(c){const g=this._side(c[0]);if(g*this._prevSide==-1){const p=this._intersect(this._prevPt,c);this._lineTo(this._xCut,p,0),this._prevSide=0,this._lineTo(c[0],c[1],g)}else this._lineTo(c[0],c[1],g);this._prevSide=g,this._prevPt=c}close(){const c=this._firstPt,g=this._prevPt;c[0]===g[0]&&c[1]===g[1]||this.lineTo(c),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(c,g,p){this._closed?(this._lineIn.push([p<=0?c:this._xCut,g]),this._lineOut.push([p>=0?c:this._xCut,g])):(p<=0&&this._lineIn.push([c,g]),p>=0&&this._lineOut.push([c,g]))}_lineTo(c,g,p){this._closed?(this._addPolyVertex(this._lineIn,p<=0?c:this._xCut,g),this._addPolyVertex(this._lineOut,p>=0?c:this._xCut,g)):p<0?(0===this._prevSide&&this._pushLineOut(),this._lineIn.push([c,g])):p>0?(0===this._prevSide&&this._pushLineIn(),this._lineOut.push([c,g])):this._prevSide<0?(this._lineIn.push([c,g]),this._lineOut.push([c,g])):this._prevSide>0&&(this._lineOut.push([c,g]),this._lineIn.push([c,g]))}_addPolyVertex(c,g,p){const m=c.length;m>1&&c[m-1][0]===g&&c[m-2][0]===g?c[m-1][1]=p:c.push([g,p])}_checkClosingPt(c){const g=c.length;g>3&&c[0][0]===this._xCut&&c[g-2][0]===this._xCut&&c[1][0]===this._xCut&&(c[0][1]=c[g-2][1],c.pop())}_side(c){return c<this._xCut?-1:c>this._xCut?1:0}_intersect(c,g){return c[1]+(this._xCut-c[0])/(g[0]-c[0])*(g[1]-c[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}},68994:(Ve,ce,x)=>{x.d(ce,{Z:()=>Ct});var G=x(15861),O=x(50484),X=x(73514),Q=x(57678),j=x(19939),A=x(14007),q=x(84373),se=x(51172),F=x(79412),ie=x(77675),P=x(80543),me=(x(1535),x(10141)),re=x(43814),R=x(45425),z=x(54746),T=x(40637),E=x(95150),K=x(33721),Te=x(58829),v=x(84176),c=x(26981),g=x(99657),p=x(43101);const m=-1;class b{constructor(){this._dirties=[{vertexFrom:m,vertexCount:m,indexFrom:m,indexCount:m,allDirty:!1},{vertexFrom:m,vertexCount:m,indexFrom:m,indexCount:m,allDirty:!1},{vertexFrom:m,vertexCount:m,indexFrom:m,indexCount:m,allDirty:!1},{vertexFrom:m,vertexCount:m,indexFrom:m,indexCount:m,allDirty:!1},{vertexFrom:m,vertexCount:m,indexFrom:m,indexCount:m,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==m||e.allDirty)}markAllClean(){for(const e of this._dirties)e.indexFrom=m,e.indexCount=m,e.vertexFrom=m,e.vertexCount=m,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],l={};let h,f=!1;(o||n!==m&&r>0)&&(l.geometry={count:r,from:n,allDirty:o},f=!0),(o||i!==m&&s>0)&&(h={count:s,from:i,allDirty:o},f=!0),f&&e({indices:h,vertices:l},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==m){const o=Math.min(i.indexFrom,r),l=Math.max(i.indexFrom+i.indexCount,r+n)-o;i.indexFrom=o,i.indexCount=l}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,o=i;if(!r.allDirty)if(r.vertexCount!==m){const l=Math.min(r.vertexFrom,n),h=Math.max(r.vertexFrom+r.vertexCount,n+o)-l;r.vertexFrom=l,r.vertexCount=h}else r.vertexFrom=n,r.vertexCount=o}}class S{get largestRange(){return this._largestRange}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;)e>=(null!==r?r.from+r.count:0)&&e+t<=(null!==n?n.from:this._parent._size)?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1;return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class B{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new S(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null==t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const r=null!==t.prev?this._freeHead:t.next;B._removeRange(t),this._freeHead=r}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s??null,next:i??null};if(null!=s&&(s.next=r),null!=i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!=i&&r.from+r.count===i.from){const n=r.from,o=r.count;B._fuse(r,i),B._removeRange(i),this._bookKeeper.rangeResized(r,n,o),this._bookKeeper.rangeResized(i,void 0,0)}if(null!=s&&s.from+s.count===r.from){const n=s.from,o=s.count;B._fuse(s,r),B._removeRange(r),this._bookKeeper.rangeResized(s,n,o),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var D=x(32196);const M=["FILL","LINE","MARKER","TEXT","LABEL"];class Z{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new B(i):null,idxFreeList:i?new B(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const n in e[r])this._freeListsAndStorage[r].vertexBuffers[n]={data:i?(0,D.C$)(i,e[r][n]):null,stride:e[r][n]}}}static fromTileData(e,t){const s=function w(a){const e=a.getStrides(),t={};for(let s=0;s<e.length;s++)t[M[s]]=e[s];return t}(e),i=[0,0,0,0,0],r=[0,0,0,0,0];for(const l of e.tileDisplayData.displayObjects)for(const h of l.displayRecords)i[h.geometryType]=Math.max(i[h.geometryType],h.vertexFrom+h.vertexCount),r[h.geometryType]=Math.max(r[h.geometryType],h.indexFrom+h.indexCount);const n=new Z(s,e.tileDisplayData.displayList,t,void 0),o=e.tileBufferData?.geometries??[];for(let l=0;l<o.length;++l){const h=i[l],f=r[l],d=o[l],y=n._storageFor(M[l]),_=o[l].indexBuffer;y.indexBuffer=_,y.idxFreeList=new B(_.length),y.idxFreeList.allocate(f);let C=0;for(const U in d.vertexBuffer){const W=o[l].vertexBuffer[U];y.vertexBuffers[U].data=W.data,y.vertexBuffers[U].stride=W.stride;const $=(0,D.Y8)(W.stride);C||(C=W.data.length*$/W.stride)}y.vtxFreeList=new B(C),y.vtxFreeList.allocate(h)}return n}delete(e){const t=M[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=M[e.geometryType];let o,l;e.meshData=null,void 0===e.vertexFrom?(l=t.vertexCount,o=this._allocateVertices(n,l)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),l=t.vertexCount,o=this._allocateVertices(n,l)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,l=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,l=t.vertexCount);let h,f,d,u=!0;if(void 0===e.indexFrom?(h=r,d=t.indexCount,f=this._allocateIndices(n,d)):t.indexCount>e.indexCount?(h=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),d=t.indexCount,f=this._allocateIndices(n,d)):t.indexCount===e.indexCount?(u=!1,f=e.indexFrom,d=e.indexCount):(h=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),f=e.indexFrom,d=t.indexCount),-1!==o&&-1!==f){const y=this._storageFor(n);if((0,D.wO)(o,f,y.vertexBuffers,y.indexBuffer,t,s,i),e.vertexFrom=o,e.indexFrom=f,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const _ in s)this._dirtyMap.markDirtyVertices(e.geometryType,_,e.vertexFrom,e.vertexCount)}return u&&this._displayList.addToList(e,h),!0}return-1!==o&&this._freeVertices(n,o,l),-1!==f&&this._freeIndices(n,f,d),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=M[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const l=this._storageFor(r);if((0,D.wO)(n,o,l.vertexBuffers,l.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const h in s)this._dirtyMap.markDirtyVertices(e.geometryType,h,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.vtxFreeList?.fragmentation;return null==r||r>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList?.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList?.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList?.allocate(t);if(null==i||-1===i)return-1;const r=s.idxFreeList?.fragmentation;return null==r||r>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var k=x(39853),Le=x(39237),pe=x(46682);class ye{constructor(e){this.geometryMap=(0,D.Mk)(()=>({indexBuffer:k.f.createIndex(e,Le.l1.STATIC_DRAW),vao:null}),(t,s)=>({vertexBuffer:k.f.createVertex(e,D.Bw[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao?.disposeVAOOnly(),t.data.indexBuffer?.dispose();for(const s in t.buffers)t.buffers[s]?.data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(s,i,r){if(!t.data.vao){const n={};for(const o in t.buffers)n[o]=t.buffers[o].data.vertexBuffer;t.data.vao=new pe.U(s,r,i,n,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((s,i)=>{this._upload(s,i,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const r in i){const n=i[r];n.allDirty?this._uploadVertices(s,t,r):null!=n.from&&null!=n.count&&this._uploadVertices(s,t,r,n.from,n.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[s];if(!o)return;const{data:l,stride:h}=o;if(n.buffers[s]&&l.length>0){const f=h/l.BYTES_PER_ELEMENT;null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(l,i*f,i*f,(i+r)*f):n.buffers[s].data.vertexBuffer.setData(l)}}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer;r.data.indexBuffer&&n.length>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(n,s,s,s+i):r.data.indexBuffer.setData(n))}}var ge=x(43011);class xe extends ge.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new b}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t?.tileDisplayData?.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new b,this._dispRecStore=Z.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t?.tileDisplayData?.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new ye(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=Z.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate?.tileDisplayData?.displayObjects||[],i=(e.remove||[]).slice();for(const o of s)null!=o.insertAfter&&i.push(o.id);let r;i.length>0&&(r=new Set(i));const n=this._data.tileDisplayData;for(const o of i){const l=n.displayObjectRegistry.get(o);if(l){n.displayList.removeFromList(l.displayRecords);for(const h of l.displayRecords)this._dispRecStore.delete(h);n.displayObjectRegistry.delete(o)}}r?.size&&(n.displayObjects=n.displayObjects.filter(o=>!r.has(o.id)));for(const o of s){let l,h=n.displayObjectRegistry.get(o.id);if(h){const d=h.displayRecords;h.set(o),h.displayRecords=d;const u=h.displayRecords.length;for(let y=0;y<u;++y){const _=h.displayRecords[y],C=o.displayRecords[y];(y>=o.displayRecords.length||_.geometryType!==C.geometryType||_.symbolLevel!==C.symbolLevel||_.zOrder!==C.zOrder||_.materialKey!==C.materialKey)&&(this._dispRecStore.delete(h.displayRecords[y]),y<o.displayRecords.length&&(h.displayRecords[y]=void 0))}h.displayRecords.length=o.displayRecords.length}else{let d;h=o.copy(),h.displayRecords=[],n.displayObjectRegistry.set(o.id,h);const u=n.displayObjects;if(null!=h.insertAfter)if(l={},h.insertAfter>=0){const y=n.displayObjectRegistry.get(h.insertAfter);y?(d=u.indexOf(y)+1,d<u.length?u.splice(d,0,h):(u.push(h),d=u.length)):(u.push(h),d=u.length)}else u.unshift(h),d=0;else u.push(h),d=u.length;if(l){const y=o.displayRecords.length>0?1:0;let _=0;for(let C=d-1;C>=0&&_<y;--C)for(let U=u[C].displayRecords.length-1;U>=0&&_<y;--U){const W=u[C].displayRecords[U],$=n.displayList.getDPInfoType();l[$]||(l[$]=W,++_)}}}const f=o.displayRecords.length;for(let d=0;d<f;++d){const u=o.displayRecords[d];let y=h.displayRecords[d];y?(y.meshData=u.meshData,y.materialKey=u.materialKey):(y=u.copy(),y.vertexFrom=void 0,y.indexFrom=void 0,h.displayRecords[d]=y);const _=u.geometryType,C=n.displayList.getDPInfoType(),U=e.addOrUpdate.tileBufferData.geometries[_],W=U.vertexBuffer,$=U.indexBuffer;let te;l&&(te=l[C]?n.displayList.splitAfter(l[C]):-1),t=this._dispRecStore.setMeshData(y,u,W,$,te)&&t,l&&null!=y.indexFrom&&null!=y.indexFrom&&(l[C]=y)}}return t}}class ee{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class H{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new H;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const r in s.vertexBuffer){const{data:n,stride:o}=s.vertexBuffer[r];i.vertexBuffer[r]={data:n.slice(),stride:o}}}return e}static deserialize(e){const t=new H;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,D.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var Xe=x(10827);function Fe(a,e,t,...s){e<a.length?a.splice(e,t,...s):a.push(...s)}class Oe{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const n=r.geometryDPInfo.unified;if(n)for(const o of n){const{geometryType:l,materialKey:h,indexFrom:f,indexCount:d}=o,u=Xe.m2.load(h).symbologyType,y=e.painter.getBrush(l,u),_={geometryType:l,materialKey:h,indexFrom:f,indexCount:d,target:t.getGeometry(l)};y.prepareState(e),y.drawGeometry(e,t,_,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new Oe;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const n=t[r];if(n.geometryType===e.geometryType&&i>n.indexFrom&&i<=n.indexFrom+n.indexCount){if(i<n.indexFrom+n.indexCount){const o=new ve;o.geometryType=n.geometryType,o.materialKey=n.materialKey,o.indexFrom=i,o.indexCount=n.indexFrom+n.indexCount-i,t.splice(r+1,0,o),n.indexCount=i-n.indexFrom}return r}}}_addToList(e,t){const r=this._getDisplayList(e.symbolLevel,e.zOrder),n=t??r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const l=new ve;l.indexFrom=e.indexFrom,l.indexCount=e.indexCount,l.materialKey=e.materialKey,l.geometryType=e.geometryType,Fe(r,n+1,0,l)}}_removeFromList(e){const i=this._getDisplayList(e.symbolLevel,e.zOrder),r=i.length;let n;for(let o=0;o<r;++o){const l=i[o];if(e.indexFrom+e.indexCount>l.indexFrom&&e.indexFrom<l.indexFrom+l.indexCount&&l.geometryType===e.geometryType){n=o;break}}if(void 0!==n){const o=i[n];if(e.indexFrom===o.indexFrom)return o.indexCount-=e.indexCount,o.indexFrom+=e.indexCount,0===o.indexCount&&Fe(i,n,1),n-1;if(e.indexFrom+e.indexCount===o.indexFrom+o.indexCount)return o.indexCount-=e.indexCount,0===o.indexCount?(Fe(i,n,1),n-1):n;{const l=o.indexFrom,h=e.indexFrom-o.indexFrom,f=e.indexCount,d=o.indexFrom+o.indexCount-(e.indexFrom+e.indexCount);o.indexCount=h;const u=new ve;return u.geometryType=o.geometryType,u.materialKey=o.materialKey,u.indexFrom=l+h+f,u.indexCount=d,Fe(i,n+1,0,u),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let o=0;o<i;o++)if(this.symbolLevels[o].symbolLevel===e){s=this.symbolLevels[o];break}let r;s||(s=new Ue,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let o=0;o<n;o++)if(s.zLevels[o].zLevel===t){r=s.zLevels[o];break}return r||(r=new ze,r.geometryDPInfo=new Be,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class ve{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new ve;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Be{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Be;return e.fill=this.fill&&this.fill.map(t=>t.clone()),e.line=this.line&&this.line.map(t=>t.clone()),e.marker=this.marker&&this.marker.map(t=>t.clone()),e.text=this.text&&this.text.map(t=>t.clone()),e.label=this.label&&this.label.map(t=>t.clone()),e.unified=this.unified&&this.unified.map(t=>t.clone()),e}}class ze{constructor(){this.geometryDPInfo=new Be}clone(){const e=new ze;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class Ue{constructor(){this.zLevels=[]}clone(){const e=new Ue;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class je{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class ne{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new ne(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new je;for(const r in t){const n=t[r].stride,o=t[r].data;if(!o)continue;const l=[],h=(0,D.Y8)(n);for(let f=0;f<n*e.vertexCount/h;++f)l[f]=o[f+n*e.vertexFrom/h];i.vertexData.set(r,l)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new je;for(const s in e){const i=e[s].stride,r=e[s].data,n=[],o=(0,D.Y8)(i);for(let l=0;l<i*this.vertexCount/o;++l)n[l]=r[l+i*this.vertexFrom/o];this.meshData.vertexData.set(s,n)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){if(this.meshData){for(const r in t){const n=t[r].stride,o=this.meshData.vertexData.get(r),l=t[r].data,h=(0,D.Y8)(n);for(let f=0;f<n*this.meshData.vertexCount/h;++f)l[f+n*e/h]=o[f]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new ne(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function Ee(a,e){if(null!==e){a.push(e.length);for(const t of e)t.serialize(a);return a}a.push(0)}class oe{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new oe(this.id);return e.set(this),e}clone(){const e=new oe(this.id);return e.displayRecords=this.displayRecords.map(t=>t.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),Ee(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new oe(t);return s.displayRecords=function Ne(a,e,t){const s=a.readInt32(),i=new Array(s);for(let r=0;r<i.length;r++)i[r]=e.deserialize(a,t);return i}(e,ne,{id:t})??[],s}}class _e{constructor(){this.displayObjects=[],this._displayList=null}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new Oe;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new _e;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(t=>t.clone())),e}serialize(e){return Ee(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const n=oe.deserialize(e);s[r]=n,i.set(n.id,n)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new _e;return t._deserializeObjects(e),t}}var Ye=x(49748);class ae{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,D.e2)(e.data,e.stride);return new ae(t,e.stride)}static fromVertexVector(e){const t=(0,D.e2)(e.data.buffer(),e.stride);return new ae(t,e.stride)}}class le{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=ae.decode(e.namedBuffers[r]);return new le(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,D.e2)(e.vertices,e.stride),n={geometry:new ae(i,e.stride)};return new le(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};let r;for(r in e.namedVectors)i[r]=ae.fromVertexVector(e.namedVectors[r]);return new le(t,s,i)}}var Se=x(17148);class ke{get vertexCount(){const t=this.data.length/(this.stride/4);return t!==(0|t)&&console.debug("Corrupted stride"),t}constructor(e,t){this.data=e,this.stride=t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class Je{constructor(e,t,s){this.geometryType=e,this.indexVector=new Se.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,D.$_)(e,s);for(const r in i){const n=i[r];let o;switch(n%4){case 0:case 2:o=new Se.Z(Uint32Array,n*t);break;case 1:case 3:o=new Se.Z(Uint8Array,n*t)}this.namedVectors[r]=new ke(o,n)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};let r;for(r in t.push(s),this.namedVectors){const n=this.namedVectors[r];i[r]={},n.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=le.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const Ie=new ee,he=new ee;function Qe(a,e){const t={};for(const s in a){const i={data:(0,D.C$)(e,a[s]),stride:a[s]};t[s]=i}return t}class N{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){if(Ie.reset(),!this.tileDisplayData)return;const e=function et(a){const e=[[],[],[],[],[]],t=a;for(const s of t)for(const i of s.displayRecords)e[i.geometryType].push(i);return e}(this.tileDisplayData.displayObjects);for(const n of e)for(const o of n)o&&Ie.needMore(o.geometryType,o.meshData?o.meshData.vertexCount:o.vertexCount,o.meshData?o.meshData.indexData.length:o.indexCount);const t=e.length,s=new H;for(let n=0;n<t;++n){s.geometries[n].indexBuffer=new Uint32Array(Math.round(Q._X*Ie.indicesFor(n)));const o=[],l=this.tileBufferData?.geometries[n].vertexBuffer;if(!l)continue;for(const u in l)o.push(l[u].stride);const h=N._computeVertexAlignment(o),f=Math.round(Q._X*Ie.verticesFor(n)),d=N._align(f,h);for(const u in l){const y=l[u].stride;s.geometries[n].vertexBuffer[u]={stride:y,data:(0,D.C$)(d,y)}}}he.reset(),this.tileDisplayData.displayList?.clear();for(let n=0;n<t;++n){const o=e[n];for(const l of o){if(l.meshData)l.writeMeshDataToBuffers(he.verticesFor(n),s.geometries[n].vertexBuffer,he.indicesFor(n),s.geometries[n].indexBuffer),l.meshData=null;else{const h=this.tileBufferData?.geometries[n];if(h){const f=h.vertexBuffer,d=h.indexBuffer,u=s.geometries[n].vertexBuffer,y=s.geometries[n].indexBuffer,_=he.verticesFor(n),C=he.indicesFor(n);(0,D.wO)(_,C,u,y,l,f,d),l.vertexFrom=_,l.indexFrom=C}}he.needMore(n,l.vertexCount,l.indexCount)}}const{displayList:i,displayObjects:r}=this.tileDisplayData;if(i)for(const n of r)i.addToList(n.displayRecords);this.tileBufferData=s}getStrides(){const e=[],t=this.tileBufferData?.geometries;if(!t)return e;for(let s=0;s<t.length;++s){const i=t[s];e[s]={};for(const r in i.vertexBuffer)e[s][r]=i.vertexBuffer[r].stride}return e}clone(){const e=new N;return e.tileBufferData=this.tileBufferData?.clone()??null,e.tileDisplayData=this.tileDisplayData?.clone()??null,e}_guessSize(){const e=this.tileDisplayData?.displayObjects??[],t=Math.min(e.length,4);let r=0;for(let n=0;n<t;n++)r=Math.max(r,e[n].displayRecords.length);return 2*(12*e.length+e.length*r*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new Se.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,D.Z_)(r=>{const n=e.data[r];if(null!=n){const o=Ye.$.from(n.records).getCursor();for(;o.next();){const l=o.id,h=o.materialKey,f=o.indexFrom,d=o.indexCount,u=o.vertexFrom,y=o.vertexCount,_=i.get(l),C=new ne(l,r,h);C.indexFrom=f,C.indexCount=d,C.vertexFrom=u,C.vertexCount=y,_.displayRecords.push(C)}s[r]=le.fromVertexData(n,r)}else s[r]=new Je(r,0,p.mD.DEFAULT).intoBuffers()}),N.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new N,s=new _e,i=new H;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const n=r,o=e.vertexBuffersMap[n];i.geometries[n].indexBuffer=o.indexBuffer,i.geometries[n].vertexBuffer=o.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new N;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new N;s.tileDisplayData=new _e,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const h of e)for(const f of h.displayRecords)n[f.geometryType].push(f),i[f.geometryType]+=f.meshData.vertexCount,r[f.geometryType]+=f.meshData.indexData.length;const o=new H,l=function qe(a){return[a.fill||{},a.line||{},a.icon||{},a.text||{},a.label||{}]}(t);for(let h=0;h<5;h++){const f=new Uint32Array(r[h]),d=Qe(l[h],i[h]);ne.writeAllMeshDataToBuffers(n[h],d,f),o.geometries[h]={indexBuffer:f,vertexBuffer:d}}return s.tileBufferData=o,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var tt=x(29735),st=x(9811),it=x(85248),rt=x(84360),Ae=x(1667),nt=x(75790),ot=x(9739),Ce=x(10842),at=x(14050),lt=x(47013);class Re extends lt.i{static from(e,t,s){const i=at.s.createInstance(),r=[],n=e.filter(o=>!!o.geometry);for(const o of n){const l=(0,T.Ji)(o.geometry);(0,Ce.E7)(r,[o],l,!1,!1,t)}return new Re(i,r,s)}constructor(e,t,s){super(e,t,null),this._transform=s}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Re(this.instance,this._features,this._transform);return this.copyInto(e),e}}var Me=x(55768),ht=x(62168),dt=x(43585),ut=x(93566),ct=x(72710),ft=x(56880),de=x(66398),Ke=x(62209);const be=new Ke.Z,Pe=new Ke.Z,Ze="esriGeometryPolyline";function He(a){a.coords.length=0,a.lengths.length=0}class Y{constructor(){this.bounds=(0,R.Ue)(),this.graphic=null}static acquire(e=null,t,s,i,r){let n;return 0===Y._pool.length?n=new Y:(n=Y._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,T.oU)(e.geometry)){const s=e.symbol;if(null==s)return null;if(s?.layers.length>0&&s.layers.some(i=>"text"===i.type||"marker"===i.type)){const i=(0,ft.tO)(e.geometry);return null!==i?(0,de.RF)(t,{},{x:i[0],y:i[1]},!1,!1):null}}return null}acquire(e=null,t,s,i,r){e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry,n=(0,T.Ji)(r);if(null==n)return null;switch(n){case"esriGeometryPolygon":{const o=r,{rings:l}=o;if(!l||0===l.length)return null;let h;if(h=(0,de.ym)(e,1===l.length&&2===l[0].length?{paths:[[l[0][0],l[0][1]]]}:this.geometry),!h&&(h=(0,de.ym)(e,{x:l[0][0][0],y:l[0][0][1]}),h)){const{x:d,y:u}=h;return{rings:[[[d-1,u],[1,-1],[1,1],[-1,1],[-1,-1]]]}}return h}case"esriGeometryPolyline":{const o=r;He(be),He(Pe);const l=o.hasZ??!1,h=o.hasM??!1;return(0,Ce.u0)(be,o),(0,Ce.zj)(Pe,be,l,h,Ze,e.scale[0]),(0,Ce.Nh)(be,Pe,l,h,Ze,e),(0,Ce.J6)(be,o.hasZ??!1,o.hasM??!1)}case"esriGeometryMultipoint":{const o=r,l=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),h=(0,K.C5)(s);let f=o.points;if(h){const[d,u]=h.valid,y=u-d;f=f.filter(_=>{if(_[0]+l>u||_[0]-l<d){const C=[..._];return _[0]+l>u?C[0]-=y:C[0]+=y,(0,R.Zm)(t,_,l)||(0,R.Zm)(t,C,l)}return(0,R.Zm)(t,_,l)})}return 0===f.length?{points:f}:(0,de.ym)(e,{points:f})}}return(0,de.ym)(e,this.geometry)}}Y._pool=[],Y._set=new Set;var I=x(43501);const De={minX:0,minY:0,maxX:0,maxY:0},ue=(0,R.Ue)();function we(a,e,t,s,i){return De.minX=e,De.minY=t,De.maxX=s,De.maxY=i,a.search(De)}function mt(a){return{minX:a.bounds[0],minY:a.bounds[1],maxX:a.bounds[2],maxY:a.bounds[3]}}class pt{constructor(e,t,s,i,r,n,o){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=o,this._index=(0,ht.r)(9,mt),this._itemByGraphic=new Map,this._inflatedSizeHelper=new v.bP,this._tileInfoView=e,this._uidFieldName=s;const l=e.getClosestInfoForScale(t);l&&(this._resolution=this._tileInfoView.getTileResolution(l.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new ct.Tu(e)}hitTest(e,t,s,i,r){e=(0,ut.or)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;ue[0]=e-n,ue[1]=t-n,ue[2]=e+n,ue[3]=t+n;const o=.5*i*(s+I.OC),l=we(this._index,e-o,t-o,e+o,t+o);if(!l||0===l.length)return[];const h=[],f=(0,R.Ue)(),d=(0,R.Ue)();for(const _ of l){const{geometry:C,symbolResource:U}=_;this._getSymbolBounds(f,U,C,d,r),d[3]=d[2]=d[1]=d[0]=0,(0,R.kK)(f,ue)&&_.graphic?.visible&&h.push(_)}if(0===h.length)return[];const u=this._hittestDrawHelper,y=[];for(const _ of h){const{geometry:C,symbolResource:U}=_,{hash:W,textInfo:$}=U,te=this._hashToCIM.get(W);te&&u.hitTest(ue,te.symbol,C,$,r,i)&&y.push(_)}return y.sort(yt),y.map(_=>_.graphic)}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort((d,u)=>d.zorder-u.zorder),i[0].insertAfter=-1;for(let d=1;d<i.length;d++)i[d].insertAfter=i[d-1].graphic.uid;i.sort((d,u)=>d.graphic.uid-u.graphic.uid),s.sort((d,u)=>d.uid-u.uid);let r,n=0,o=0;const l=t.resolution,h=[],f={originPosition:"upperLeft",scale:[l,l],translate:[t.bounds[0],t.bounds[3]]};for(const d of s){for(o=-2;n<i.length;)if(r=i[n],n++,d.uid===r.graphic.uid){o=r.insertAfter;break}if(!r?.geometry||-2===o)continue;const u=r.getGeometryQuantized(f,t.bounds,this._tileInfoView.spatialReference,l),y={...r.graphic.attributes};y[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),h.push({centroid:Y.getCentroidQuantized(r,f),geometry:u,attributes:y,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return h.sort((d,u)=>d.zorder-u.zorder),h}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter(e=>e.graphic.visible).map(e=>e.bounds)}addOrModify(e,t,s){if(!e||null==t)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=Y.acquire(e,t,s,r??null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t?.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,R.d9)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return null!=n&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[i,r]of t){const n=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&null!=n&&(r.bounds=n,s.push(r))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:l,resolution:h}=r;let f,d,u,y;s.sort((_,C)=>_.zorder-C.zorder);for(let _=0;_<s.length;_++){u=s[_],f=u.graphic,d=u.getGeometryQuantized(i,l,o,h),y=0===_?-1:s[_-1].graphic.uid;const C={...u.graphic.attributes};C[n]=f.uid,null==u.groupId&&(u.groupId=t.createTemplateGroup(u.symbol,null)),e.push({centroid:Y.getCentroidQuantized(u,i),geometry:d,attributes:C,symbol:u.symbol,groupId:u.groupId,insertAfter:y,zorder:u.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds,i=(0,K.C5)(t);if(i&&t.isWrappable){const[r,n]=i.valid,o=Math.abs(s[2]-n)<1e-5,l=Math.abs(s[0]-r)<1e-5;if((!o||!l)&&(o||l)){const h=e.resolution;let f;f=(0,R.Ue)(o?[r,s[1],r+h*I.OC,s[3]]:[n-h*I.OC,s[1],n,s[3]]);const d=we(this._index,s[0],s[1],s[2],s[3]),u=we(this._index,f[0],f[1],f[2],f[3]);return[...new Set([...d,...u])]}}return we(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,R.Ue)()),(0,dt.$P)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:l,textInfo:h}=t,f=this._hashToCIM.get(l);if(!f)return null;i||(i=[0,0,0,0]);const d=this._inflatedSizeHelper.getSymbolInflateSize(i,f.symbol,this._cimResourceManager,r,h);i[0]=(0,Me.F2)(d[0]),i[1]=(0,Me.F2)(d[1]),i[2]=(0,Me.F2)(d[2]),i[3]=(0,Me.F2)(d[3])}const n=this._resolution,o=v.bP.safeSize(i);return e[0]-=o*n,e[1]-=o*n,e[2]+=o*n,e[3]+=o*n,e}}const yt=(a,e)=>{const t=(0,I.eT)(a.graphic),s=(0,I.eT)(e.graphic);return t===s?e.zorder-a.zorder:t-s};var gt=x(4959),xt=x(19903),vt=x(58065);const _t=(0,A.Z)("esri-2d-graphic-debug");function Ge(a,e,t){let s=t.get(a);return s||(s={tile:e,addedOrModified:[],removed:[]},t.set(a,s)),s}let V=class extends((0,q.IG)(X.Z)){constructor(a){super(a),this._storage=new ot.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.renderer=null,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(a,e,t){if(a){const s=(0,Ae.q5)(a),i=(0,Ae.MD)({indexCount:0,fields:{}},"feature",a,s);this._matcher=(0,rt.fL)(i,e,null,t)}}_createDisplayId(a){let e=this._displayIds.get(a);return e||(e=this._storage.createDisplayId(),this._displayIds.set(a,e)),e}initialize(){this._attributeStore=new nt.Z({type:"local",initialize:i=>Promise.resolve(this.container.attributeView.initialize(i)),update:i=>this.container.attributeView.requestUpdate(i),render:()=>this.container.requestRender()},(0,xt.hc)("2d")),this.container.checkHighlight=()=>this._attributeStore.hasHighlight;const t=new it.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new pt(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,i=>{this._createDisplayId(i.uid),this._setFilterState(i.uid,i.visible)},i=>{const r=this._displayIds.get(i.uid);this._displayIds.delete(i.uid),this._storage.releaseDisplayId(r)},this._hashToCIM),this._meshFactory=new st.j(null,this.uid,t),this._templateStore=t,this.addHandles([(0,ie.YP)(()=>this._effectiveRenderer,i=>{this._createMatcher(i,t,this.container.stage.resourceManager);for(const r of this.graphics)this._pendingUpdate.updated.add(r);this.requestUpdate()}),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{_t&&this.container.enableRenderingBounds(()=>this._graphicStore.getAllBounds()),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.addHandles(this.graphics.on("change",r=>this._graphicsChangeHandler(r)),"graphics");const i=this.container.stage.resourceManager;this._createMatcher(this._effectiveRenderer,t,i),this._graphicStore.setResourceManager(i),this._attached=!0,this.notifyChange("updating")})]),this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})}get _effectiveRenderer(){return"function"==typeof this.renderer?this.renderer():this.renderer}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._pendingUpdate.added.size>0||this._pendingUpdate.removed.size>0||this._pendingUpdate.updated.size>0||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore?.updatingHandles.updating||this._processing}hitTest(a){if(!this.view||this.view.suspended)return[];const{resolution:e,rotation:t}=this.view.state;return this._graphicStore.hitTest(a.x,a.y,2,e,t)}update(a){(0,F.k_)(this._controller.signal);const e=a.state,{resolution:t}=e;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(a){this.updateRequested&&(this.updateRequested=!1,this.update(a))}graphicUpdateHandler(a){const{graphic:e,property:t}=a;switch(t){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(e),this.requestUpdate();break;case"visible":this._setFilterState(e.uid,e.visible),this._attributeStore.sendUpdates()}}setHighlight(a){const e=a.map(t=>this._displayIds.get(t)).filter(Q.pC);this._attributeStore.setHighlight(a,e)}_getIntersectingTiles(a){const e=this._graphicStore.getBounds(a);if(!e||0===(0,R.d_)(e)||0===(0,R.Cb)(e))return[];const t=(0,I.Zu)(e,this.view.spatialReference);return null!=t?[...new Set([...this.view.graphicsTileStore.boundsIntersections(t[0]),...this.view.graphicsTileStore.boundsIntersections(t[1])])]:this.view.graphicsTileStore.boundsIntersections(e)}_updateTile(a){var e=this;return(0,G.Z)(function*(){(0,F.k_)(e._controller.signal);const t=a.tile,s=e._getGraphicsData(e._templateStore,t,a.addedOrModified),i=yield e._processGraphics(t,s);return(0,F.k_)(e._controller.signal),e._patchTile(t.key,{type:"update",addOrUpdate:i,remove:a.removed,end:!0,clear:!1,sort:!1}),i})()}_patchTile(a,e){const t=this._tiles.get(a);t&&(this.container.onTileData(t,e),this.container.requestRender())}_graphicsChangeHandler(a){const e=this._pendingUpdate;for(const t of a.added)e.added.add(t);for(const t of a.moved)e.updated.add(t);for(const t of a.removed)this._pendingUpdate.added.has(t)?e.added.delete(t):e.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const a={added:[],removed:[],updated:[]};if(!this.graphics)return a;const e=this._pendingUpdate;for(const t of this.graphics.items)e.added.has(t)?a.added.push(t):e.updated.has(t)&&a.updated.push(t);for(const t of e.removed)this._graphicStore.has(t)&&a.removed.push(t);return e.added.clear(),e.removed.clear(),e.updated.clear(),a}_updateGraphics(){var a=this;return(0,G.Z)(function*(){a._processing=!0;const{added:e,removed:t,updated:s}=a._getGraphicsToUpdate(),i=a._tilesToUpdate;let r;try{if(!a._graphicStoreUpdate){const d=a.view.state,{resolution:u}=d;a._graphicStore.updateLevel(u)}const n=[],o=new Array(e.length+t.length);for(let d=0;d<s.length;d++){const u=s[d],y=a._getIntersectingTiles(u);for(const _ of y)r=_.id,Ge(r,_,i).removed.push(a._displayIds.get(u.uid));n.push(a._updateGraphic(u,null)),o[d]=u}const l=s.length;for(let d=0;d<e.length;d++){const u=e[d];o[l+d]=u,a._graphicsSet.add(u),n.push(a._addGraphic(u))}for(const d of t){a._abortProcessingGraphic(d.uid);const u=a._getIntersectingTiles(d);for(const y of u)r=y.id,Ge(r,y,i).removed.push(a._displayIds.get(d.uid));a._graphicsSet.delete(d),a._graphicStore.remove(d)}let h;a._flipUpdatingGraphics(),yield Promise.all(n);for(let d=0;d<o.length;d++){h=o[d];const u=a._getIntersectingTiles(h);for(const y of u)r=y.id,Ge(r,y,i).addedOrModified.push(h)}a._graphicStore.updateZ();const f=[];for(const[d,u]of i)f.push(a._updateTile(u));yield Promise.all(f)}catch(n){(0,F.D_)(n)}for(const n of t)try{const o=yield a._getSymbolForGraphic(n,null);if(o){const l=o.hash();a._hashToExpandedSymbol.delete(l)}}catch(o){(0,F.D_)(o)}i.clear(),a.notifyChange("updating"),a._processing=!1,a._needsProcessing&&(a._needsProcessing=!1,a._updateGraphics())})()}_getArcadeInfo(a){const e=(a.attributes?Object.keys(a.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof a.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return null==a.geometry?null:{geometryType:(0,T.Ji)(a.geometry),spatialReference:re.Z.fromJSON(a.geometry.spatialReference),fields:e}}_getSymbolForGraphic(a,e){return(0,F.k_)(this._controller.signal),null!=a.symbol?Promise.resolve(a.symbol):null!=this._effectiveRenderer?this._effectiveRenderer.getSymbolAsync(a,{scale:this.view.state.scale,signal:null!=e?e.signal:null}):Promise.resolve(this._getNullSymbol(a))}_getCIMSymbol(a,e,t){let s=this._hashToCIM.get(e);if(s)return Promise.resolve(s);const i=(0,v.rW)(a);if(null!=i){if("CIMSymbolReference"===i.type)return s=i,this._hashToCIM.set(e,s),Promise.resolve(s);let r=this._hashToCIMSymbolPromise.get(e);return r||(r=i.fetchCIMSymbol(t).then(n=>(this._hashToCIM.set(e,n.data),this._hashToCIMSymbolPromise.delete(e),n)).catch(n=>(this._hashToCIMSymbolPromise.delete(e),(0,F.r9)(n),null)),this._hashToCIMSymbolPromise.set(e,r),r)}return Promise.resolve(null)}_expandCIMSymbol(a,e,t,s){const i=this._hashToExpandedSymbol.get(t);if(i)return Promise.resolve(i);let r=this._hashToExpandedSymbolPromise.get(t);if(r)return r;const n=this.container.stage,o=this._getArcadeInfo(e),l=(0,Ae.q5)(null),h=(0,vt.createSymbolSchema)(a,l);return r=(0,gt.B)(h,o,n.resourceManager,s),this._hashToExpandedSymbolPromise.set(t,r),r.then(f=>(this._hashToExpandedSymbol.set(t,f),this._hashToExpandedSymbolPromise.delete(t),f)),r}_getSymbolResources(a,e){var t=this;return(0,G.Z)(function*(){return(0,F.k_)(t._controller.signal),t.container.stage?t._getSymbolForGraphic(a,e).then(s=>{if(!s)return null;const i=s.hash();return t._getCIMSymbol(s,i,e).then(r=>null==r?null:t._expandCIMSymbol(r,a,i,e).then(n=>{const o=n.layers.filter(l=>"text"===l.type&&"string"==typeof l.text);if(o&&o.length>0){const l=new Array(o.length);for(let f=0;f<o.length;f++){const d=o[f],u=[],[y]=(0,j.E)(d.text);d.text=y,"text"===s.type&&(d.lineWidth=s.lineWidth);for(let _=0;_<y.length;_++)u.push(y.charCodeAt(_));l[f]={symbol:d,id:f,glyphIds:u}}const h=new Map;return t.container.getMaterialItems(l).then(f=>{(0,se.O3)(f);for(let d=0;d<o.length;d++){const u=o[d];h.set(u.cim,{text:u.text,mosaicItem:f[d].mosaicItem})}return{symbol:n,textInfo:h,hash:i}})}return{symbol:n,hash:i}}))}).catch(s=>((0,F.r9)(s),null)):null})()}_projectAndNormalizeGeometry(a,e){var t=this;return(0,G.Z)(function*(){if((0,F.k_)(t._controller.signal),null==a.geometry||"mesh"===a.geometry.type)return null;let s=a.geometry;if((0,T.oU)(s))s.rings=s.rings;else if((0,T.l9)(s))s.paths=s.paths;else if((0,T.YX)(s)){const n=yield t._getSymbolForGraphic(a,e);(0,F.k_)(t._controller.signal),s=n&&((0,I.yA)(n.type)||(0,I.ab)(n.type))?s.center:(0,I.XA)(s)}yield(0,Te._W)(s.spatialReference,t.view.spatialReference);const i=(0,E.SR)(s),r=(0,Te.iV)(i,s.spatialReference,t.view.spatialReference);return r&&(0,z.pW)(r),r})()}_onTileUpdate(a){const e=(0,K.C5)(this.view.spatialReference);if(a.added&&a.added.length>0)for(const t of a.added)this._addNewTile(t,e);if(a.removed&&a.removed.length>0)for(const t of a.removed)this._removeTile(t.key)}_addGraphic(a){var e=this;return(0,G.Z)(function*(){e._abortProcessingGraphic(a.uid),(0,F.k_)(e._controller.signal);const t=new AbortController;e._graphicIdToAbortController.set(a.uid,t);const s={signal:t.signal};try{yield e._addOrUpdateGraphic(a,s),(0,F.k_)(e._controller.signal),e._graphicIdToAbortController.delete(a.uid)}catch(i){if(e._graphicIdToAbortController.delete(a.uid),!(0,F.D_)(i))throw i}})()}_updateGraphic(a,e){(0,F.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(a,e),s=this._getSymbolResources(a,e);return Promise.all([t,s]).then(([i,r])=>{(0,F.k_)(this._controller.signal),this._graphicStore.addOrModify(a,r,i)})}_addOrUpdateGraphic(a,e){(0,F.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(a,e),s=this._getSymbolResources(a,e);return Promise.all([t,s]).then(([i,r])=>{(0,F.k_)(this._controller.signal),this._graphicsSet.has(a)&&this._graphicStore.addOrModify(a,r,i)})}_addTile(a){const e=this.view.featuresTilingScheme.getTileBounds((0,R.Ue)(),a),t=this.view.featuresTilingScheme.getTileResolution(a.level),s=new xe(a,t,e[0],e[3]);return this._tiles.set(a,s),this.container.addChild(s),s}_addNewTile(a,e){var t=this;return(0,G.Z)(function*(){const s=t._addTile(a.key),i=t._graphicStore.queryTileData(t._templateStore,a);if(0===i.length)return;if(e){const n=Math.round((e.valid[1]-e.valid[0])/a.resolution);for(const o of i)o.geometry&&((0,T.wp)(o.geometry)||(0,T.aW)(o.geometry))&&t._wrapPoints(o,n)}const r=a.key;t._tileUpdateSet.add(a.key),t.notifyChange("updating");try{const n={type:"update",clear:!1,addOrUpdate:yield t._processGraphics(a,i),remove:[],end:!0,sort:!1};s.patch(n),t._tileUpdateSet.delete(r),t.notifyChange("updating")}catch(n){if(t._tileUpdateSet.delete(r),t.notifyChange("updating"),!(0,F.D_)(n))throw n}})()}_removeTile(a){if(!this._tiles.has(a))return;const e=this._tiles.get(a);this.container.removeChild(e),e.destroy(),this._tiles.delete(a)}_setFilterState(a,e){const t=this._displayIds.get(a),s=this._attributeStore.getHighlightFlag(a);this._attributeStore.setData(t,0,0,s|(e?g.g3:0))}_getGraphicsData(a,e,t){const i=(0,K.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(a,e,t);if(i){const n=Math.round((i.valid[1]-i.valid[0])/e.resolution);for(const o of r)o.geometry&&((0,T.wp)(o.geometry)||(0,T.aW)(o.geometry))&&this._wrapPoints(o,n)}return r}_wrapPoints(a,e){const t=a.geometry;(0,T.aW)(t)?this._wrapMultipoint(t,e):this._wrapPoint(a,e)}_wrapMultipoint(a,e){const t=a.points,s=[];let i=0,r=0;for(const[n,o]of t){if(s.push([n+i,o]),i=0,e===I.i9){const l=5*I.OC;n+r<l?(s.push([e,0]),i=-e):n+r>I.i9-l&&(s.push([-e,0]),i=e)}else n+r<-I.OC?(s.push([e,0]),i=-e):n+r>I.i9+I.OC&&(s.push([-e,0]),i=e);r+=n}a.points=s}_wrapPoint(a,e){const t=a.geometry;if(e===I.i9){const s=5*I.OC;t.x<s?a.geometry={points:[[t.x,t.y],[e,0]]}:t.x>I.i9-s&&(a.geometry={points:[[t.x,t.y],[-e,0]]})}else t.x<-I.OC?a.geometry={points:[[t.x,t.y],[e,0]]}:t.x>I.i9+I.OC&&(a.geometry={points:[[t.x,t.y],[-e,0]]})}_processGraphics(a,e,t){if(!e||!e.length||!this._meshFactory)return Promise.resolve(null);const s=Re.from(e,this.uid,a.transform),i=this._meshFactory;return this._matcher.then(r=>i.analyzeGraphics(s,this.container.stage.resourceManager,r,null,null,t).then(()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(a,s))))}_processAnalyzedGraphics(a,e){const t=this._meshFactory,s=e.getSize(),i=e.getCursor(),n=new tt._(a.key.id,{features:s,records:s,metrics:0},p.mD.DEFAULT,!1,!1),o=[];for(;i.next();){const d=i.readGraphic();d.insertAfter=-1===d.insertAfter?-1:this._displayIds.get(d.insertAfter),d.displayId=this._displayIds.get(d.attributes[this.uid]);const u=new oe(d.displayId);u.insertAfter=d.insertAfter,o.push(u),t.writeGraphic(n,i,a.level,this.container.stage.resourceManager)}const h=n.serialize(a.tileInfoView.tileInfo.isWrappable);return 1!==h.length?new N:N.fromVertexData(h[0].message,o)}_abortProcessingGraphic(a){this._graphicIdToAbortController.get(a)?.abort()}_getNullSymbol(a){const e=a.geometry;return(0,T.l9)(e)?c.mW:(0,T.oU)(e)||(0,T.YX)(e)?c.kD:this.defaultPointSymbolEnabled?c.G:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};(0,O._)([(0,P.Cb)()],V.prototype,"_effectiveRenderer",null),(0,O._)([(0,P.Cb)({constructOnly:!0})],V.prototype,"requestUpdateCallback",void 0),(0,O._)([(0,P.Cb)()],V.prototype,"container",void 0),(0,O._)([(0,P.Cb)({constructOnly:!0})],V.prototype,"graphics",void 0),(0,O._)([(0,P.Cb)()],V.prototype,"renderer",void 0),(0,O._)([(0,P.Cb)()],V.prototype,"updating",null),(0,O._)([(0,P.Cb)()],V.prototype,"view",void 0),(0,O._)([(0,P.Cb)()],V.prototype,"updateRequested",void 0),(0,O._)([(0,P.Cb)()],V.prototype,"defaultPointSymbolEnabled",void 0),V=(0,O._)([(0,me.j)("esri.views.2d.layers.support.GraphicsView2D")],V);const Ct=V}}]);