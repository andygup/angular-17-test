"use strict";(self.webpackChunkangular_17_test=self.webpackChunkangular_17_test||[]).push([[7190],{67190:(j,p,e)=>{e.r(p),e.d(p,{default:()=>h});var t=e(50484),u=e(89317),o=e(80543),d=e(1535),y=(e(57678),e(14007),e(10141)),c=e(43814),a=e(57353),v=e(66716);const i=new(e(84303).X)({startingPoint:"starting-point",barrier:"barrier"});let n=class extends u.wq{constructor(s){super(s),this.globalId=null,this.isFilterBarrier=!1,this.percentAlong=null,this.terminalId=null,this.type=null}};(0,t._)([(0,o.Cb)({type:String,json:{write:!0}})],n.prototype,"globalId",void 0),(0,t._)([(0,o.Cb)({type:Boolean,json:{write:!0}})],n.prototype,"isFilterBarrier",void 0),(0,t._)([(0,o.Cb)({type:Number,json:{write:!0}})],n.prototype,"percentAlong",void 0),(0,t._)([(0,o.Cb)({type:Number,json:{write:!0}})],n.prototype,"terminalId",void 0),(0,t._)([(0,o.Cb)({type:i.apiValues,json:{type:i.jsonValues,read:{reader:i.read,source:"traceLocationType"},write:{writer:i.write,target:"traceLocationType"}}})],n.prototype,"type",void 0),n=(0,t._)([(0,y.j)("esri.rest.networks.support.TraceLocation")],n);const C=n;var l;let r=l=class extends u.wq{static from(s){return(0,d.TJ)(l,s)}constructor(s){super(s),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}};(0,t._)([(0,o.Cb)({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],r.prototype,"namedTraceConfigurationGlobalId",void 0),(0,t._)([(0,o.Cb)({type:String,json:{write:!0}})],r.prototype,"gdbVersion",void 0),(0,t._)([(0,o.Cb)({type:[C],json:{write:!0}})],r.prototype,"traceLocations",void 0),(0,t._)([(0,o.Cb)({type:Date,json:{type:Number,write:{writer:(s,b)=>{b.moment=s?s.getTime():null}}}})],r.prototype,"moment",void 0),(0,t._)([(0,o.Cb)({type:c.Z,json:{read:!1}})],r.prototype,"outSpatialReference",void 0),(0,t._)([(0,o.Cb)({type:v.Z,json:{write:!0}})],r.prototype,"traceConfiguration",void 0),(0,t._)([(0,o.Cb)({type:[Object],json:{write:!0}})],r.prototype,"resultTypes",void 0),(0,t._)([(0,o.Cb)({type:a.Fh.apiValues,json:{type:a.Fh.jsonValues,read:a.Fh.read,write:a.Fh.write}})],r.prototype,"traceType",void 0),r=l=(0,t._)([(0,y.j)("esri.rest.networks.support.TraceParameters")],r);const h=r}}]);