"use strict";(self.webpackChunkangular_17_test=self.webpackChunkangular_17_test||[]).push([[7091],{3380:(X,B,l)=>{var o,r;l.d(B,{B:()=>o}),(r=o||(o={}))[r.Texture=0]="Texture",r[r.RenderBuffer=1]="RenderBuffer"},17091:(X,B,l)=>{l.d(B,{x:()=>S});var o=l(57964),G=(l(14007),l(55117)),D=l(35208),C=l(99273),R=l(39237),U=l(3380),F=l(22784);class c extends F.X{constructor(E,T){switch(super(),this.context=E,Object.assign(this,T),this.internalFormat){case R.lP.R16F:case R.lP.R16I:case R.lP.R16UI:case R.lP.R32F:case R.lP.R32I:case R.lP.R32UI:case R.lP.R8_SNORM:case R.lP.R8:case R.lP.R8I:case R.lP.R8UI:this.pixelFormat=R.VI.RED}}static validate(E,T){return new c(E,T)}}let S=class{constructor(e,E=null,T=null){if(this.type=U.B.Texture,this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,"context"in e)this._descriptor=e,T=E;else{const i=c.validate(e,E);if(!i)throw new o.Z("Texture descriptor invalid");this._descriptor=i}if(this._descriptor.context.type!==C.zO.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),x(this._descriptor.target)))throw new o.Z("3D and array textures are not supported in WebGL1");this._descriptor.target===R.No.TEXTURE_CUBE_MAP?this._setDataCubeMap(T):this.setData(T)}get glName(){return this._glName}get descriptor(){return this._descriptor}get gpuMemoryUsage(){return H.delete(this),(0,F.G)(this._descriptor)}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._glName&&this._descriptor.context.instanceCounter.decrement(R._g.Texture,this),this._descriptor.context.gl&&this._glName&&(this._descriptor.context.unbindTexture(this),this._descriptor.context.gl.deleteTexture(this._glName),this._glName=null)}release(){this.dispose()}resize(e,E){const T=this._descriptor;if(T.width!==e||T.height!==E){if(this._wasImmutablyAllocated)throw new o.Z("Immutable textures can't be resized!");T.width=e,T.height=E,this._descriptor.target===R.No.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(e=null){for(let E=R.No.TEXTURE_CUBE_MAP_POSITIVE_X;E<=R.No.TEXTURE_CUBE_MAP_NEGATIVE_Z;E++)this._setData(e,E)}setData(e){this._setData(e)}_setData(e,E){if(!this._descriptor.context?.gl)return;const T=this._descriptor.context.gl;(0,D.zu)(T),this._glName||(this._glName=T.createTexture(),this._glName&&this._descriptor.context.instanceCounter.increment(R._g.Texture,this)),void 0===e&&(e=null);const i=this._descriptor,s=E??i.target,n=x(s);null===e&&(i.width=i.width||4,i.height=i.height||4,n&&(i.depth=i.depth??1));const _=this._descriptor.context.bindTexture(this,S.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(S.TEXTURE_UNIT_FOR_UPDATES),p(this._descriptor.context,i),this._configurePixelStorage(),(0,D.zu)(T);const a=this._deriveInternalFormat();if(w(e)){let t="width"in e?e.width:e.codedWidth,I="height"in e?e.height:e.codedHeight;const M=1;e instanceof HTMLVideoElement&&(t=e.videoWidth,I=e.videoHeight),i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(s,a,i.hasMipmap,t,I,M),this._texImage(s,0,a,t,I,M,e),(0,D.zu)(T),i.hasMipmap&&this.generateMipmap(),i.width||(i.width=t),i.height||(i.height=I),n&&!i.depth&&(i.depth=M)}else{const{width:t,height:I,depth:M}=i;if(null==t||null==I)throw new o.Z("Width and height must be specified!");if(n&&null==M)throw new o.Z("Depth must be specified!");if(i.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(s,a,i.hasMipmap,t,I,M),P(e)){const d=e.levels,f=b(s,t,I,M),m=Math.min(f-1,d.length-1);null!=this._descriptor.context.gl2?T.texParameteri(i.target,this._descriptor.context.gl2.TEXTURE_MAX_LEVEL,m):i.hasMipmap=i.hasMipmap&&f===d.length;const L=a;if(!function g(e){return e in R.q_}(L))throw new o.Z("Attempting to use compressed data with an uncompressed format!");this._forEachMipmapLevel((V,Y,W,Z)=>{const K=d[Math.min(V,d.length-1)];this._compressedTexImage(s,V,L,Y,W,Z,K)},m)}else this._texImage(s,0,a,t,I,M,e),(0,D.zu)(T),i.hasMipmap&&this.generateMipmap()}h(T,this._descriptor),u(T,this._descriptor),function A(e,E){const T=e.capabilities.textureFilterAnisotropic;T&&e.gl.texParameterf(E.target,T.TEXTURE_MAX_ANISOTROPY,E.maxAnisotropy??1)}(this._descriptor.context,this._descriptor),(0,D.zu)(T),this._descriptor.context.bindTexture(_,S.TEXTURE_UNIT_FOR_UPDATES)}updateData(e,E,T,i,s,n,_=0){n||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const a=this._descriptor.context.gl,t=this._descriptor.context.gl2,I=this._descriptor,M=this._deriveInternalFormat(),{pixelFormat:d,dataType:f,target:m,isImmutable:L}=I;if(L&&!this._wasImmutablyAllocated)throw new o.Z("Cannot update immutable texture before allocation!");const V=this._descriptor.context.bindTexture(this,S.TEXTURE_UNIT_FOR_UPDATES,!0);if((E<0||T<0||i>I.width||s>I.height||E+i>I.width||T+s>I.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),_){if(!t)return void console.error("Webgl2 must be enabled to use dataRowOffset!");a.pixelStorei(t.UNPACK_SKIP_ROWS,_)}if(w(n)?t?t.texSubImage2D(m,e,E,T,i,s,d,f,n):a.texSubImage2D(m,e,E,T,d,f,n):P(n)?a.compressedTexSubImage2D(m,e,E,T,i,s,M,n.levels[e]):a.texSubImage2D(m,e,E,T,i,s,d,f,n),_){if(!t)return void console.error("Webgl2 must be enabled to use dataRowOffset!");a.pixelStorei(t.UNPACK_SKIP_ROWS,0)}this._descriptor.context.bindTexture(V,S.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(e,E,T,i,s,n,_,a){a||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const t=this._descriptor.context.gl2;if(null==t)throw new o.Z("3D textures are not supported in WebGL1");const I=this._descriptor,M=this._deriveInternalFormat(),{pixelFormat:d,dataType:f,isImmutable:m,target:L}=I;if(m&&!this._wasImmutablyAllocated)throw new o.Z("Cannot update immutable texture before allocation!");x(L)||console.warn("Attempting to set 3D texture data on a non-3D texture");const V=this._descriptor.context.bindTexture(this,S.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(S.TEXTURE_UNIT_FOR_UPDATES),(E<0||T<0||i<0||s>I.width||n>I.height||_>I.depth||E+s>I.width||T+n>I.height||i+_>I.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage(),P(a)?t.compressedTexSubImage3D(L,e,E,T,i,s,n,_,M,a=a.levels[e]):t.texSubImage3D(L,e,E,T,i,s,n,_,d,f,a),this._descriptor.context.bindTexture(V,S.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const e=this._descriptor;if(!e.hasMipmap){if(this._wasImmutablyAllocated)throw new o.Z("Cannot add mipmaps to immutable texture after allocation");e.hasMipmap=!0,this._samplingModeDirty=!0,p(this._descriptor.context,e)}e.samplingMode===R.cw.LINEAR?(this._samplingModeDirty=!0,e.samplingMode=R.cw.LINEAR_MIPMAP_NEAREST):e.samplingMode===R.cw.NEAREST&&(this._samplingModeDirty=!0,e.samplingMode=R.cw.NEAREST_MIPMAP_NEAREST);const E=this._descriptor.context.bindTexture(this,S.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(S.TEXTURE_UNIT_FOR_UPDATES),this._descriptor.context.gl.generateMipmap(e.target),this._descriptor.context.bindTexture(E,S.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,this._samplingModeDirty=!0)}setWrapMode(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,p(this._descriptor.context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const e=this._descriptor.context.gl,E=this._descriptor;this._samplingModeDirty&&(h(e,E),this._samplingModeDirty=!1),this._wrapModeDirty&&(u(e,E),this._wrapModeDirty=!1)}_deriveInternalFormat(){if(this._descriptor.context.type===C.zO.WEBGL1)return this._descriptor.internalFormat=this._descriptor.pixelFormat;if(null!=this._descriptor.internalFormat)return this._descriptor.internalFormat===R.VI.DEPTH_STENCIL&&(this._descriptor.internalFormat=R.VI.DEPTH24_STENCIL8),this._descriptor.internalFormat;switch(this._descriptor.dataType){case R.Br.FLOAT:switch(this._descriptor.pixelFormat){case R.VI.RGBA:return this._descriptor.internalFormat=R.lP.RGBA32F;case R.VI.RGB:return this._descriptor.internalFormat=R.lP.RGB32F;default:throw new o.Z("Unable to derive format")}case R.Br.UNSIGNED_BYTE:switch(this._descriptor.pixelFormat){case R.VI.RGBA:return this._descriptor.internalFormat=R.lP.RGBA8;case R.VI.RGB:return this._descriptor.internalFormat=R.lP.RGB8}}return this._descriptor.internalFormat=this._descriptor.pixelFormat===R.VI.DEPTH_STENCIL?R.VI.DEPTH24_STENCIL8:this._descriptor.pixelFormat}_configurePixelStorage(){const e=this._descriptor.context.gl,{unpackAlignment:E,flipped:T,preMultiplyAlpha:i}=this._descriptor;e.pixelStorei(e.UNPACK_ALIGNMENT,E),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,T?1:0),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i?1:0)}_texStorage(e,E,T,i,s,n){const _=this._descriptor.context.gl2;if(null==_)throw new o.Z("Immutable textures are not supported in WebGL1");if(!function O(e){return e in R.lP}(E))throw new o.Z("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;const a=T?b(e,i,s,n):1;if(x(e)){if(null==n)throw new o.Z("Missing depth dimension for 3D texture upload");_.texStorage3D(e,a,E,i,s,n)}else _.texStorage2D(e,a,E,i,s);this._wasImmutablyAllocated=!0}_texImage(e,E,T,i,s,n,_){const a=this._descriptor.context.gl,t=x(e),{isImmutable:I,pixelFormat:M,dataType:d}=this._descriptor,f=this._descriptor.context.type===C.zO.WEBGL2,m=f?a:null;if(f||!w(_))if(I){if(null!=_){const L=_;if(t){if(null==n)throw new o.Z("Missing depth dimension for 3D texture upload");m.texSubImage3D(e,E,0,0,0,i,s,n,M,d,L)}else a.texSubImage2D(e,E,0,0,i,s,M,d,L)}}else{const L=_;if(t){if(null==n)throw new o.Z("Missing depth dimension for 3D texture upload");m.texImage3D(e,E,T,i,s,n,0,M,d,L)}else a.texImage2D(e,E,T,i,s,0,M,d,L)}else a.texImage2D(e,0,T,M,d,_)}_compressedTexImage(e,E,T,i,s,n,_){const a=this._descriptor.context.gl;let t=null;const I=x(e),M=this._descriptor.isImmutable;if(I){if(this._descriptor.context.type!==C.zO.WEBGL2)throw new o.Z("3D textures are not supported in WebGL1");t=a}if(M){if(null!=_)if(I){if(null==n)throw new o.Z("Missing depth dimension for 3D texture upload");t.compressedTexSubImage3D(e,E,0,0,0,i,s,n,T,_)}else a.compressedTexSubImage2D(e,E,0,0,i,s,T,_)}else if(I){if(null==n)throw new o.Z("Missing depth dimension for 3D texture upload");t.compressedTexImage3D(e,E,T,i,s,n,0,_)}else a.compressedTexImage2D(e,E,T,i,s,0,_)}_forEachMipmapLevel(e,E=1/0){let{width:T,height:i,depth:s,hasMipmap:n,target:_}=this._descriptor;const a=_===R.No.TEXTURE_3D;if(null==T||null==i||a&&null==s)throw new o.Z("Missing texture dimensions for mipmap calculation");for(let t=0;e(t,T,i,s),n&&(1!==T||1!==i||a&&1!==s)&&!(t>=E);++t)T=Math.max(1,T>>1),i=Math.max(1,i>>1),a&&(s=Math.max(1,s>>1))}};function p(e,E){(null!=E.width&&E.width<0||null!=E.height&&E.height<0||null!=E.depth&&E.depth<0)&&console.error("Negative dimension parameters are not allowed!");const T=e.type===C.zO.WEBGL2;T||!E.isImmutable&&!x(E.target)||console.error("Immutable and 3D-like textures are not supported in WebGL1!"),!T&&(null!=E.width&&(0,G.wt)(E.width)&&null!=E.height&&(0,G.wt)(E.height)||("number"==typeof E.wrapMode?E.wrapMode!==R.e8.CLAMP_TO_EDGE&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):E.wrapMode.s===R.e8.CLAMP_TO_EDGE&&E.wrapMode.t===R.e8.CLAMP_TO_EDGE||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),E.hasMipmap&&console.error("Mipmapping requires power-of-two textures!")))}function h(e,E){let T=E.samplingMode,i=E.samplingMode;T===R.cw.LINEAR_MIPMAP_NEAREST||T===R.cw.LINEAR_MIPMAP_LINEAR?(T=R.cw.LINEAR,E.hasMipmap||(i=R.cw.LINEAR)):T!==R.cw.NEAREST_MIPMAP_NEAREST&&T!==R.cw.NEAREST_MIPMAP_LINEAR||(T=R.cw.NEAREST,E.hasMipmap||(i=R.cw.NEAREST)),e.texParameteri(E.target,e.TEXTURE_MAG_FILTER,T),e.texParameteri(E.target,e.TEXTURE_MIN_FILTER,i)}function u(e,E){"number"==typeof E.wrapMode?(e.texParameteri(E.target,e.TEXTURE_WRAP_S,E.wrapMode),e.texParameteri(E.target,e.TEXTURE_WRAP_T,E.wrapMode)):(e.texParameteri(E.target,e.TEXTURE_WRAP_S,E.wrapMode.s),e.texParameteri(E.target,e.TEXTURE_WRAP_T,E.wrapMode.t))}function P(e){return null!=e&&"type"in e&&"compressed"===e.type}function w(e){return null!=e&&!P(e)&&!function v(e){return null!=e&&"byteLength"in e}(e)}function x(e){return e===R.No.TEXTURE_3D||e===R.No.TEXTURE_2D_ARRAY}function b(e,E,T,i=1){let s=Math.max(E,T);return e===R.No.TEXTURE_3D&&(s=Math.max(s,i)),Math.round(Math.log(s)/Math.LN2)+1}S.TEXTURE_UNIT_FOR_UPDATES=0;const H=new Map},22784:(X,B,l)=>{l.d(B,{G:()=>D,X:()=>G});var o=l(39237),r=l(54731);class G{constructor(R=0,U=R){this.width=R,this.height=U,this.target=o.No.TEXTURE_2D,this.pixelFormat=o.VI.RGBA,this.dataType=o.Br.UNSIGNED_BYTE,this.samplingMode=o.cw.LINEAR,this.wrapMode=o.e8.REPEAT,this.maxAnisotropy=1,this.flipped=!1,this.hasMipmap=!1,this.isOpaque=!1,this.unpackAlignment=4,this.preMultiplyAlpha=!1,this.depth=1,this.isImmutable=!1}}function D(C){return C.width<=0||C.height<=0?0:C.width*C.height*(C.hasMipmap?4/3:1)*(null==C.internalFormat?4:(0,r.RG)(C.internalFormat))}},54731:(X,B,l)=>{l.d(B,{HH:()=>G,RG:()=>F,UF:()=>U,XP:()=>R}),l(14007);var r=l(39237);function G(c){const N=c.gl;switch(N.getError()){case N.NO_ERROR:return null;case N.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case N.INVALID_VALUE:return"An unacceptable value has been specified for an argument";case N.INVALID_OPERATION:return"The specified command is not allowed for the current state";case N.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case N.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case N.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function R(c,N,S,p,h=0){const u=c.gl;c.bindBuffer(S);for(const A of p){const O=N.get(A.name);void 0===O&&console.error(`There is no location for vertex attribute '${A.name}' defined.`);const g=h*A.stride;if(A.count<=4)u.vertexAttribPointer(O,A.count,A.type,A.normalized,A.stride,A.offset+g),u.enableVertexAttribArray(O),A.divisor>0&&c.gl2?.vertexAttribDivisor(O,A.divisor);else if(9===A.count)for(let P=0;P<3;P++)u.vertexAttribPointer(O+P,3,A.type,A.normalized,A.stride,A.offset+12*P+g),u.enableVertexAttribArray(O+P),A.divisor>0&&c.gl2?.vertexAttribDivisor(O+P,A.divisor);else if(16===A.count)for(let P=0;P<4;P++)u.vertexAttribPointer(O+P,4,A.type,A.normalized,A.stride,A.offset+16*P+g),u.enableVertexAttribArray(O+P),A.divisor>0&&c.gl2?.vertexAttribDivisor(O+P,A.divisor);else console.error("Unsupported vertex attribute element count: "+A.count)}}function U(c,N,S,p){const h=c.gl;c.bindBuffer(S);for(const u of p){const A=N.get(u.name);if(u.count<=4)h.disableVertexAttribArray(A),u.divisor&&u.divisor>0&&c.gl2?.vertexAttribDivisor(A,0);else if(9===u.count)for(let O=0;O<3;O++)h.disableVertexAttribArray(A+O),u.divisor&&u.divisor>0&&c.gl2?.vertexAttribDivisor(A+O,0);else if(16===u.count)for(let O=0;O<4;O++)h.disableVertexAttribArray(A+O),u.divisor&&u.divisor>0&&c.gl2?.vertexAttribDivisor(A+O,0);else console.error("Unsupported vertex attribute element count: "+u.count)}c.unbindBuffer(r.w0.ARRAY_BUFFER)}function F(c){switch(c){case r.VI.ALPHA:case r.VI.LUMINANCE:case r.VI.RED:case r.VI.RED_INTEGER:case r.lP.R8:case r.lP.R8I:case r.lP.R8UI:case r.lP.R8_SNORM:case r.Tg.STENCIL_INDEX8:return 1;case r.VI.LUMINANCE_ALPHA:case r.VI.RG:case r.VI.RG_INTEGER:case r.lP.RGBA4:case r.lP.R16F:case r.lP.R16I:case r.lP.R16UI:case r.lP.RG8:case r.lP.RG8I:case r.lP.RG8UI:case r.lP.RG8_SNORM:case r.lP.RGB565:case r.lP.RGB5_A1:case r.Tg.DEPTH_COMPONENT16:return 2;case r.VI.DEPTH_COMPONENT:case r.VI.RGB:case r.VI.RGB_INTEGER:case r.lP.RGB8:case r.lP.RGB8I:case r.lP.RGB8UI:case r.lP.RGB8_SNORM:case r.lP.SRGB8:case r.Tg.DEPTH_COMPONENT24:return 3;case r.VI.DEPTH_STENCIL:case r.VI.DEPTH24_STENCIL8:case r.VI.RGBA:case r.VI.RGBA_INTEGER:case r.lP.RGBA8:case r.lP.R32F:case r.lP.R11F_G11F_B10F:case r.lP.RG16F:case r.lP.R32I:case r.lP.R32UI:case r.lP.RG16I:case r.lP.RG16UI:case r.lP.RGBA8I:case r.lP.RGBA8UI:case r.lP.RGBA8_SNORM:case r.lP.SRGB8_ALPHA8:case r.lP.RGB9_E5:case r.lP.RGB10_A2UI:case r.lP.RGB10_A2:case r.Tg.DEPTH_STENCIL:case r.Tg.DEPTH_COMPONENT32F:case r.Tg.DEPTH24_STENCIL8:return 4;case r.Tg.DEPTH32F_STENCIL8:return 5;case r.lP.RGB16F:case r.lP.RGB16I:case r.lP.RGB16UI:return 6;case r.lP.RG32F:case r.lP.RG32I:case r.lP.RG32UI:case r.lP.RGBA16F:case r.lP.RGBA16I:case r.lP.RGBA16UI:return 8;case r.lP.RGB32F:case r.lP.RGB32I:case r.lP.RGB32UI:return 12;case r.lP.RGBA32F:case r.lP.RGBA32I:case r.lP.RGBA32UI:return 16;case r.q_.COMPRESSED_RGB_S3TC_DXT1_EXT:case r.q_.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case r.q_.COMPRESSED_RGBA_S3TC_DXT3_EXT:case r.q_.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case r.q_.COMPRESSED_R11_EAC:case r.q_.COMPRESSED_SIGNED_R11_EAC:case r.q_.COMPRESSED_RGB8_ETC2:case r.q_.COMPRESSED_SRGB8_ETC2:case r.q_.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case r.q_.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case r.q_.COMPRESSED_RG11_EAC:case r.q_.COMPRESSED_SIGNED_RG11_EAC:case r.q_.COMPRESSED_RGBA8_ETC2_EAC:case r.q_.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}},35208:(X,B,l)=>{l.d(B,{CG:()=>F,hZ:()=>U,zu:()=>c});var o=l(57964),r=l(14007);const D=l(4703).Z.getLogger("esri.views.webgl.checkWebGLError"),R=!!(0,r.Z)("enable-feature:webgl-debug");function U(){return R}function F(){return R}function c(N){if(U()){const S=N.getError();if(S){const p=function C(N,S){switch(S){case N.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case N.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case N.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case N.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case N.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case N.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(N,S),h=(new Error).stack;D.error(new o.Z("webgl-error","WebGL error occurred",{message:p,stack:h}))}}}},39237:(X,B,l)=>{var o,r,G,D,C,R,U,F,c,N,S,p,h,u,A,O,g,P,v,w,t;l.d(B,{Br:()=>O,Ho:()=>v,LR:()=>R,Lu:()=>e,MX:()=>r,No:()=>h,Se:()=>T,Tg:()=>g,V1:()=>x,V7:()=>_,VI:()=>u,VY:()=>y,Wf:()=>U,Xg:()=>H,Y5:()=>n,_g:()=>b,cw:()=>S,db:()=>D,e8:()=>p,g:()=>F,l1:()=>P,lP:()=>A,lk:()=>o,q_:()=>E,qi:()=>w,w0:()=>C,wb:()=>c,xS:()=>N,zi:()=>G}),(t=o||(o={}))[t.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",t[t.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",t[t.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT",function(t){t[t.POINTS=0]="POINTS",t[t.LINES=1]="LINES",t[t.LINE_LOOP=2]="LINE_LOOP",t[t.LINE_STRIP=3]="LINE_STRIP",t[t.TRIANGLES=4]="TRIANGLES",t[t.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",t[t.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(r||(r={})),function(t){t[t.ZERO=0]="ZERO",t[t.ONE=1]="ONE",t[t.SRC_COLOR=768]="SRC_COLOR",t[t.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",t[t.SRC_ALPHA=770]="SRC_ALPHA",t[t.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",t[t.DST_ALPHA=772]="DST_ALPHA",t[t.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",t[t.DST_COLOR=774]="DST_COLOR",t[t.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",t[t.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",t[t.CONSTANT_COLOR=32769]="CONSTANT_COLOR",t[t.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",t[t.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",t[t.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA"}(G||(G={})),function(t){t[t.ADD=32774]="ADD",t[t.MIN=32775]="MIN",t[t.MAX=32776]="MAX",t[t.SUBTRACT=32778]="SUBTRACT",t[t.REVERSE_SUBTRACT=32779]="REVERSE_SUBTRACT"}(D||(D={})),function(t){t[t.ARRAY_BUFFER=34962]="ARRAY_BUFFER",t[t.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",t[t.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",t[t.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",t[t.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",t[t.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",t[t.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER"}(C||(C={})),function(t){t[t.FRONT=1028]="FRONT",t[t.BACK=1029]="BACK",t[t.FRONT_AND_BACK=1032]="FRONT_AND_BACK"}(R||(R={})),function(t){t[t.CW=2304]="CW",t[t.CCW=2305]="CCW"}(U||(U={})),function(t){t[t.BYTE=5120]="BYTE",t[t.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",t[t.SHORT=5122]="SHORT",t[t.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",t[t.INT=5124]="INT",t[t.UNSIGNED_INT=5125]="UNSIGNED_INT",t[t.FLOAT=5126]="FLOAT"}(F||(F={})),function(t){t[t.NEVER=512]="NEVER",t[t.LESS=513]="LESS",t[t.EQUAL=514]="EQUAL",t[t.LEQUAL=515]="LEQUAL",t[t.GREATER=516]="GREATER",t[t.NOTEQUAL=517]="NOTEQUAL",t[t.GEQUAL=518]="GEQUAL",t[t.ALWAYS=519]="ALWAYS"}(c||(c={})),function(t){t[t.ZERO=0]="ZERO",t[t.KEEP=7680]="KEEP",t[t.REPLACE=7681]="REPLACE",t[t.INCR=7682]="INCR",t[t.DECR=7683]="DECR",t[t.INVERT=5386]="INVERT",t[t.INCR_WRAP=34055]="INCR_WRAP",t[t.DECR_WRAP=34056]="DECR_WRAP"}(N||(N={})),function(t){t[t.NEAREST=9728]="NEAREST",t[t.LINEAR=9729]="LINEAR",t[t.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",t[t.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",t[t.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",t[t.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR"}(S||(S={})),function(t){t[t.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",t[t.REPEAT=10497]="REPEAT",t[t.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT"}(p||(p={})),function(t){t[t.TEXTURE_2D=3553]="TEXTURE_2D",t[t.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",t[t.TEXTURE_3D=32879]="TEXTURE_3D",t[t.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",t[t.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",t[t.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",t[t.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",t[t.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",t[t.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY"}(h||(h={})),function(t){t[t.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",t[t.DEPTH_STENCIL=34041]="DEPTH_STENCIL",t[t.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",t[t.ALPHA=6406]="ALPHA",t[t.RGB=6407]="RGB",t[t.RGBA=6408]="RGBA",t[t.LUMINANCE=6409]="LUMINANCE",t[t.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",t[t.RED=6403]="RED",t[t.RG=33319]="RG",t[t.RED_INTEGER=36244]="RED_INTEGER",t[t.RG_INTEGER=33320]="RG_INTEGER",t[t.RGB_INTEGER=36248]="RGB_INTEGER",t[t.RGBA_INTEGER=36249]="RGBA_INTEGER"}(u||(u={})),function(t){t[t.RGBA4=32854]="RGBA4",t[t.R16F=33325]="R16F",t[t.RG16F=33327]="RG16F",t[t.RGB32F=34837]="RGB32F",t[t.RGBA16F=34842]="RGBA16F",t[t.R32F=33326]="R32F",t[t.RG32F=33328]="RG32F",t[t.RGBA32F=34836]="RGBA32F",t[t.R11F_G11F_B10F=35898]="R11F_G11F_B10F",t[t.RGB8=32849]="RGB8",t[t.RGBA8=32856]="RGBA8",t[t.RGB5_A1=32855]="RGB5_A1",t[t.R8=33321]="R8",t[t.RG8=33323]="RG8",t[t.R8I=33329]="R8I",t[t.R8UI=33330]="R8UI",t[t.R16I=33331]="R16I",t[t.R16UI=33332]="R16UI",t[t.R32I=33333]="R32I",t[t.R32UI=33334]="R32UI",t[t.RG8I=33335]="RG8I",t[t.RG8UI=33336]="RG8UI",t[t.RG16I=33337]="RG16I",t[t.RG16UI=33338]="RG16UI",t[t.RG32I=33339]="RG32I",t[t.RG32UI=33340]="RG32UI",t[t.RGB16F=34843]="RGB16F",t[t.RGB9_E5=35901]="RGB9_E5",t[t.SRGB8=35905]="SRGB8",t[t.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",t[t.RGB565=36194]="RGB565",t[t.RGBA32UI=36208]="RGBA32UI",t[t.RGB32UI=36209]="RGB32UI",t[t.RGBA16UI=36214]="RGBA16UI",t[t.RGB16UI=36215]="RGB16UI",t[t.RGBA8UI=36220]="RGBA8UI",t[t.RGB8UI=36221]="RGB8UI",t[t.RGBA32I=36226]="RGBA32I",t[t.RGB32I=36227]="RGB32I",t[t.RGBA16I=36232]="RGBA16I",t[t.RGB16I=36233]="RGB16I",t[t.RGBA8I=36238]="RGBA8I",t[t.RGB8I=36239]="RGB8I",t[t.R8_SNORM=36756]="R8_SNORM",t[t.RG8_SNORM=36757]="RG8_SNORM",t[t.RGB8_SNORM=36758]="RGB8_SNORM",t[t.RGBA8_SNORM=36759]="RGBA8_SNORM",t[t.RGB10_A2=32857]="RGB10_A2",t[t.RGB10_A2UI=36975]="RGB10_A2UI"}(A||(A={})),function(t){t[t.FLOAT=5126]="FLOAT",t[t.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",t[t.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",t[t.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",t[t.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",t[t.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",t[t.BYTE=5120]="BYTE",t[t.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",t[t.SHORT=5122]="SHORT",t[t.UNSIGNED_INT=5125]="UNSIGNED_INT",t[t.INT=5124]="INT",t[t.HALF_FLOAT=5131]="HALF_FLOAT",t[t.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",t[t.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",t[t.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",t[t.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV"}(O||(O={})),function(t){t[t.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",t[t.STENCIL_INDEX8=36168]="STENCIL_INDEX8",t[t.DEPTH_STENCIL=34041]="DEPTH_STENCIL",t[t.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",t[t.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",t[t.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",t[t.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8"}(g||(g={})),function(t){t[t.STATIC_DRAW=35044]="STATIC_DRAW",t[t.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",t[t.STREAM_DRAW=35040]="STREAM_DRAW",t[t.STATIC_READ=35045]="STATIC_READ",t[t.DYNAMIC_READ=35049]="DYNAMIC_READ",t[t.STREAM_READ=35041]="STREAM_READ",t[t.STATIC_COPY=35046]="STATIC_COPY",t[t.DYNAMIC_COPY=35050]="DYNAMIC_COPY",t[t.STREAM_COPY=35042]="STREAM_COPY"}(P||(P={})),function(t){t[t.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",t[t.VERTEX_SHADER=35633]="VERTEX_SHADER"}(v||(v={})),function(t){t[t.FRAMEBUFFER=36160]="FRAMEBUFFER",t[t.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",t[t.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER"}(w||(w={}));const x=33984;var b,y,H;(function(t){t[t.Texture=0]="Texture",t[t.BufferObject=1]="BufferObject",t[t.VertexArrayObject=2]="VertexArrayObject",t[t.Shader=3]="Shader",t[t.Program=4]="Program",t[t.FramebufferObject=5]="FramebufferObject",t[t.Renderbuffer=6]="Renderbuffer",t[t.Sync=7]="Sync",t[t.UNCOUNTED=8]="UNCOUNTED",t[t.LinesOfCode=8]="LinesOfCode",t[t.Uniform=9]="Uniform",t[t.COUNT=10]="COUNT"})(b||(b={})),function(t){t[t.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",t[t.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",t[t.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",t[t.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",t[t.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",t[t.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",t[t.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",t[t.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",t[t.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",t[t.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",t[t.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",t[t.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",t[t.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",t[t.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",t[t.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",t[t.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15"}(y||(y={})),function(t){t[t.NONE=0]="NONE",t[t.BACK=1029]="BACK"}(H||(H={}));const e=33306;var E,T,i,s,n,_,a;(function(t){t[t.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",t[t.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",t[t.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",t[t.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",t[t.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",t[t.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",t[t.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",t[t.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",t[t.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",t[t.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2",t[t.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",t[t.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",t[t.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",t[t.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"})(E||(E={})),function(t){t[t.FLOAT=5126]="FLOAT",t[t.FLOAT_VEC2=35664]="FLOAT_VEC2",t[t.FLOAT_VEC3=35665]="FLOAT_VEC3",t[t.FLOAT_VEC4=35666]="FLOAT_VEC4",t[t.INT=5124]="INT",t[t.INT_VEC2=35667]="INT_VEC2",t[t.INT_VEC3=35668]="INT_VEC3",t[t.INT_VEC4=35669]="INT_VEC4",t[t.BOOL=35670]="BOOL",t[t.BOOL_VEC2=35671]="BOOL_VEC2",t[t.BOOL_VEC3=35672]="BOOL_VEC3",t[t.BOOL_VEC4=35673]="BOOL_VEC4",t[t.FLOAT_MAT2=35674]="FLOAT_MAT2",t[t.FLOAT_MAT3=35675]="FLOAT_MAT3",t[t.FLOAT_MAT4=35676]="FLOAT_MAT4",t[t.SAMPLER_2D=35678]="SAMPLER_2D",t[t.SAMPLER_CUBE=35680]="SAMPLER_CUBE",t[t.UNSIGNED_INT=5125]="UNSIGNED_INT",t[t.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",t[t.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",t[t.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",t[t.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",t[t.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",t[t.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",t[t.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",t[t.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",t[t.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",t[t.SAMPLER_3D=35679]="SAMPLER_3D",t[t.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",t[t.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",t[t.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",t[t.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",t[t.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",t[t.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",t[t.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",t[t.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",t[t.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",t[t.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",t[t.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",t[t.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY"}(T||(T={})),function(t){t[t.OBJECT_TYPE=37138]="OBJECT_TYPE",t[t.SYNC_CONDITION=37139]="SYNC_CONDITION",t[t.SYNC_STATUS=37140]="SYNC_STATUS",t[t.SYNC_FLAGS=37141]="SYNC_FLAGS"}(i||(i={})),function(t){t[t.UNSIGNALED=37144]="UNSIGNALED",t[t.SIGNALED=37145]="SIGNALED"}(s||(s={})),function(t){t[t.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",t[t.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",t[t.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",t[t.WAIT_FAILED=37149]="WAIT_FAILED"}(n||(n={})),function(t){t[t.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE"}(_||(_={})),function(t){t[t.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT"}(a||(a={}))}}]);