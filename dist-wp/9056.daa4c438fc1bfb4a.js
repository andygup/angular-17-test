"use strict";(self.webpackChunkangular_17_test=self.webpackChunkangular_17_test||[]).push([[9056],{39056:(j,c,t)=>{t.r(c),t.d(c,{synthesizeAssociationGeometries:()=>x});var y=t(15861),m=t(66476),r=t(15462),i=t(50484),f=t(89317),p=t(80543),h=(t(1535),t(57678),t(14007),t(10141)),v=t(3587);let e=class extends f.wq{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};(0,i._)([(0,p.Cb)({type:Boolean,json:{write:!0}})],e.prototype,"maxGeometryCountExceeded",void 0),(0,i._)([(0,p.Cb)({type:[v.Z],json:{write:!0}})],e.prototype,"associations",void 0),e=(0,i._)([(0,h.j)("esri.rest.networks.support.AssociationGeometriesResult")],e);const d=e;function x(o,n,s){return u.apply(this,arguments)}function u(){return(u=(0,y.Z)(function*(o,n,s){const a=(0,r.en)(o),l={...n.toJSON(),f:"json"},G=(0,r.cv)({...a.query,...l});s?s.method="post":s={method:"post"};const g=(0,r.lA)(G,s);return(0,m.Z)(`${a.path}/synthesizeAssociationGeometries`,g).then(S=>function C(o,n){const{data:s}=o,a=d.fromJSON(s);if(n)for(const l of a.associations)l.geometry.spatialReference=n.clone();return a}(S,n.outSpatialReference))})).apply(this,arguments)}}}]);